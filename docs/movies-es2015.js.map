{"version":3,"sources":["./node_modules/@ngrx/router-store/__ivy_ngcc__/fesm2015/ngrx-router-store.js","./src/app/features/movies/components/add-comment/add-comment.component.ts","./src/app/features/movies/components/add-comment/add-comment.component.html","./src/app/features/movies/components/category-preview/category-preview.component.ts","./src/app/features/movies/components/category-preview/category-preview.component.html","./src/app/features/movies/components/confirmation-dialog/confirmation-dialog.component.ts","./src/app/features/movies/components/confirmation-dialog/confirmation-dialog.component.html","./src/app/features/movies/components/form-movie/form-movie.component.ts","./src/app/features/movies/components/form-movie/form-movie.component.html","./src/app/features/movies/components/index.ts","./src/app/features/movies/components/movie-details/movie-details.component.ts","./src/app/features/movies/components/movie-details/movie-details.component.html","./src/app/features/movies/components/movie-preview/movie-preview.component.ts","./src/app/features/movies/components/movie-preview/movie-preview.component.html","./src/app/features/movies/components/preview-comment/preview-comment.component.ts","./src/app/features/movies/components/preview-comment/preview-comment.component.html","./src/app/features/movies/components/search/search.component.ts","./src/app/features/movies/components/search/search.component.html","./src/app/features/movies/components/select-tab-object/select-tab-object.component.ts","./src/app/features/movies/components/select-tab-object/select-tab-object.component.html","./src/app/features/movies/components/select/select.component.ts","./src/app/features/movies/components/select/select.component.html","./src/app/features/movies/containers/add-movie/add-movie.component.ts","./src/app/features/movies/containers/add-movie/add-movie.component.html","./src/app/features/movies/containers/categories-list/categories-list.component.ts","./src/app/features/movies/containers/categories-list/categories-list.component.html","./src/app/features/movies/containers/index.ts","./src/app/features/movies/containers/movie-details-container/movie-details-container.component.ts","./src/app/features/movies/containers/movie-details-container/movie-details-container.component.html","./src/app/features/movies/containers/movies-collection/movies-collection.component.ts","./src/app/features/movies/containers/movies-collection/movies-collection.component.html","./src/app/features/movies/containers/movies-list/movies-list.component.ts","./src/app/features/movies/containers/movies-list/movies-list.component.html","./src/app/features/movies/containers/template/template.component.ts","./src/app/features/movies/containers/template/template.component.html","./src/app/features/movies/containers/update-movie/update-movie.component.ts","./src/app/features/movies/containers/update-movie/update-movie.component.html","./src/app/features/movies/index.ts","./src/app/features/movies/material.module.ts","./src/app/features/movies/mocks/fake-backend.service.ts","./src/app/features/movies/mocks/index.ts","./src/app/features/movies/movies-routing.module.ts","./src/app/features/movies/movies.module.ts","./src/app/features/movies/movies.routes.ts","./src/app/features/movies/pipes/index.ts","./src/app/features/movies/pipes/title-categories-filter.pipe.ts","./src/app/features/movies/pipes/title-movies-filter.pipe.ts","./src/app/features/movies/services/index.ts","./src/app/features/movies/services/movies.service.ts","./src/app/features/movies/store/actions/categories.action.ts","./src/app/features/movies/store/actions/comments.action.ts","./src/app/features/movies/store/actions/index.ts","./src/app/features/movies/store/actions/movies.actions.ts","./src/app/features/movies/store/effects/categories.effect.ts","./src/app/features/movies/store/effects/comments.effect.ts","./src/app/features/movies/store/effects/effects.ts","./src/app/features/movies/store/effects/index.ts","./src/app/features/movies/store/effects/movies.effects.ts","./src/app/features/movies/store/reducers/categories.reducer.ts","./src/app/features/movies/store/reducers/comments.reducer.ts","./src/app/features/movies/store/reducers/elements.reducer.ts","./src/app/features/movies/store/reducers/index.ts","./src/app/features/movies/store/reducers/movies.reducer.ts","./src/app/features/movies/store/selectors/categories.selector.ts","./src/app/features/movies/store/selectors/comments.selector.ts","./src/app/features/movies/store/selectors/elements.selector.ts","./src/app/features/movies/store/selectors/index.ts","./src/app/features/movies/store/selectors/movies.selector.ts","./src/app/features/shared/router-store/custom-router-state.serializer.ts","./src/app/features/shared/router-store/index.ts","./src/app/features/shared/router-store/router.state.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AACF;AAC+C;AAC9E;;AAEhD;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,UAAU;AACV;AACwC;AACF;AACI;AAC1C;AACA,WAAW,EAAE;AACb,4BAA4B,gEAAY,iBAAiB,yDAAK;AAC9D;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb,+BAA+B,gEAAY,oBAAoB,yDAAK;AACpE;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb,2BAA2B,gEAAY,gBAAgB,yDAAK;AAC5D;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb,0BAA0B,gEAAY,eAAe,yDAAK;AAC1D;AACA;AACA,UAAU;AACV;AACA;AACA,WAAW,EAAE;AACb,8BAA8B,gEAAY,mBAAmB,yDAAK;;AAElE;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,qCAAqC,EAAE;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,WAAW,EAGV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAOV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,WAAW,EAKV;AACD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA,8BAA8B,EAAE;AAChC,gCAAgC,EAAE;AAClC;AACA,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,WAAW,EAmBV;AACD;AACA;AACA;AACA,uCAAuC;AACvC,WAAW,EAKV;AACD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,WAAW,EAqBV;AACD;AACA;AACA;AACA,qCAAqC;AACrC,WAAW,EAOV;AACD,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,2BAA2B,4DAAc;AACzC,WAAW,EAAE;AACb,0BAA0B,4DAAc;AACxC,WAAW,EAAE;AACb;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,0BAA0B,+IAA+I;AACzK;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,iCAAiC;AAC3C,UAAU;AACV;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,iBAAiB,4CAA4C;AAC7D;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB,0DAAM,aAAa,EAAE,uBAAuB,qEAAc;AAC5E;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,+DAAe;AACrD;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,kBAAkB,qEAAc;AAChC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,iCAAiC,+DAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gEAAgB;AACtD;AACA;AACA;AACA;AACA;AACA,sCAAsC,gEAAgB;AACtD;AACA;AACA;AACA,sCAAsC,+DAAe;AACrD;AACA;AACA;AACA,sCAAsC,6DAAa;AACnD;AACA;AACA;AACA;AACA;AACA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","file":"movies-es2015.js","sourcesContent":["import { createAction, props, select, Store, createSelector } from '@ngrx/store';\nimport { InjectionToken, NgModule, ErrorHandler, Inject } from '@angular/core';\nimport { NavigationStart, RoutesRecognized, NavigationCancel, NavigationError, NavigationEnd, Router } from '@angular/router';\nimport { withLatestFrom } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/actions.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An action dispatched when a router navigation request is fired.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@ngrx/store';\nimport * as ɵngcc2 from '@angular/router';\nconst ROUTER_REQUEST = '@ngrx/router-store/request';\n/** @type {?} */\nconst routerRequestAction = createAction(ROUTER_REQUEST, props());\n/**\n * An action dispatched when the router navigates.\n * @type {?}\n */\nconst ROUTER_NAVIGATION = '@ngrx/router-store/navigation';\n/** @type {?} */\nconst routerNavigationAction = createAction(ROUTER_NAVIGATION, props());\n/**\n * An action dispatched when the router cancels navigation.\n * @type {?}\n */\nconst ROUTER_CANCEL = '@ngrx/router-store/cancel';\n/** @type {?} */\nconst routerCancelAction = createAction(ROUTER_CANCEL, props());\n/**\n * An action dispatched when the router errors.\n * @type {?}\n */\nconst ROUTER_ERROR = '@ngrx/router-store/error';\n/** @type {?} */\nconst routerErrorAction = createAction(ROUTER_ERROR, props());\n/**\n * An action dispatched after navigation has ended and new route is active.\n * @type {?}\n */\nconst ROUTER_NAVIGATED = '@ngrx/router-store/navigated';\n/** @type {?} */\nconst routerNavigatedAction = createAction(ROUTER_NAVIGATED, props());\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/reducer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} state\n * @param {?} action\n * @return {?}\n */\nfunction routerReducer(state, action) {\n    // Allow compilation with strictFunctionTypes - ref: #1344\n    /** @type {?} */\n    const routerAction = (/** @type {?} */ (action));\n    switch (routerAction.type) {\n        case ROUTER_NAVIGATION:\n        case ROUTER_ERROR:\n        case ROUTER_CANCEL:\n            return {\n                state: routerAction.payload.routerState,\n                navigationId: routerAction.payload.event.id,\n            };\n        default:\n            return (/** @type {?} */ (state));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/serializers/base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Simple router state.\n * All custom router states / state serializers should have at least\n * the properties of this interface.\n * @record\n */\nfunction BaseRouterStoreState() { }\nif (false) {\n    /** @type {?} */\n    BaseRouterStoreState.prototype.url;\n}\n/**\n * @abstract\n * @template T\n */\nclass RouterStateSerializer {\n}\nif (false) {\n    /**\n     * @abstract\n     * @param {?} routerState\n     * @return {?}\n     */\n    RouterStateSerializer.prototype.serialize = function (routerState) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/serializers/default_serializer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction SerializedRouterStateSnapshot() { }\nif (false) {\n    /** @type {?} */\n    SerializedRouterStateSnapshot.prototype.root;\n    /** @type {?} */\n    SerializedRouterStateSnapshot.prototype.url;\n}\nclass DefaultRouterStateSerializer {\n    /**\n     * @param {?} routerState\n     * @return {?}\n     */\n    serialize(routerState) {\n        return {\n            root: this.serializeRoute(routerState.root),\n            url: routerState.url,\n        };\n    }\n    /**\n     * @private\n     * @param {?} route\n     * @return {?}\n     */\n    serializeRoute(route) {\n        /** @type {?} */\n        const children = route.children.map((/**\n         * @param {?} c\n         * @return {?}\n         */\n        (c) => this.serializeRoute(c)));\n        return {\n            params: route.params,\n            paramMap: route.paramMap,\n            data: route.data,\n            url: route.url,\n            outlet: route.outlet,\n            routeConfig: route.routeConfig\n                ? {\n                    component: route.routeConfig.component,\n                    path: route.routeConfig.path,\n                    pathMatch: route.routeConfig.pathMatch,\n                    redirectTo: route.routeConfig.redirectTo,\n                    outlet: route.routeConfig.outlet,\n                }\n                : null,\n            queryParams: route.queryParams,\n            queryParamMap: route.queryParamMap,\n            fragment: route.fragment,\n            component: (/** @type {?} */ ((route.routeConfig\n                ? route.routeConfig.component\n                : undefined))),\n            root: (/** @type {?} */ (undefined)),\n            parent: (/** @type {?} */ (undefined)),\n            firstChild: children[0],\n            pathFromRoot: (/** @type {?} */ (undefined)),\n            children,\n        };\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/serializers/minimal_serializer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction MinimalActivatedRouteSnapshot() { }\nif (false) {\n    /** @type {?} */\n    MinimalActivatedRouteSnapshot.prototype.routeConfig;\n    /** @type {?} */\n    MinimalActivatedRouteSnapshot.prototype.url;\n    /** @type {?} */\n    MinimalActivatedRouteSnapshot.prototype.params;\n    /** @type {?} */\n    MinimalActivatedRouteSnapshot.prototype.queryParams;\n    /** @type {?} */\n    MinimalActivatedRouteSnapshot.prototype.fragment;\n    /** @type {?} */\n    MinimalActivatedRouteSnapshot.prototype.data;\n    /** @type {?} */\n    MinimalActivatedRouteSnapshot.prototype.outlet;\n    /** @type {?|undefined} */\n    MinimalActivatedRouteSnapshot.prototype.firstChild;\n    /** @type {?} */\n    MinimalActivatedRouteSnapshot.prototype.children;\n}\n/**\n * @record\n */\nfunction MinimalRouterStateSnapshot() { }\nif (false) {\n    /** @type {?} */\n    MinimalRouterStateSnapshot.prototype.root;\n    /** @type {?} */\n    MinimalRouterStateSnapshot.prototype.url;\n}\nclass MinimalRouterStateSerializer {\n    /**\n     * @param {?} routerState\n     * @return {?}\n     */\n    serialize(routerState) {\n        return {\n            root: this.serializeRoute(routerState.root),\n            url: routerState.url,\n        };\n    }\n    /**\n     * @private\n     * @param {?} route\n     * @return {?}\n     */\n    serializeRoute(route) {\n        /** @type {?} */\n        const children = route.children.map((/**\n         * @param {?} c\n         * @return {?}\n         */\n        (c) => this.serializeRoute(c)));\n        return {\n            params: route.params,\n            data: route.data,\n            url: route.url,\n            outlet: route.outlet,\n            routeConfig: route.routeConfig\n                ? {\n                    path: route.routeConfig.path,\n                    pathMatch: route.routeConfig.pathMatch,\n                    redirectTo: route.routeConfig.redirectTo,\n                    outlet: route.routeConfig.outlet,\n                }\n                : null,\n            queryParams: route.queryParams,\n            fragment: route.fragment,\n            firstChild: children[0],\n            children,\n        };\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/router_store_module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst RouterState = {\n    Full: 0,\n    Minimal: 1,\n};\n/**\n * @record\n * @template T\n */\nfunction StoreRouterConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    StoreRouterConfig.prototype.stateKey;\n    /** @type {?|undefined} */\n    StoreRouterConfig.prototype.serializer;\n    /**\n     * By default, ROUTER_NAVIGATION is dispatched before guards and resolvers run.\n     * Therefore, the action could run too soon, for example\n     * there may be a navigation cancel due to a guard saying the navigation is not allowed.\n     * To run ROUTER_NAVIGATION after guards and resolvers,\n     * set this property to NavigationActionTiming.PostActivation.\n     * @type {?|undefined}\n     */\n    StoreRouterConfig.prototype.navigationActionTiming;\n    /**\n     * Decides which router serializer should be used, if there is none provided, and the metadata on the dispatched \\@ngrx/router-store action payload.\n     * Set to `Full` to use the `DefaultRouterStateSerializer` and to set the angular router events as payload.\n     * Set to `Minimal` to use the `MinimalRouterStateSerializer` and to set a minimal router event with the navigation id and url as payload.\n     * @type {?|undefined}\n     */\n    StoreRouterConfig.prototype.routerState;\n}\n/**\n * @record\n */\nfunction StoreRouterActionPayload() { }\nif (false) {\n    /** @type {?} */\n    StoreRouterActionPayload.prototype.event;\n    /** @type {?|undefined} */\n    StoreRouterActionPayload.prototype.routerState;\n    /** @type {?|undefined} */\n    StoreRouterActionPayload.prototype.storeState;\n}\n/** @enum {number} */\nconst NavigationActionTiming = {\n    PreActivation: 1,\n    PostActivation: 2,\n};\nNavigationActionTiming[NavigationActionTiming.PreActivation] = 'PreActivation';\nNavigationActionTiming[NavigationActionTiming.PostActivation] = 'PostActivation';\n/** @type {?} */\nconst _ROUTER_CONFIG = new InjectionToken('@ngrx/router-store Internal Configuration');\n/** @type {?} */\nconst ROUTER_CONFIG = new InjectionToken('@ngrx/router-store Configuration');\n/** @type {?} */\nconst DEFAULT_ROUTER_FEATURENAME = 'router';\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createRouterConfig(config) {\n    return Object.assign({ stateKey: DEFAULT_ROUTER_FEATURENAME, serializer: MinimalRouterStateSerializer, navigationActionTiming: NavigationActionTiming.PreActivation }, config);\n}\n/** @enum {number} */\nconst RouterTrigger = {\n    NONE: 1,\n    ROUTER: 2,\n    STORE: 3,\n};\nRouterTrigger[RouterTrigger.NONE] = 'NONE';\nRouterTrigger[RouterTrigger.ROUTER] = 'ROUTER';\nRouterTrigger[RouterTrigger.STORE] = 'STORE';\n/**\n * Connects RouterModule with StoreModule.\n *\n * During the navigation, before any guards or resolvers run, the router will dispatch\n * a ROUTER_NAVIGATION action, which has the following signature:\n *\n * ```\n * export type RouterNavigationPayload = {\n *   routerState: SerializedRouterStateSnapshot,\n *   event: RoutesRecognized\n * }\n * ```\n *\n * Either a reducer or an effect can be invoked in response to this action.\n * If the invoked reducer throws, the navigation will be canceled.\n *\n * If navigation gets canceled because of a guard, a ROUTER_CANCEL action will be\n * dispatched. If navigation results in an error, a ROUTER_ERROR action will be dispatched.\n *\n * Both ROUTER_CANCEL and ROUTER_ERROR contain the store state before the navigation\n * which can be used to restore the consistency of the store.\n *\n * Usage:\n *\n * ```typescript\n * \\@NgModule({\n *   declarations: [AppCmp, SimpleCmp],\n *   imports: [\n *     BrowserModule,\n *     StoreModule.forRoot(mapOfReducers),\n *     RouterModule.forRoot([\n *       { path: '', component: SimpleCmp },\n *       { path: 'next', component: SimpleCmp }\n *     ]),\n *     StoreRouterConnectingModule.forRoot()\n *   ],\n *   bootstrap: [AppCmp]\n * })\n * export class AppModule {\n * }\n * ```\n */\nclass StoreRouterConnectingModule {\n    /**\n     * @param {?} store\n     * @param {?} router\n     * @param {?} serializer\n     * @param {?} errorHandler\n     * @param {?} config\n     */\n    constructor(store, router, serializer, errorHandler, config) {\n        this.store = store;\n        this.router = router;\n        this.serializer = serializer;\n        this.errorHandler = errorHandler;\n        this.config = config;\n        this.lastEvent = null;\n        this.routerState = null;\n        this.trigger = RouterTrigger.NONE;\n        this.stateKey = (/** @type {?} */ (this.config.stateKey));\n        this.setUpStoreStateListener();\n        this.setUpRouterEventsListener();\n    }\n    /**\n     * @template T\n     * @param {?=} config\n     * @return {?}\n     */\n    static forRoot(config = {}) {\n        return {\n            ngModule: StoreRouterConnectingModule,\n            providers: [\n                { provide: _ROUTER_CONFIG, useValue: config },\n                {\n                    provide: ROUTER_CONFIG,\n                    useFactory: _createRouterConfig,\n                    deps: [_ROUTER_CONFIG],\n                },\n                {\n                    provide: RouterStateSerializer,\n                    useClass: config.serializer\n                        ? config.serializer\n                        : config.routerState === 0 /* Full */\n                            ? DefaultRouterStateSerializer\n                            : MinimalRouterStateSerializer,\n                },\n            ],\n        };\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    setUpStoreStateListener() {\n        this.store\n            .pipe(select((/** @type {?} */ (this.stateKey))), withLatestFrom(this.store))\n            .subscribe((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([routerStoreState, storeState]) => {\n            this.navigateIfNeeded(routerStoreState, storeState);\n        }));\n    }\n    /**\n     * @private\n     * @param {?} routerStoreState\n     * @param {?} storeState\n     * @return {?}\n     */\n    navigateIfNeeded(routerStoreState, storeState) {\n        if (!routerStoreState || !routerStoreState.state) {\n            return;\n        }\n        if (this.trigger === RouterTrigger.ROUTER) {\n            return;\n        }\n        if (this.lastEvent instanceof NavigationStart) {\n            return;\n        }\n        /** @type {?} */\n        const url = routerStoreState.state.url;\n        if (this.router.url !== url) {\n            this.storeState = storeState;\n            this.trigger = RouterTrigger.STORE;\n            this.router.navigateByUrl(url).catch((/**\n             * @param {?} error\n             * @return {?}\n             */\n            (error) => {\n                this.errorHandler.handleError(error);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    setUpRouterEventsListener() {\n        /** @type {?} */\n        const dispatchNavLate = this.config.navigationActionTiming ===\n            NavigationActionTiming.PostActivation;\n        /** @type {?} */\n        let routesRecognized;\n        this.router.events\n            .pipe(withLatestFrom(this.store))\n            .subscribe((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([event, storeState]) => {\n            this.lastEvent = event;\n            if (event instanceof NavigationStart) {\n                this.routerState = this.serializer.serialize(this.router.routerState.snapshot);\n                if (this.trigger !== RouterTrigger.STORE) {\n                    this.storeState = storeState;\n                    this.dispatchRouterRequest(event);\n                }\n            }\n            else if (event instanceof RoutesRecognized) {\n                routesRecognized = event;\n                if (!dispatchNavLate && this.trigger !== RouterTrigger.STORE) {\n                    this.dispatchRouterNavigation(event);\n                }\n            }\n            else if (event instanceof NavigationCancel) {\n                this.dispatchRouterCancel(event);\n                this.reset();\n            }\n            else if (event instanceof NavigationError) {\n                this.dispatchRouterError(event);\n                this.reset();\n            }\n            else if (event instanceof NavigationEnd) {\n                if (this.trigger !== RouterTrigger.STORE) {\n                    if (dispatchNavLate) {\n                        this.dispatchRouterNavigation(routesRecognized);\n                    }\n                    this.dispatchRouterNavigated(event);\n                }\n                this.reset();\n            }\n        }));\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    dispatchRouterRequest(event) {\n        this.dispatchRouterAction(ROUTER_REQUEST, { event });\n    }\n    /**\n     * @private\n     * @param {?} lastRoutesRecognized\n     * @return {?}\n     */\n    dispatchRouterNavigation(lastRoutesRecognized) {\n        /** @type {?} */\n        const nextRouterState = this.serializer.serialize(lastRoutesRecognized.state);\n        this.dispatchRouterAction(ROUTER_NAVIGATION, {\n            routerState: nextRouterState,\n            event: new RoutesRecognized(lastRoutesRecognized.id, lastRoutesRecognized.url, lastRoutesRecognized.urlAfterRedirects, nextRouterState),\n        });\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    dispatchRouterCancel(event) {\n        this.dispatchRouterAction(ROUTER_CANCEL, {\n            storeState: this.storeState,\n            event,\n        });\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    dispatchRouterError(event) {\n        this.dispatchRouterAction(ROUTER_ERROR, {\n            storeState: this.storeState,\n            event: new NavigationError(event.id, event.url, `${event}`),\n        });\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    dispatchRouterNavigated(event) {\n        /** @type {?} */\n        const routerState = this.serializer.serialize(this.router.routerState.snapshot);\n        this.dispatchRouterAction(ROUTER_NAVIGATED, { event, routerState });\n    }\n    /**\n     * @private\n     * @param {?} type\n     * @param {?} payload\n     * @return {?}\n     */\n    dispatchRouterAction(type, payload) {\n        this.trigger = RouterTrigger.ROUTER;\n        try {\n            this.store.dispatch({\n                type,\n                payload: Object.assign(Object.assign({ routerState: this.routerState }, payload), { event: this.config.routerState === 0 /* Full */\n                        ? payload.event\n                        : { id: payload.event.id, url: payload.event.url } }),\n            });\n        }\n        finally {\n            this.trigger = RouterTrigger.NONE;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    reset() {\n        this.trigger = RouterTrigger.NONE;\n        this.storeState = null;\n        this.routerState = null;\n    }\n}\nStoreRouterConnectingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: StoreRouterConnectingModule });\nStoreRouterConnectingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function StoreRouterConnectingModule_Factory(t) { return new (t || StoreRouterConnectingModule)(ɵngcc0.ɵɵinject(ɵngcc1.Store), ɵngcc0.ɵɵinject(ɵngcc2.Router), ɵngcc0.ɵɵinject(RouterStateSerializer), ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler), ɵngcc0.ɵɵinject(ROUTER_CONFIG)); } });\n/** @nocollapse */\nStoreRouterConnectingModule.ctorParameters = () => [\n    { type: Store },\n    { type: Router },\n    { type: RouterStateSerializer },\n    { type: ErrorHandler },\n    { type: undefined, decorators: [{ type: Inject, args: [ROUTER_CONFIG,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StoreRouterConnectingModule, [{\n        type: NgModule,\n        args: [{}]\n    }], function () { return [{ type: ɵngcc1.Store }, { type: ɵngcc2.Router }, { type: RouterStateSerializer }, { type: ɵngcc0.ErrorHandler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [ROUTER_CONFIG]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    StoreRouterConnectingModule.prototype.lastEvent;\n    /**\n     * @type {?}\n     * @private\n     */\n    StoreRouterConnectingModule.prototype.routerState;\n    /**\n     * @type {?}\n     * @private\n     */\n    StoreRouterConnectingModule.prototype.storeState;\n    /**\n     * @type {?}\n     * @private\n     */\n    StoreRouterConnectingModule.prototype.trigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    StoreRouterConnectingModule.prototype.stateKey;\n    /**\n     * @type {?}\n     * @private\n     */\n    StoreRouterConnectingModule.prototype.store;\n    /**\n     * @type {?}\n     * @private\n     */\n    StoreRouterConnectingModule.prototype.router;\n    /**\n     * @type {?}\n     * @private\n     */\n    StoreRouterConnectingModule.prototype.serializer;\n    /**\n     * @type {?}\n     * @private\n     */\n    StoreRouterConnectingModule.prototype.errorHandler;\n    /**\n     * @type {?}\n     * @private\n     */\n    StoreRouterConnectingModule.prototype.config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/router_selectors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template V\n * @param {?} selectState\n * @return {?}\n */\nfunction getSelectors(selectState) {\n    /** @type {?} */\n    const selectRouterState = createSelector(selectState, (/**\n     * @param {?} router\n     * @return {?}\n     */\n    (router) => router && router.state));\n    /** @type {?} */\n    const selectCurrentRoute = createSelector(selectRouterState, (/**\n     * @param {?} routerState\n     * @return {?}\n     */\n    (routerState) => {\n        if (!routerState) {\n            return undefined;\n        }\n        /** @type {?} */\n        let route = routerState.root;\n        while (route.firstChild) {\n            route = route.firstChild;\n        }\n        return route;\n    }));\n    /** @type {?} */\n    const selectFragment = createSelector(selectCurrentRoute, (/**\n     * @param {?} route\n     * @return {?}\n     */\n    (route) => route && route.fragment));\n    /** @type {?} */\n    const selectQueryParams = createSelector(selectCurrentRoute, (/**\n     * @param {?} route\n     * @return {?}\n     */\n    (route) => route && route.queryParams));\n    /** @type {?} */\n    const selectQueryParam = (/**\n     * @param {?} param\n     * @return {?}\n     */\n    (param) => createSelector(selectQueryParams, (/**\n     * @param {?} params\n     * @return {?}\n     */\n    (params) => params && params[param])));\n    /** @type {?} */\n    const selectRouteParams = createSelector(selectCurrentRoute, (/**\n     * @param {?} route\n     * @return {?}\n     */\n    (route) => route && route.params));\n    /** @type {?} */\n    const selectRouteParam = (/**\n     * @param {?} param\n     * @return {?}\n     */\n    (param) => createSelector(selectRouteParams, (/**\n     * @param {?} params\n     * @return {?}\n     */\n    (params) => params && params[param])));\n    /** @type {?} */\n    const selectRouteData = createSelector(selectCurrentRoute, (/**\n     * @param {?} route\n     * @return {?}\n     */\n    (route) => route && route.data));\n    /** @type {?} */\n    const selectUrl = createSelector(selectRouterState, (/**\n     * @param {?} routerState\n     * @return {?}\n     */\n    (routerState) => routerState && routerState.url));\n    return {\n        selectCurrentRoute,\n        selectFragment,\n        selectQueryParams,\n        selectQueryParam,\n        selectRouteParams,\n        selectRouteParam,\n        selectRouteData,\n        selectUrl,\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ngrx-router-store.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DEFAULT_ROUTER_FEATURENAME, DefaultRouterStateSerializer, MinimalRouterStateSerializer, NavigationActionTiming, ROUTER_CANCEL, ROUTER_CONFIG, ROUTER_ERROR, ROUTER_NAVIGATED, ROUTER_NAVIGATION, ROUTER_REQUEST, RouterStateSerializer, StoreRouterConnectingModule, getSelectors, routerCancelAction, routerErrorAction, routerNavigatedAction, routerNavigationAction, routerReducer, routerRequestAction, _ROUTER_CONFIG as ɵa, _createRouterConfig as ɵb };\n\n//# sourceMappingURL=ngrx-router-store.js.map","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-comment',\n  templateUrl: './add-comment.component.html',\n  styleUrls: ['./add-comment.component.css']\n})\nexport class AddCommentComponent implements OnInit {\n   @Input() controlText: AbstractControl;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onClick() {\n    alert('click');\n  }\n\n}\n","<mat-form-field class=\"form-element\" appearance=\"outline\" style=\"width: 310px;\">\n    <textarea [formControl]=\"controlText\" matInput type=\"text\" cols=\"15\" rows=\"2\" placeholder=\"Add comment ...\" (keyup.enter)=\"onClick()\"></textarea>\n    <mat-error *ngIf=\"controlText.invalid\">This field must not exceed 10 characters</mat-error>\n</mat-form-field>","import {\n  Component,\n  OnInit,\n  Input,\n  ChangeDetectionStrategy,\n  Output,\n  EventEmitter,\n} from \"@angular/core\";\nimport { Category } from \"../../models\";\n\n@Component({\n  selector: \"app-category-preview\",\n  templateUrl: \"./category-preview.component.html\",\n  styleUrls: [\"./category-preview.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoryPreviewComponent implements OnInit {\n  @Input() category: Category;\n  @Output() goToMovies = new EventEmitter<number>();\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"col-md-3\">\n  <mat-card>\n    <mat-card-title-group>\n      <mat-card-title class=\"text-xl push-none\" data-role=\"category-title\">{{\n        category.title\n      }}</mat-card-title>\n      <mat-card-subtitle class=\"push-none\" data-role=\"category-emoji\">{{\n        category.emoji\n      }}</mat-card-subtitle>\n      <mat-card-subtitle class=\"push-none\" data-role=\"category-emojiStyle\"\n        >{{ category.emojiStyle }}\n      </mat-card-subtitle>\n    </mat-card-title-group>\n    <mat-card-actions>\n      <button\n        mat-raised-button\n        (click)=\"goToMovies.emit(category.id)\"\n        color=\"primary\"\n      >\n        Got to movies\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit, Inject } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\n@Component({\n  selector: \"app-confirmation-dialog\",\n  templateUrl: \"./confirmation-dialog.component.html\",\n  styleUrls: [\"./confirmation-dialog.component.css\"],\n})\nexport class ConfirmationDialogComponent implements OnInit {\n  message: string;\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmationDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit(): void {\n    this.message = this.data;\n  }\n}\n","<mat-dialog-content>\n  <p>\n    {{ message }}\n  </p>\n</mat-dialog-content>\n<mat-dialog-actions align=\"center\">\n  <button\n    mat-raised-button\n    color=\"primary\"\n    [mat-dialog-close]=\"true\"\n    tabindex=\"1\"\n  >\n    Yes\n  </button>\n  <button mat-raised-button mat-dialog-close tabindex=\"-1\">Cancel</button>\n</mat-dialog-actions>\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnChanges,\n} from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Category, Movie } from \"../../models\";\nimport { MatProgressButtonOptions } from \"mat-progress-buttons\";\n\n@Component({\n  selector: \"app-form-movie\",\n  templateUrl: \"./form-movie.component.html\",\n  styleUrls: [\"./form-movie.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormMovieComponent implements OnInit, OnChanges {\n  submitted: boolean = false;\n  @Input() action: string = \"\";\n  @Input() optionsCategories: Category[];\n  @Input() loadingAddMovie: boolean = false;\n  @Output() addMovie = new EventEmitter();\n  @Input() movie: Movie;\n  title: string = null;\n  movieForm: Movie;\n  registerMovieForm: FormGroup;\n  titleAlert: string = \"This field is required\";\n  labelLanguage: string = \"Language\";\n  optionsLanguage: string[] = [\n    \"French\",\n    \"English\",\n    \"Arabic\",\n    \"Russe\",\n    \"Spanish\",\n    \"Japanese\",\n  ];\n  labelYear: string = \"Year\";\n  optionsYear: number[] = [2015, 2016, 2017, 2018, 2019, 2020, 2021];\n  labelCategory: string = \"Category\";\n  barButtonOptions: MatProgressButtonOptions = {\n    active: this.loadingAddMovie,\n    text: this.action,\n    buttonColor: \"primary\",\n    barColor: \"primary\",\n    raised: true,\n    stroked: false,\n    mode: \"indeterminate\",\n    value: 0,\n    disabled: false,\n    fullWidth: false,\n    buttonIcon: {\n      fontIcon: \"save\",\n    },\n  };\n\n  constructor(private formBuilder: FormBuilder) {}\n  ngOnChanges() {\n    this.barButtonOptions.active = this.loadingAddMovie;\n    this.barButtonOptions.text = this.action;\n    if (this.submitted == true) {\n      if (this.action == \"add movie\") {\n        this.barButtonOptions.text = \"Saving movie ...\";\n      } else {\n        this.barButtonOptions.text = \"Updating movie ...\";\n      }\n    }\n    if (this.loadingAddMovie == false) {\n      this.barButtonOptions.text = this.action;\n    }\n  }\n  ngOnInit(): void {\n    this.createForm();\n  }\n  createForm() {\n    this.registerMovieForm = this.formBuilder.group({\n      title: [\n        this.movie.title,\n        [Validators.required, Validators.maxLength(22)],\n      ],\n      language: [this.movie.language, Validators.required],\n      recordedYear: [this.movie.recordedYear, Validators.required],\n      category: [this.movie.categoryId, Validators.required],\n      image: [this.movie.image, Validators.required],\n      heroLastName: [this.movie.specialMention.lastName, Validators.required],\n      heroFirstName: [this.movie.specialMention.firstName, Validators.required],\n      description: [\n        this.movie.description,\n        [Validators.required, Validators.maxLength(300)],\n      ],\n    });\n  }\n  get f() {\n    return this.registerMovieForm.controls;\n  }\n  onSubmit() {\n    this.movieForm = {\n      id: this.movie.id,\n      categoryId: this.registerMovieForm.value[\"category\"],\n      title: this.registerMovieForm.value[\"title\"],\n      language: this.registerMovieForm.value[\"language\"],\n      recordedYear: this.registerMovieForm.value[\"recordedYear\"],\n      image: this.registerMovieForm.value[\"image\"],\n      specialMention: {\n        lastName: this.registerMovieForm.value[\"heroLastName\"],\n        firstName: this.registerMovieForm.value[\"heroFirstName\"],\n      },\n      description: this.registerMovieForm.value[\"description\"],\n      selected: this.movie.selected,\n    };\n    if (this.registerMovieForm.valid) {\n      this.submitted = true;\n    }\n    this.addMovie.emit(this.movieForm);\n  }\n}\n","<mat-toolbar class=\"form-element\">\n  <span class=\"fill-remaining-space\" *ngIf=\"action == 'add movie'\"\n    >Add your movie</span\n  >\n  <span class=\"fill-remaining-space\" *ngIf=\"action == 'update movie'\"\n    >update your movie</span\n  >\n</mat-toolbar>\n<mat-card>\n  <form [formGroup]=\"registerMovieForm\" (ngSubmit)=\"onSubmit()\" class=\"form\">\n    <mat-form-field class=\"form-element\" appearance=\"outline\">\n      <input matInput type=\"text\" placeholder=\"Title\" formControlName=\"title\" />\n      <mat-error *ngIf=\"!f.title.valid && f.title.touched\">\n        {{ titleAlert }} and must not exceed 35 characters</mat-error\n      >\n    </mat-form-field>\n    <app-select\n      [label]=\"'Language'\"\n      [options]=\"optionsLanguage\"\n      [valid]=\"f.language.valid\"\n      [touched]=\"f.language.touched\"\n      [registerForm]=\"registerMovieForm\"\n      [control]=\"'language'\"\n      [titleAlert]=\"titleAlert\"\n    ></app-select>\n    <app-select\n      [label]=\"'Year'\"\n      [options]=\"optionsYear\"\n      [valid]=\"f.recordedYear.valid\"\n      [touched]=\"f.recordedYear.touched\"\n      [registerForm]=\"registerMovieForm\"\n      [control]=\"'recordedYear'\"\n      [titleAlert]=\"titleAlert\"\n    ></app-select>\n    <app-select-tab-object\n      [label]=\"'Category'\"\n      [options]=\"optionsCategories\"\n      [valid]=\"f.category.valid\"\n      [touched]=\"f.category.touched\"\n      [registerForm]=\"registerMovieForm\"\n      [control]=\"'category'\"\n      [titleAlert]=\"titleAlert\"\n    ></app-select-tab-object>\n\n    <mat-form-field class=\"form-element\" appearance=\"outline\">\n      <input\n        matInput\n        type=\"text\"\n        placeholder=\"Link image\"\n        formControlName=\"image\"\n      />\n      <mat-hint>Link of image movie</mat-hint>\n      <mat-error *ngIf=\"!f.image.valid && f.image.touched\"\n        >{{ titleAlert }}\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"form-element\" appearance=\"outline\">\n      <input\n        matInput\n        type=\"text\"\n        placeholder=\"Last name héro \"\n        formControlName=\"heroLastName\"\n      />\n\n      <mat-error *ngIf=\"!f.heroLastName.valid && f.heroLastName.touched\"\n        >{{ titleAlert }}\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"form-element\" appearance=\"outline\">\n      <input\n        matInput\n        type=\"text\"\n        placeholder=\"First name héro \"\n        formControlName=\"heroFirstName\"\n      />\n\n      <mat-error *ngIf=\"!f.heroFirstName.valid && f.heroFirstName.touched\"\n        >{{ titleAlert }}\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"form-element\" appearance=\"outline\">\n      <textarea\n        style=\"min-height: 9em\"\n        matInput\n        placeholder=\"description of movie\"\n        formControlName=\"description\"\n      ></textarea>\n      <mat-hint>give more details about the film</mat-hint>\n\n      <mat-error *ngIf=\"!f.description.valid && f.description.touched\"\n        >{{ titleAlert }} and must not exceed 300 characters\n      </mat-error>\n    </mat-form-field>\n\n    <div class=\"form-element\">\n      <mat-bar-button\n        [options]=\"barButtonOptions\"\n        [disabled]=\"!registerMovieForm.valid\"\n      ></mat-bar-button>\n    </div>\n  </form>\n</mat-card>\n","export * from \"./category-preview/category-preview.component\";\nexport * from \"./movie-preview/movie-preview.component\";\nexport * from \"./search/search.component\";\nexport * from \"./select/select.component\";\nexport * from \"./select-tab-object/select-tab-object.component\";\nexport * from \"./form-movie/form-movie.component\";\nexport * from \"./confirmation-dialog/confirmation-dialog.component\";\nexport * from \"./movie-details/movie-details.component\";\nexport * from \"./add-comment/add-comment.component\";\nexport * from \"./preview-comment/preview-comment.component\";\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnChanges,\n} from \"@angular/core\";\nimport { MatProgressButtonOptions } from \"mat-progress-buttons\";\n\nimport { Movie } from \"../../models\";\n@Component({\n  selector: \"app-movie-details\",\n  templateUrl: \"./movie-details.component.html\",\n  styleUrls: [\"./movie-details.component.css\"],\n})\nexport class MovieDetailsComponent implements OnInit, OnChanges {\n  @Input() movie: Movie;\n  @Output() addOrDeleteToMyCollection = new EventEmitter();\n  @Input() loadingAddOrDeleteMovieToMycollection: boolean = false;\n\n  barButtonOptions: MatProgressButtonOptions = {\n    active: this.loadingAddOrDeleteMovieToMycollection,\n    text: \"\",\n    buttonColor: \"primary\",\n    barColor: \"primary\",\n    raised: true,\n    stroked: false,\n    mode: \"indeterminate\",\n    value: 0,\n    disabled: false,\n    fullWidth: false,\n    buttonIcon: {\n      fontIcon: \"\",\n    },\n  };\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  ngOnChanges() {\n    if (this.movie.selected == true) {\n      this.barButtonOptions.text = \"Remove movie to collection\";\n      this.barButtonOptions.buttonColor = \"accent\";\n      this.barButtonOptions.barColor = \"accent\";\n      this.barButtonOptions.buttonIcon.fontIcon = \"remove_from_queue\";\n    } else {\n      this.barButtonOptions.text = \"Add movie to collection\";\n      this.barButtonOptions.buttonIcon.fontIcon = \"playlist_add\";\n      this.barButtonOptions.buttonColor = \"primary\";\n      this.barButtonOptions.barColor = \"primary\";\n    }\n    this.barButtonOptions.active = this.loadingAddOrDeleteMovieToMycollection;\n  }\n}\n","<mat-card class=\"example-card\">\n  <mat-card-header>\n    <div\n      mat-card-avatar\n      class=\"example-header-image\"\n      [ngStyle]=\"{ 'background-image': 'url(' + movie.image + ')' }\"\n    ></div>\n    <mat-card-title>{{ movie.title }}</mat-card-title>\n    <mat-card-subtitle\n      ><b>Language</b>:&nbsp;{{ movie.language }}</mat-card-subtitle\n    >\n    <mat-card-subtitle>\n      <b>year</b>:&nbsp; {{ movie.recordedYear }}</mat-card-subtitle\n    >\n  </mat-card-header>\n  <img\n    mat-card-image\n    src=\"{{ movie.image }}\"\n    alt=\"Cinque Terre\"\n    alt=\"Photo of movie\"\n  />\n  <mat-card-content>\n    <p>\n      {{ movie.description }}\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <mat-bar-button\n      [options]=\"barButtonOptions\"\n      color=\"accent\"\n      (click)=\"addOrDeleteToMyCollection.emit(movie.id)\"\n    >\n    </mat-bar-button>\n  </mat-card-actions>\n</mat-card>\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from \"@angular/core\";\nimport { Movie } from \"../../models\";\nimport { ConfirmationDialogComponent } from \"../confirmation-dialog/confirmation-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\n\n@Component({\n  selector: \"app-movie-preview\",\n  templateUrl: \"./movie-preview.component.html\",\n  styleUrls: [\"./movie-preview.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MoviePreviewComponent implements OnInit {\n  @Input() movie: Movie;\n  @Input() parent: string;\n\n  @Output() updateMovie = new EventEmitter<number>();\n  @Output() deleteMovie = new EventEmitter<number>();\n  @Output() detailsMovie = new EventEmitter<number>();\n\n  constructor(private dialog: MatDialog) {}\n\n  ngOnInit(): void {}\n\n  delete(MovieId: number) {\n    this.dialog\n      .open(ConfirmationDialogComponent, {\n        data: \"Are you sure want to delete?\",\n      })\n      .afterClosed()\n      .subscribe((result) => {\n        if (result == true) {\n          this.deleteMovie.emit(MovieId);\n        }\n      });\n  }\n}\n","<div class=\"col-md-4 frame\">\n  <mat-card>\n    <mat-card-header>\n      <div\n        mat-card-avatar\n        class=\"example-header-image\"\n        [ngStyle]=\"{ 'background-image': 'url(' + movie.image + ')' }\"\n      ></div>\n\n      <mat-card-title>{{ movie.title }}</mat-card-title>\n      <mat-card-subtitle>{{ movie.recordedYear }}</mat-card-subtitle>\n      <mat-card-subtitle> {{ movie.language }}</mat-card-subtitle>\n    </mat-card-header>\n\n    <mat-card-content>\n      <span>Special mention:</span>\n      <p>\n        {{\n          movie.specialMention.firstName + \" - \" + movie.specialMention.lastName\n        }}\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button\n        *ngIf=\"parent != 'collection'\"\n        mat-raised-button\n        (click)=\"updateMovie.emit(movie.id)\"\n        color=\"primary\"\n      >\n        Update\n      </button>\n      <button\n        *ngIf=\"parent != 'collection'\"\n        mat-raised-button\n        (click)=\"delete(movie.id)\"\n        color=\"accent\"\n      >\n        Delete\n      </button>\n      <button\n        mat-raised-button\n        (click)=\"detailsMovie.emit(movie.id)\"\n        color=\"primary\"\n      >\n        details\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-preview-comment',\n  templateUrl: './preview-comment.component.html',\n  styleUrls: ['./preview-comment.component.css']\n})\nexport class PreviewCommentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>preview-comment works!</p>\n","import {\n  Component,\n  OnInit,\n  Output,\n  EventEmitter,\n  Input,\n  ChangeDetectionStrategy,\n} from \"@angular/core\";\n\n@Component({\n  selector: \"app-search\",\n  templateUrl: \"./search.component.html\",\n  styleUrls: [\"./search.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SearchComponent implements OnInit {\n  @Output() search = new EventEmitter<string>();\n  @Input() searchValue: string = \"\";\n  @Input() searchName: string;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<mat-form-field appearance=\"legacy\">\n  <mat-label>{{ searchName }}</mat-label>\n  <input\n    (keyup)=\"search.emit($event.target.value)\"\n    matInput\n    placeholder=\"by title\"\n    [value]=\"searchValue\"\n  />\n  <mat-icon matSuffix>search</mat-icon>\n</mat-form-field>\n","import {\n  Component,\n  OnInit,\n  Input,\n  ChangeDetectionStrategy,\n} from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-select-tab-object\",\n  templateUrl: \"./select-tab-object.component.html\",\n  styleUrls: [\"./select-tab-object.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectTabObjectComponent implements OnInit {\n  @Input() label: string;\n  @Input() options: any[];\n  @Input() valid: boolean;\n  @Input() touched: boolean;\n  @Input() registerForm: FormGroup;\n  @Input() control: string;\n  @Input() titleAlert: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<mat-form-field\n  [formGroup]=\"registerForm\"\n  class=\"form-element\"\n  appearance=\"outline\"\n>\n  <mat-label>{{ label }}</mat-label>\n  <mat-select [formControlName]=\"control\">\n    <mat-option *ngFor=\"let option of options\" [value]=\"option.id\">{{\n      option.title\n    }}</mat-option>\n  </mat-select>\n  <mat-error *ngIf=\"!valid && touched\">{{ titleAlert }}</mat-error>\n</mat-form-field>\n","import {\n  Component,\n  OnInit,\n  Input,\n  ChangeDetectionStrategy,\n} from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\n@Component({\n  selector: \"app-select\",\n  templateUrl: \"./select.component.html\",\n  styleUrls: [\"./select.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectComponent implements OnInit {\n  @Input() label: string;\n  @Input() options: any[];\n  @Input() valid: boolean;\n  @Input() touched: boolean;\n  @Input() registerForm: FormGroup;\n  @Input() control: string;\n  @Input() titleAlert: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<mat-form-field\n  [formGroup]=\"registerForm\"\n  class=\"form-element\"\n  appearance=\"outline\"\n>\n  <mat-label>{{ label }}</mat-label>\n  <mat-select [formControlName]=\"control\">\n    <mat-option *ngFor=\"let option of options\" [value]=\"option\">{{\n      option\n    }}</mat-option>\n  </mat-select>\n  <mat-error *ngIf=\"!valid && touched\">{{ titleAlert }}</mat-error>\n</mat-form-field>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ElementsState } from \"../../store/reducers\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { Category, Movie } from \"../../models\";\nimport * as actionsType from \"../../store/actions\";\nimport * as selectors from \"../../store/selectors\";\nimport { MoviesService } from \"../../services\";\n\n@Component({\n  selector: \"app-add-movie\",\n  templateUrl: \"./add-movie.component.html\",\n  styleUrls: [\"./add-movie.component.css\"],\n})\nexport class AddMovieComponent implements OnInit {\n  movie: Movie = {\n    id: undefined,\n    categoryId: undefined,\n    title: \"\",\n    language: \"\",\n    recordedYear: undefined,\n    image: \"\",\n    specialMention: {\n      lastName: \"\",\n      firstName: \"\",\n    },\n    description: \"\",\n    selected: false,\n  };\n\n  optionsCategories$: Observable<Category[]>;\n  loadingCategories$: Observable<boolean>;\n  loadingMovies$: Observable<boolean>;\n  loadingAddMovie$: Observable<boolean>;\n  success$: Subscription;\n  error$: Subscription;\n\n  constructor(\n    private store: Store<ElementsState>,\n    private moviesService: MoviesService\n  ) {\n    //this.moviesService.getCategoriesAndMoviesAfterRefreshPage();\n  }\n\n  ngOnInit(): void {\n    this.optionsCategories$ = this.store.select<Category[]>(\n      selectors.getAllCategories\n    );\n    this.loadingCategories$ = this.store.select<boolean>(\n      selectors.getIsCategoriesLoading\n    );\n    this.loadingMovies$ = this.store.select<boolean>(\n      selectors.getIsLoadingAllMovies\n    );\n    this.loadingAddMovie$ = this.store.select<boolean>(\n      selectors.getIsLoadingActionMovie\n    );\n  }\n  OnAddMovie(movie: Movie) {\n    this.store.dispatch(actionsType.ADD_MOVIE({ movie: movie }));\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-offset-1\">\n    <ng-container\n      *ngIf=\"\n        !(loadingCategories$ | async) && !(loadingMovies$ | async);\n        else loader\n      \"\n    >\n      <app-form-movie\n        [optionsCategories]=\"optionsCategories$ | async\"\n        [movie]=\"movie\"\n        (addMovie)=\"OnAddMovie($event)\"\n        [loadingAddMovie]=\"loadingAddMovie$ | async\"\n        [action]=\"'add movie'\"\n      ></app-form-movie>\n    </ng-container>\n  </div>\n</div>\n<div class=\"row\">\n  <ng-template #loader>\n    <div class=\"col-md-2 col-centered\">\n      <mat-spinner color=\"primary\" diameter=\"80\"> </mat-spinner>\n    </div>\n  </ng-template>\n</div>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable } from \"rxjs\";\nimport { ElementsState } from \"../../store/reducers\";\nimport * as selectors from \"../../store/selectors\";\nimport { Category } from \"../../models\";\nimport * as actionsType from \"../../store/actions\";\nimport { Router } from \"@angular/router\";\nimport {SharedService} from '../../../shared/shared.service';\n@Component({\n  selector: \"app-categories-list\",\n  templateUrl: \"./categories-list.component.html\",\n  styleUrls: [\"./categories-list.component.css\"],\n})\nexport class CategoriesListComponent implements OnInit {\n  categories$: Observable<Category[]>;\n  loadingCategories$: Observable<boolean>;\n  loadingMovies$: Observable<boolean>;\n  searchValue: string;\n  searchValue$: Observable<string>;\n\n  constructor(private store: Store<ElementsState>, private router: Router, private shared: SharedService) {}\n\n  ngOnInit(): void {\n\n    this.categories$ = this.store.select<Category[]>(\n      selectors.getAllCategories\n    );\n\n    this.loadingCategories$ = this.store.select<boolean>(\n      selectors.getIsCategoriesLoading\n    );\n\n    this.loadingMovies$ = this.store.select<boolean>(\n      selectors.getIsLoadingAllMovies\n    );\n\n    this.searchValue$ = this.store.select<string>(selectors.getSearchValue);\n\n    this.searchValue$.subscribe((searchValue) => {\n      this.searchValue = searchValue;\n    });\n  }\n\n  search(searchValue: string) {\n    this.searchValue = searchValue;\n    this.store.dispatch(\n      actionsType.GET_SEARCH({ searchValue: this.searchValue })\n    );\n  }\n\n  onGoToMovies(categoryId: number) {\n    this.shared.test = 'mon teste';\n    this.router.navigate([`movies/category/${categoryId}`]);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-2 col-centered\">\n    <app-search\n      [searchName]=\"'search category'\"\n      [searchValue]=\"searchValue$ | async\"\n      (search)=\"search($event)\"\n    ></app-search>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"categories$ | async as categories\">\n  <ng-container\n    *ngIf=\"\n      !(loadingCategories$ | async) && !(loadingMovies$ | async);\n      else loader\n    \"\n  >\n    <app-category-preview\n      (goToMovies)=\"onGoToMovies($event)\"\n      *ngFor=\"let category of categories | titleCategoriesFilter: searchValue\"\n      [category]=\"category\"\n    ></app-category-preview>\n  </ng-container>\n</div>\n<div class=\"row\">\n  <ng-template #loader>\n    <div class=\"col-md-2 col-centered\">\n      <mat-spinner color=\"primary\" diameter=\"80\"> </mat-spinner>\n    </div>\n  </ng-template>\n</div>\n","export * from \"./template/template.component\";\nexport * from \"./categories-list/categories-list.component\";\nexport * from \"./movies-list/movies-list.component\";\nexport * from \"./add-movie/add-movie.component\";\nexport * from \"./update-movie/update-movie.component\";\nexport * from \"./movies-collection/movies-collection.component\";\nexport * from \"./movie-details-container/movie-details-container.component\";\n","import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { ElementsState } from \"../../store/reducers\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable } from \"rxjs\";\nimport { Movie, Comment } from \"../../models\";\nimport * as selectors from \"../../store/selectors\";\nimport * as actionsType from \"../../store/actions\";\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: \"app-movie-details-container\",\n  templateUrl: \"./movie-details-container.component.html\",\n  styleUrls: [\"./movie-details-container.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MovieDetailsContainerComponent implements OnInit {\n  movie$: Observable<Movie>;\n  loadingCategories$: Observable<boolean>;\n  loadingMovies$: Observable<boolean>;\n  loadingAddOrDeleteMovieToMycollection$: Observable<boolean>;\n  form: FormGroup;\n  comments$: Observable<Comment[]>;\n  loadingComments$: Observable<boolean>;\n  constructor(\n    private store: Store<ElementsState>,\n    private route: ActivatedRoute,\n  ) {\n    //this.moviesService.getCategoriesAndMoviesAfterRefreshPage();\n  }\n\n  ngOnInit(): void {\n    this.movie$ = this.store.select<Movie>(selectors.getMovieById);\n    this.loadingCategories$ = this.store.select<boolean>(\n      selectors.getIsCategoriesLoading\n    );\n    this.loadingMovies$ = this.store.select<boolean>(\n      selectors.getIsLoadingAllMovies\n    );\n    this.loadingAddOrDeleteMovieToMycollection$ = this.store.select<boolean>(\n      selectors.getIsLoadingActionMovie\n    );\n    this.store.dispatch(actionsType.GET_COMMENTS_BY_ID_MOVIE({movieId : parseInt(this.route.snapshot.paramMap.get('movieId'))}));\n    this.comments$ = this.store.select<Comment[]>(selectors.getAllComments);\n    this.comments$.subscribe(data=>console.log(data));\n    this.loadingComments$ = this.store.select<boolean>(selectors.getIsCommentsLoading);\n    this.createForm();\n  }\n\n  OnAddOrDeleteToMyCollection(movieId: number) {\n    this.store.dispatch(\n      actionsType.ADD_OR_DELETE_MOVIE_COLLECTION({ movieId: movieId })\n    );\n  }\n  private createForm() {\n    this.form = new FormGroup({\n      text: new FormControl('',Validators.maxLength(10)),\n    });\n  }\n\n}\n","<div style=\"width: 100%;\"   \n*ngIf=\"!(loadingCategories$ | async) && !(loadingMovies$ | async); else loader\"> \n<ng-container>\n  <div class=\"col-md-4 col-left\" *ngIf=\"!(movie$ | async).selected\">\n    <div>\n      <div *ngIf=\"!(loadingComments$ | async); else loaderComments\">\n        <ng-container>\n          <app-preview-comment></app-preview-comment>\n        </ng-container>\n      </div>\n      <div>\n        <ng-template #loaderComments>\n          <div class=\"col-md-2 col-centered\">\n            <mat-spinner color=\"primary\" diameter=\"80\"> </mat-spinner>\n          </div>\n        </ng-template>\n      </div>\n    </div>\n    <div>\n      <form [formGroup]=\"form\">\n        <app-add-comment \n        [controlText]=\"form.controls.text\">\n        </app-add-comment>\n      </form>\n    </div>\n  </div>\n  <div class=\"col-md-6 col-centered\">\n    <div\n    class=\"card\">\n      <app-movie-details\n        [movie]=\"movie$ | async\"\n        [loadingAddOrDeleteMovieToMycollection]=\"\n          loadingAddOrDeleteMovieToMycollection$ | async\n        \"\n        (addOrDeleteToMyCollection)=\"OnAddOrDeleteToMyCollection($event)\"\n      ></app-movie-details>\n  </div>\n</div>  \n</ng-container>\n</div>\n<div>\n  <ng-template #loader>\n    <div class=\"col-md-2 col-centered\">\n      <mat-spinner color=\"primary\" diameter=\"80\"> </mat-spinner>\n    </div>\n  </ng-template>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Movie } from \"../../models\";\nimport { ElementsState } from \"../../store/reducers\";\nimport * as selectors from \"../../store/selectors\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable, of } from \"rxjs\";\nimport { MoviesService } from \"../../services\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-movies-collection\",\n  templateUrl: \"./movies-collection.component.html\",\n  styleUrls: [\"./movies-collection.component.css\"],\n})\nexport class MoviesCollectionComponent implements OnInit {\n  movies$: Observable<Movie[]>;\n  loadingMovies$: Observable<boolean>;\n  loadingCategories$: Observable<boolean>;\n  loadingDeleteMovieToMycollection$: Observable<boolean>;\n  searchValue$: Observable<string> = of(\"\");\n  searchValue: string;\n\n  constructor(\n    private store: Store<ElementsState>,\n    private moviesService: MoviesService,\n    private router: Router\n  ) {\n    //this.moviesService.getCategoriesAndMoviesAfterRefreshPage();\n  }\n\n  ngOnInit(): void {\n    this.movies$ = this.store.select<Movie[]>(selectors.getMyCollectionMovies);\n    this.loadingCategories$ = this.store.select<boolean>(\n      selectors.getIsCategoriesLoading\n    );\n    this.loadingMovies$ = this.store.select<boolean>(\n      selectors.getIsLoadingAllMovies\n    );\n    this.loadingDeleteMovieToMycollection$ = this.store.select<boolean>(\n      selectors.getIsLoadingActionMovie\n    );\n  }\n\n  search(searchValue: string) {\n    this.searchValue = searchValue;\n  }\n\n  onDetailsMovie(movieId: number) {\n    this.router.navigate([`movies/movie-details/${movieId}`]);\n  }\n}\n","<div *ngIf=\"movies$ | async as movies\">\n  <div class=\"row\">\n    <div class=\"col-md-2 col-centered\">\n      <app-search\n        [searchName]=\"'search movie'\"\n        [searchValue]=\"searchValue$ | async\"\n        (search)=\"search($event)\"\n      ></app-search>\n    </div>\n  </div>\n  <div\n    class=\"row\"\n    *ngIf=\"\n      !(loadingCategories$ | async) && !(loadingMovies$ | async);\n      else loader\n    \"\n  >\n    <ng-container *ngIf=\"movies.length > 0; else noMovie\">\n      <app-movie-preview\n        *ngFor=\"let movie of movies | titleMoviesFilter: searchValue\"\n        [movie]=\"movie\"\n        [parent]=\"'collection'\"\n        (detailsMovie)=\"onDetailsMovie($event)\"\n      ></app-movie-preview>\n    </ng-container>\n  </div>\n\n  <div class=\"row\">\n    <ng-template #loader>\n      <div class=\"col-md-2 col-centered\">\n        <mat-spinner color=\"primary\" diameter=\"80\"> </mat-spinner>\n      </div>\n    </ng-template>\n  </div>\n  <div class=\"row\">\n    <ng-template #noMovie>\n      <div class=\"col-md-2 col-centered\">\n        <p>No movie is in your collection</p>\n      </div>\n    </ng-template>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n  ChangeDetectorRef,\n} from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatTableDataSource } from \"@angular/material/table\";\n\nimport { Store } from \"@ngrx/store\";\nimport { Observable } from \"rxjs\";\nimport { ElementsState } from \"../../store/reducers\";\nimport * as selectors from \"../../store/selectors\";\nimport { Movie } from \"../../models\";\nimport * as actionsType from \"../../store/actions\";\nimport { of } from \"rxjs\";\nimport { MoviesService } from \"../../services\";\n\n@Component({\n  selector: \"app-movies-list\",\n  templateUrl: \"./movies-list.component.html\",\n  styleUrls: [\"./movies-list.component.css\"],\n})\nexport class MoviesListComponent implements OnInit, OnDestroy {\n  movies$: Observable<Movie[]>;\n  loadingMovies$: Observable<boolean>;\n  loadingCategories$: Observable<boolean>;\n  loadingAction$: Observable<boolean>;\n  searchValue: string;\n  searchValue$: Observable<string> = of(\"\");\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  obs: Observable<any>;\n\n  dataSource: MatTableDataSource<Movie> = new MatTableDataSource<Movie>();\n\n  constructor(\n    private store: Store<ElementsState>,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private moviesService: MoviesService\n  ) {\n    //this.moviesService.getCategoriesAndMoviesAfterRefreshPage();\n  }\n\n  ngOnInit(): void {\n    console.log(\"aaaa\")\n    this.movies$ = this.store.select<Movie[]>(\n      selectors.getSelectedMoviesByIdCategory\n    );\n    this.loadingMovies$ = this.store.select<boolean>(\n      selectors.getIsLoadingAllMovies\n    );\n    this.loadingCategories$ = this.store.select<boolean>(\n      selectors.getIsCategoriesLoading\n    );\n\n    this.loadingAction$ = this.store.select<boolean>(\n      selectors.getIsLoadingActionMovie\n    );\n    this.changeDetectorRef.detectChanges();\n\n    this.movies$.subscribe((movies) => {\n      this.dataSource.data = movies;\n      this.dataSource.paginator = this.paginator;\n    });\n    this.obs = this.dataSource.connect();\n  }\n\n  ngOnDestroy() {\n    if (this.dataSource) {\n      this.dataSource.disconnect();\n    }\n  }\n\n  search(searchValue: string) {\n    this.searchValue = searchValue;\n  }\n  onUpdateMovie(movieId: number) {\n    this.router.navigate([`movies/movie/${movieId}`]);\n  }\n\n  onDeleteMovie(movieId: number) {\n    this.store.dispatch(actionsType.DELETE_MOVIE({ movieId: movieId }));\n  }\n\n  onDetailsMovie(movieId: number) {\n    this.router.navigate([`movies/movie-details/${movieId}`]);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-2 col-centered\">\n    <app-search\n      [searchName]=\"'search movie'\"\n      [searchValue]=\"searchValue$ | async\"\n      (search)=\"search($event)\"\n    ></app-search>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"movies$ | async as movies\">\n  <div\n    *ngIf=\"\n      !(loadingCategories$ | async) && !(loadingMovies$ | async);\n      else loader\n    \"\n  >\n    <ng-container *ngIf=\"movies.length > 0; else noMovie\">\n      <app-movie-preview\n        *ngFor=\"let movie of obs | async | titleMoviesFilter: searchValue\"\n        [movie]=\"movie\"\n        (updateMovie)=\"onUpdateMovie($event)\"\n        (deleteMovie)=\"onDeleteMovie($event)\"\n        (detailsMovie)=\"onDetailsMovie($event)\"\n      ></app-movie-preview>\n    </ng-container>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"loadingAction$ | async\">\n  <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</div>\n<div class=\"row\">\n  <mat-paginator [pageSizeOptions]=\"[6, 9, 12, 18]\"></mat-paginator>\n</div>\n<div class=\"row\">\n  <ng-template #loader>\n    <div class=\"col-md-2 col-centered\">\n      <mat-spinner color=\"primary\" diameter=\"80\"> </mat-spinner>\n    </div>\n  </ng-template>\n</div>\n<div class=\"row\">\n  <ng-template #noMovie>\n    <div class=\"col-md-2 col-centered\">\n      <p>No movie is associated with this category</p>\n    </div>\n  </ng-template>\n</div>\n","import {Component, OnInit, ChangeDetectorRef, OnDestroy} from '@angular/core';\nimport {MediaMatcher} from '@angular/cdk/layout';\nimport * as actionsType from '../../store/actions';\nimport {Store} from '@ngrx/store';\nimport {ElementsState} from '../../store/reducers';\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['./template.component.css'],\n})\nexport class TemplateComponent implements OnInit, OnDestroy {\n  collapsedNav: boolean;\n  mobileQuery: MediaQueryList;\n\n  private _mobileQueryListener: () => void;\n\n  constructor(changeDetectorRef: ChangeDetectorRef, media: MediaMatcher, private store: Store<ElementsState>) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n\n  }\n\n  ngOnInit(): void {\n    console.log(\"appel back........\")\n    this.store.dispatch(actionsType.GET_CATEGORIES());\n    this.store.dispatch(actionsType.GET_MOVIES());\n\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n}\n","<mat-drawer-container>\n  <mat-drawer\n    #snav\n    [mode]=\"mobileQuery.matches ? 'over' : 'side'\"\n    [opened]=\"!mobileQuery.matches\"\n    [ngClass]=\"{ 'sidenav-collapsed': collapsedNav && !mobileQuery.matches }\"\n  >\n    <div class=\"sidenav-header\">\n      <span>{{ collapsedNav && !mobileQuery.matches ? \"M\" : \"Movies\" }}</span>\n    </div>\n    <ul>\n      <li>\n        <a routerLink=\"/\">Home<mat-icon>home</mat-icon></a>\n      </li>\n      <li>\n        <a routerLink=\"/movies\"\n          >Categories movies<mat-icon>local_movies</mat-icon></a\n        >\n      </li>\n      <li>\n        <a routerLink=\"/movies/add-movie\"\n          >Add movie<mat-icon>movie_creation</mat-icon></a\n        >\n      </li>\n      <li>\n        <a routerLink=\"/movies/my-collection\"\n          >My collection<mat-icon>collections</mat-icon></a\n        >\n      </li>\n    </ul>\n  </mat-drawer>\n  <mat-drawer-content\n    [ngClass]=\"{ 'sidenav-collapsed': collapsedNav && !mobileQuery.matches }\"\n  >\n    <mat-toolbar>\n      <button\n        mat-icon-button\n        (click)=\"\n          mobileQuery.matches ? snav.toggle() : (collapsedNav = !collapsedNav)\n        \"\n      >\n        <mat-icon>menu</mat-icon>\n      </button>\n    </mat-toolbar>\n    <div class=\"container-fluid\">\n      <router-outlet></router-outlet>\n    </div>\n  </mat-drawer-content>\n</mat-drawer-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router, NavigationEnd } from \"@angular/router\";\nimport { ElementsState } from \"../../store/reducers\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable } from \"rxjs\";\nimport { Movie, Category } from \"../../models\";\nimport * as selectors from \"../../store/selectors\";\nimport { MoviesService } from \"../../services\";\nimport * as actionsType from \"../../store/actions\";\n@Component({\n  selector: \"app-update-movie\",\n  templateUrl: \"./update-movie.component.html\",\n  styleUrls: [\"./update-movie.component.css\"],\n})\nexport class UpdateMovieComponent implements OnInit {\n  movie$: Observable<Movie>;\n  loadingCategories$: Observable<boolean>;\n  loadingMovies$: Observable<boolean>;\n  optionsCategories$: Observable<Category[]>;\n  loadingUpdateMovie$: Observable<boolean>;\n\n  constructor(\n    private store: Store<ElementsState>,\n    private moviesService: MoviesService\n  ) {\n    //this.moviesService.getCategoriesAndMoviesAfterRefreshPage();\n  }\n\n  ngOnInit(): void {\n    this.movie$ = this.store.select<Movie>(selectors.getMovieById);\n    this.loadingCategories$ = this.store.select<boolean>(\n      selectors.getIsCategoriesLoading\n    );\n    this.loadingMovies$ = this.store.select<boolean>(\n      selectors.getIsLoadingAllMovies\n    );\n\n    this.optionsCategories$ = this.store.select<Category[]>(\n      selectors.getAllCategories\n    );\n    this.loadingUpdateMovie$ = this.store.select<boolean>(\n      selectors.getIsLoadingActionMovie\n    );\n  }\n\n  onUpdateMovie(movie: Movie) {\n    this.store.dispatch(actionsType.UPDATE_MOVIE({ movie: movie }));\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-offset-1\">\n    <ng-container\n      *ngIf=\"\n        !(loadingCategories$ | async) && !(loadingMovies$ | async);\n        else loader\n      \"\n    >\n      <app-form-movie\n        [optionsCategories]=\"optionsCategories$ | async\"\n        [movie]=\"movie$ | async\"\n        (addMovie)=\"onUpdateMovie($event)\"\n        [loadingAddMovie]=\"loadingUpdateMovie$ | async\"\n        [action]=\"'update movie'\"\n      ></app-form-movie>\n    </ng-container>\n  </div>\n</div>\n<div class=\"row\">\n  <ng-template #loader>\n    <div class=\"col-md-2 col-centered\">\n      <mat-spinner color=\"primary\" diameter=\"80\"> </mat-spinner>\n    </div>\n  </ng-template>\n</div>\n","export * from \"./movies.module\";\n","import { NgModule } from \"@angular/core\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatDividerModule } from \"@angular/material/divider\";\nimport { MatGridListModule } from \"@angular/material/grid-list\";\nimport { MatProgressButtonsModule } from \"mat-progress-buttons\";\n\nconst MaterialModules = [\n  MatIconModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatCardModule,\n  MatSelectModule,\n  MatProgressSpinnerModule,\n  MatButtonModule,\n  MatToolbarModule,\n  MatProgressButtonsModule,\n  MatSnackBarModule,\n  MatProgressBarModule,\n  MatDialogModule,\n  MatPaginatorModule,\n  MatTableModule,\n  MatSidenavModule,\n  MatListModule,\n  MatDividerModule,\n  MatGridListModule,\n];\n\n@NgModule({\n  imports: MaterialModules,\n  exports: MaterialModules,\n})\nexport class MaterialModule {}\n","import { Injectable } from \"@angular/core\";\nimport { Movie, Category, Comment } from \"../models\";\n\nimport {\n  HttpRequest,\n  HttpResponse,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HTTP_INTERCEPTORS,\n} from \"@angular/common/http\";\nimport { Observable, of, throwError } from \"rxjs\";\nimport { delay, mergeMap, materialize, dematerialize } from \"rxjs/operators\";\n\n// array in local storage for registered users\nlet categoriesStorage: Category[] =\n  JSON.parse(sessionStorage.getItem(\"categories\")) || [];\nlet moviesStorage: Movie[] = JSON.parse(sessionStorage.getItem(\"movies\")) || [];\nlet commentsStorage: Comment[] = JSON.parse(sessionStorage.getItem(\"comments\")) || [];\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n  constructor() {\n    let movies: Movie[] = [\n      {\n        id: 1,\n        categoryId: 1,\n        language: \"Japanese\",\n        recordedYear: 2016,\n        title: \"君の名は\",\n        image: \"https://www.flagsonline.fr/uploads/2016-6-6/420-272/japan.jpg\",\n        specialMention: {\n          firstName: \"makoto\",\n          lastName: \"shinkai\",\n        },\n        description:\n          \"説明：「映画、または映画は、動画や音声を使用して物語を語ったり、人々に何かを教えたりする一種の視覚的コミュニケーションです。ほとんどの人は、一種の娯楽または楽しみの方法として映画を見る（見る）」、\",\n        selected: false,\n      },\n\n      {\n        id: 4,\n        categoryId: 1,\n        language: \"Japanese\",\n        recordedYear: 2017,\n        title: \"打ち上げ花火\",\n        image: \"https://www.flagsonline.fr/uploads/2016-6-6/420-272/japan.jpg\",\n        specialMention: {\n          firstName: \"Nobuyuki\",\n          lastName: \"Takeuchi\",\n        },\n        description:\n          \"説明：「映画、または映画は、動画や音声を使用して物語を語ったり、人々に何かを教えたりする一種の視覚的コミュニケーションです。ほとんどの人は、一種の娯楽または楽しみの方法として映画を見る（見る）」、\",\n        selected: false,\n      },\n      {\n        id: 5,\n        categoryId: 1,\n        language: \"Japanese\",\n        recordedYear: 2018,\n        title: \"あの花\",\n        image: \"https://www.flagsonline.fr/uploads/2016-6-6/420-272/japan.jpg\",\n        specialMention: {\n          firstName: \"Tatsuyuki\",\n          lastName: \"Nagai\",\n        },\n        description:\n          \"説明：「映画、または映画は、動画や音声を使用して物語を語ったり、人々に何かを教えたりする一種の視覚的コミュニケーションです。ほとんどの人は、一種の娯楽または楽しみの方法として映画を見る（見る）」、\",\n        selected: false,\n      },\n      {\n        id: 6,\n        categoryId: 1,\n        language: \"Japanese\",\n        recordedYear: 2019,\n        title: \"エンジェルビーツ\",\n        image: \"https://www.flagsonline.fr/uploads/2016-6-6/420-272/japan.jpg\",\n        specialMention: {\n          firstName: \"Hiro\",\n          lastName: \"Maruyama\",\n        },\n        description:\n          \"説明：「映画、または映画は、動画や音声を使用して物語を語ったり、人々に何かを教えたりする一種の視覚的コミュニケーションです。ほとんどの人は、一種の娯楽または楽しみの方法として映画を見る（見る）」、\",\n        selected: true,\n      },\n      {\n        id: 2,\n        categoryId: 2,\n        language: \"English\",\n        recordedYear: 2017,\n        title: \"Wayne's world\",\n        image: \"https://i.ebayimg.com/images/g/LmIAAOSw3YNXYwX-/s-l300.jpg\",\n        specialMention: {\n          firstName: \"Mike\",\n          lastName: \"Myers\",\n        },\n        description:\n          \"Movies, or films, are a type of visual communication which uses moving pictures and sound to tell stories or teach people something. Most people watch (view) movies as a type of entertainment or a way to have fun\",\n        selected: false,\n      },\n      {\n        id: 7,\n        categoryId: 2,\n        language: \"English\",\n        recordedYear: 2019,\n        title: \"Beavis & Butt-head do America\",\n        image: \"https://i.ebayimg.com/images/g/LmIAAOSw3YNXYwX-/s-l300.jpg\",\n        specialMention: {\n          firstName: \"Mike\",\n          lastName: \"Judge\",\n        },\n        description:\n          \"Movies, or films, are a type of visual communication which uses moving pictures and sound to tell stories or teach people something. Most people watch (view) movies as a type of entertainment or a way to have fun\",\n        selected: true,\n      },\n      {\n        id: 8,\n        categoryId: 2,\n        language: \"English\",\n        recordedYear: 2020,\n        title: \"Human traffic\",\n        image: \"https://i.ebayimg.com/images/g/LmIAAOSw3YNXYwX-/s-l300.jpg\",\n        specialMention: {\n          firstName: \"John\",\n          lastName: \"Simm\",\n        },\n        description:\n          \"Movies, or films, are a type of visual communication which uses moving pictures and sound to tell stories or teach people something. Most people watch (view) movies as a type of entertainment or a way to have fun\",\n        selected: false,\n      },\n      {\n        id: 9,\n        categoryId: 2,\n        language: \"English\",\n        recordedYear: 2019,\n        title: \"Ted\",\n        image: \"https://i.ebayimg.com/images/g/LmIAAOSw3YNXYwX-/s-l300.jpg\",\n        specialMention: {\n          firstName: \"Seth\",\n          lastName: \"MacFarlane\",\n        },\n        description:\n          \"Movies, or films, are a type of visual communication which uses moving pictures and sound to tell stories or teach people something. Most people watch (view) movies as a type of entertainment or a way to have fun\",\n        selected: false,\n      },\n      {\n        id: 13,\n        categoryId: 2,\n        language: \"English\",\n        recordedYear: 2016,\n        title: \"Harold & Kumar\",\n        image: \"https://i.ebayimg.com/images/g/LmIAAOSw3YNXYwX-/s-l300.jpg\",\n        specialMention: {\n          firstName: \"John\",\n          lastName: \"Cho\",\n        },\n        description:\n          \"Movies, or films, are a type of visual communication which uses moving pictures and sound to tell stories or teach people something. Most people watch (view) movies as a type of entertainment or a way to have fun\",\n        selected: true,\n      },\n      {\n        id: 10,\n        categoryId: 2,\n        language: \"English\",\n        recordedYear: 2020,\n        title: \"The big lebowski\",\n        image: \"https://i.ebayimg.com/images/g/LmIAAOSw3YNXYwX-/s-l300.jpg\",\n        specialMention: {\n          firstName: \"Steve\",\n          lastName: \"Buscemi\",\n        },\n        description:\n          \"Movies, or films, are a type of visual communication which uses moving pictures and sound to tell stories or teach people something. Most people watch (view) movies as a type of entertainment or a way to have fun\",\n        selected: false,\n      },\n      {\n        id: 3,\n        categoryId: 3,\n        language: \"English\",\n        recordedYear: 2018,\n        title: \"Whiplash\",\n        image: \"https://i.ebayimg.com/images/g/LmIAAOSw3YNXYwX-/s-l300.jpg\",\n        specialMention: {\n          firstName: \"J.K.\",\n          lastName: \"Simmons\",\n        },\n        description:\n          \"Movies, or films, are a type of visual communication which uses moving pictures and sound to tell stories or teach people something. Most people watch (view) movies as a type of entertainment or a way to have fun\",\n        selected: false,\n      },\n      {\n        id: 11,\n        categoryId: 3,\n        language: \"English\",\n        recordedYear: 2019,\n        title: \"The Filth And The Fury\",\n        image: \"https://i.ebayimg.com/images/g/LmIAAOSw3YNXYwX-/s-l300.jpg\",\n        specialMention: {\n          firstName: \"John\",\n          lastName: \"Lydon\",\n        },\n        description:\n          \"Movies, or films, are a type of visual communication which uses moving pictures and sound to tell stories or teach people something. Most people watch (view) movies as a type of entertainment or a way to have fun\",\n        selected: false,\n      },\n      {\n        id: 12,\n        categoryId: 3,\n        language: \"English\",\n        recordedYear: 2020,\n        title: \"The blues brothers\",\n        image: \"https://i.ebayimg.com/images/g/LmIAAOSw3YNXYwX-/s-l300.jpg\",\n        specialMention: {\n          firstName: \"Dan\",\n          lastName: \"Aykroyd\",\n        },\n        description:\n          \"Movies, or films, are a type of visual communication which uses moving pictures and sound to tell stories or teach people something. Most people watch (view) movies as a type of entertainment or a way to have fun\",\n        selected: false,\n      },\n    ];\n\n    let categories: Category[] = [\n      {\n        id: 1,\n        title: \" Japanese anime\",\n        emoji: \"👨‍👩‍👧‍👦\",\n        emojiStyle: \"emoji-simple-swell\",\n      },\n      {\n        id: 2,\n        title: \"Crazy movies\",\n        emoji: \"🐱‍🐉🐱‍🐉\",\n        emojiStyle: \"emoji-swell\",\n      },\n      {\n        id: 3,\n        title: \"Music themed\",\n        emoji: \"🎵🎵🎵🎵\",\n        emojiStyle: \"emoji-rotate\",\n      },\n      {\n        id: 4,\n        title: \"Father’s Day\",\n        emoji: \"👨👨👨👨\",\n        emojiStyle: \"emoji-swell\",\n      },\n    ];\n    let comments: Comment [] = [{\n      id: 1,\n      idMovie: 2,\n      text: \"Jolie filme je le recommande\"\n    },\n    {\n      id: 2,\n      idMovie: 2,\n      text: \"The best ...\"\n    },\n    {\n      id: 3,\n      idMovie: 2,\n      text: \"Je le recommande\"\n    },\n  ]\n    sessionStorage.setItem(\"categories\", JSON.stringify(categories));\n    sessionStorage.setItem(\"movies\", JSON.stringify(movies));\n    sessionStorage.setItem(\"comments\", JSON.stringify(comments));\n  }\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const { url, method, headers, body } = request;\n\n    // wrap in delayed observable to simulate server api call\n    return of(null)\n      .pipe(mergeMap(handleRoute))\n      .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n      .pipe(delay(1500))\n      .pipe(dematerialize());\n\n    function handleRoute() {\n      switch (true) {\n        case url.endsWith(\"/categories\") && method === \"GET\":\n          return getCategories();\n        case url.endsWith(\"/movies\") && method === \"GET\":\n          return getMovies();\n        case url.endsWith(\"/movie\") && method === \"POST\":\n          return saveMovie();\n        case url.match(/\\/movie\\/\\d+$/) && method === \"PUT\":\n          return updateMovie();\n        case url.match(/\\/movie\\/\\d+$/) && method === \"DELETE\":\n          return deleteMovie();\n        case url.match(/\\/movie\\/\\d+$/) && method === \"POST\":\n          return addMovieToMyCollection();\n        case url.match(/\\/comments\\/\\d+$/) && method === \"GET\":\n            return getCommentsByIdMovie();\n\n        default:\n          // pass through any requests not handled above\n          return next.handle(request);\n      }\n    }\n\n    // route functions\n\n    function getCategories() {\n      return ok(categoriesStorage);\n    }\n\n    function getMovies() {\n      console.log(moviesStorage);\n      return ok(moviesStorage);\n    }\n\n    function getCommentsByIdMovie() {\n      return ok(commentsStorage.reduce((data, comment:Comment) => {\n        if (comment.idMovie === idFromUrl()) {\n          data.push(comment);\n        }\n  \n        return data;\n      }, []));\n    }\n\n    function saveMovie() {\n      const movieSaved: Movie = {\n        id: Math.floor(Math.random() * 1000),\n        categoryId: body.categoryId,\n        title: body.title,\n        language: body.language,\n        recordedYear: body.recordedYear,\n        image: body.image,\n        specialMention: {\n          lastName: body.specialMention.lastName,\n          firstName: body.specialMention.firstName,\n        },\n        description: body.description,\n        selected: body.selected,\n      };\n\n      if (\n        moviesStorage.find((movie: Movie) => movie.title === movieSaved.title)\n      ) {\n        return error(\"movie  \" + movieSaved.title + \"  is already taken\");\n      }\n      moviesStorage = [...moviesStorage];\n      moviesStorage.push(movieSaved);\n      sessionStorage.setItem(\"movies\", JSON.stringify(moviesStorage));\n\n      return ok(movieSaved);\n    }\n\n    function updateMovie() {\n      const movieSaved = body;\n      moviesStorage = moviesStorage.filter(\n        (movie: Movie) => movie.id !== idFromUrl()\n      );\n      moviesStorage.push(movieSaved);\n      sessionStorage.setItem(\"movies\", JSON.stringify(moviesStorage));\n      return ok(\"movie  \" + movieSaved.title + \"  successfully updated\");\n    }\n    function addMovieToMyCollection() {\n      let currentMovie: Movie = moviesStorage.find(\n        (movie: Movie) => movie.id == idFromUrl()\n      );\n\n      moviesStorage = moviesStorage.filter(\n        (movie: Movie) => movie.id !== currentMovie.id\n      );\n\n      currentMovie = { ...currentMovie };\n\n      currentMovie.selected = !currentMovie.selected;\n      moviesStorage.push(currentMovie);\n      sessionStorage.setItem(\"movies\", JSON.stringify(moviesStorage));\n\n      if (currentMovie.selected == true) {\n        return ok(\n          \"movie  \" + currentMovie.title + \"  successfully added to collection\"\n        );\n      } else\n        return ok(\n          \"movie  \" + currentMovie.title + \"  successfully remove to collection\"\n        );\n    }\n\n    function deleteMovie() {\n      moviesStorage = moviesStorage.filter(\n        (movie: Movie) => movie.id !== idFromUrl()\n      );\n      sessionStorage.setItem(\"movies\", JSON.stringify(moviesStorage));\n      return ok(\"movie successfully deleted\");\n    }\n\n    // helper functions\n\n    function ok(body?) {\n      return of(new HttpResponse({ status: 200, body }));\n    }\n\n    function serverError() {\n      return throwError({\n        status: 500,\n        error: { message: \"An error occured\" },\n      });\n    }\n\n    function error(message) {\n      return throwError({ error: { message } });\n    }\n\n    function idFromUrl() {\n      const urlParts = url.split(\"/\");\n      return parseInt(urlParts[urlParts.length - 1]);\n    }\n  }\n}\n\nexport const fakeBackendProvider = {\n  // use fake backend in place of Http service for backend-less development\n  provide: HTTP_INTERCEPTORS,\n  useClass: FakeBackendInterceptor,\n  multi: true,\n};\n","export * from \"./fake-backend.service\";\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { routes } from \"./movies.routes\";\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MoviesRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  TemplateComponent,\n  CategoriesListComponent,\n  MoviesListComponent,\n  AddMovieComponent,\n  UpdateMovieComponent,\n  MoviesCollectionComponent,\n  MovieDetailsContainerComponent,\n} from \"./containers\";\nimport {\n  CategoryPreviewComponent,\n  MoviePreviewComponent,\n  SearchComponent,\n  FormMovieComponent,\n  SelectComponent,\n  SelectTabObjectComponent,\n  ConfirmationDialogComponent,\n  MovieDetailsComponent,\n  AddCommentComponent,\n  PreviewCommentComponent\n} from \"./components\";\nimport { MaterialModule } from \"./material.module\";\nimport { MoviesRoutingModule } from \"./movies-routing.module\";\nimport { MoviesService } from \"./services\";\nimport { reducers } from \"./store/reducers\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { effects } from \"./store/effects\";\nimport { TitleCategoriesFilterPipe, TitleMoviesFilterPipe } from \"./pipes\";\nimport { fakeBackendProvider } from \"./mocks\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MediaMatcher } from \"@angular/cdk/layout\";\nimport { SharedModule } from \"../shared\";\n@NgModule({\n  declarations: [\n    TemplateComponent,\n    CategoriesListComponent,\n    CategoryPreviewComponent,\n    SearchComponent,\n    TitleCategoriesFilterPipe,\n    MoviesListComponent,\n    MoviePreviewComponent,\n    TitleMoviesFilterPipe,\n    AddMovieComponent,\n    FormMovieComponent,\n    SelectComponent,\n    SelectComponent,\n    SelectTabObjectComponent,\n    UpdateMovieComponent,\n    ConfirmationDialogComponent,\n    MoviesCollectionComponent,\n    MovieDetailsComponent,\n    MovieDetailsContainerComponent,\n    AddCommentComponent,\n    PreviewCommentComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MoviesRoutingModule,\n    HttpClientModule,\n    MaterialModule,\n    //SharedModule,\n    StoreModule.forRoot({}),\n    StoreModule.forFeature(\"elements\", reducers),\n    EffectsModule.forRoot(),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [MoviesService, fakeBackendProvider, MediaMatcher],\n  entryComponents: [ConfirmationDialogComponent],\n})\nexport class MoviesModule {}\n","import { Routes } from \"@angular/router\";\nimport {\n  AddMovieComponent,\n  CategoriesListComponent,\n  MoviesListComponent,\n  UpdateMovieComponent,\n  MovieDetailsContainerComponent,\n  TemplateComponent,\n  MoviesCollectionComponent,\n} from \"./containers\";\n\nexport const routes: Routes = [\n  {\n    path: \"\",\n\n    component: TemplateComponent,\n\n    children: [\n      {\n        path: \"\",\n        component: CategoriesListComponent,\n      },\n      {\n        path: \"category/:categoryId\",\n        component: MoviesListComponent,\n      },\n      {\n        path: \"add-movie\",\n        component: AddMovieComponent,\n      },\n      {\n        path: \"movie/:movieId\",\n        component: UpdateMovieComponent,\n      },\n      {\n        path: \"movie-details/:movieId\",\n        component: MovieDetailsContainerComponent,\n      },\n      {\n        path: \"my-collection\",\n        component: MoviesCollectionComponent,\n      },\n    ],\n  },\n];\n","export * from \"./title-categories-filter.pipe\";\nexport * from \"./title-movies-filter.pipe\";\n","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { Category } from \"../models\";\nimport { categoriesReducer } from \"../store/reducers\";\n@Pipe({\n  name: \"titleCategoriesFilter\",\n})\nexport class TitleCategoriesFilterPipe implements PipeTransform {\n  categories: Category[] = [];\n  transform(categories: Category[], searchValue: string): Category[] {\n    if (!searchValue) return categories;\n    /**\n     * filtrer les categories par titres\n     */\n    this.categories = categories.filter(\n      (category) =>\n        category.title.toLowerCase().indexOf(searchValue.toLowerCase()) > -1\n    );\n    return this.categories;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { Movie } from \"../models\";\n@Pipe({\n  name: \"titleMoviesFilter\",\n})\nexport class TitleMoviesFilterPipe implements PipeTransform {\n  movies: Movie[] = [];\n  transform(movies: Movie[], searchValue: string): Movie[] {\n    if (!searchValue) return movies;\n    /**\n     * filtrer les movies par titres\n     */\n    this.movies = movies.filter(\n      (movie) =>\n        movie.title.toLowerCase().indexOf(searchValue.toLowerCase()) > -1\n    );\n    return this.movies;\n  }\n}\n","export * from \"./movies.service\";\n","import { Injectable } from \"@angular/core\";\nimport { Movie } from \"../models\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { filter } from \"rxjs/operators\";\nimport { Router, NavigationEnd } from \"@angular/router\";\nimport * as actionsType from \"../store/actions\";\nimport { ElementsState } from \"../store/reducers\";\nimport { Store } from \"@ngrx/store\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MoviesService {\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private store: Store<ElementsState>\n  ) {}\n\n  getCategories() {\n    return this.http.get(\"http://localhost:4200:/categories\");\n  }\n\n  getMovies() {\n    return this.http.get(\"http://localhost:4200:/movies\");\n  }\n\n  getCommentsByIdMovie(movieId: number) {\n    return this.http.get(\"http://localhost:4200:/comments/\"+ movieId);\n  }\n\n  addMovie(movie: Movie) {\n    return this.http.post(\"http://localhost:4200:/movie\", movie);\n  }\n\n  updateMovie(movie: Movie) {\n    return this.http.put(\"http://localhost:4200:/movie/\" + movie.id, movie);\n  }\n\n  deleteMovie(movieId: number) {\n    return this.http.delete(\"http://localhost:4200:/movie/\" + movieId);\n  }\n  addMovieToMyCollection(movieId: number) {\n    return this.http.post(\"http://localhost:4200:/movie/\" + movieId, {});\n  }\n\n  /**\n  getCategoriesAndMoviesAfterRefreshPage() {\n    this.router.events\n      .pipe(filter((rs): rs is NavigationEnd => rs instanceof NavigationEnd))\n      .subscribe((event) => {\n        if (event.id === 1 && event.url === event.urlAfterRedirects) {\n          this.store.dispatch(actionsType.GET_CATEGORIES());\n          this.store.dispatch(actionsType.GET_MOVIES());\n        }\n      });\n  }\n   **/\n}\n","import { createAction, props } from \"@ngrx/store\";\nimport { Category } from \"../../models\";\n\nexport const GET_CATEGORIES = createAction(\"[Category] Get_Categories\");\n\nexport const GET_CATEGORIES_SUCCESS = createAction(\n  \"[Category] Get_Categories_success\",\n  props<{ categories: Category[] }>()\n);\n\nexport const GET_CATEGORIES_ERROR = createAction(\n  \"[Category] Get_Categories_error\",\n  props<{ error: string }>()\n);\n\nexport const GET_SEARCH = createAction(\n  \"[Category] Get_Search\",\n  props<{ searchValue: string }>()\n);\n","import { createAction, props } from \"@ngrx/store\";\nimport { Comment } from \"../../models\";\n\nexport const GET_COMMENTS_BY_ID_MOVIE = createAction(\"[Comment] Get_Comments_By_Id_Movie\",props<{ movieId: number }>());\n\nexport const GET_COMMENTS_BY_ID_MOVIE_SUCCESS = createAction(\n  \"[Comment] Get_Comments_By_Id_Movie_Success\",\n  props<{ comments: Comment[] }>()\n);\n\nexport const GET_COMMENTS_BY_ID_MOVIE_ERROR = createAction(\n  \"[Comment] Get_Comments_By_Id_Movie_Error\",\n  props<{ error: string }>()\n);\n\n\n","export * from \"./categories.action\";\nexport * from \"./movies.actions\";\nexport * from \"./comments.action\"\n","import { createAction, props } from \"@ngrx/store\";\nimport { Movie } from \"../../models\";\n\nexport const GET_MOVIES = createAction(\"[Movie] Get_Movies\");\n\nexport const GET_MOVIES_SUCCESS = createAction(\n  \"[Movie] Get_Movies_success\",\n  props<{ movies: Movie[] }>()\n);\n\nexport const GET_MOVIES_ERROR = createAction(\n  \"[Movie] Get_Movies_error\",\n  props<{ error: string }>()\n);\n\nexport const ADD_MOVIE = createAction(\n  \"[Movie] Add_Movie\",\n  props<{ movie: Movie }>()\n);\n\nexport const ADD_MOVIE_SUCCESS = createAction(\n  \"[Movie] Add_Movie_success\",\n  props<{ movie: Movie }>()\n);\n\nexport const ADD_MOVIE_ERROR = createAction(\n  \"[Movie] Add_Movie_error\",\n  props<{ error: string }>()\n);\n\nexport const UPDATE_MOVIE = createAction(\n  \"[Movie] Update_Movie\",\n  props<{ movie: Movie }>()\n);\n\nexport const UPDATE_MOVIE_SUCCESS = createAction(\n  \"[Movie] Update_Movie_success\",\n  props<{ reply: string }>()\n);\n\nexport const UPDATE_MOVIE_ERROR = createAction(\n  \"[Movie] Update_Movie_error\",\n  props<{ error: string }>()\n);\n\nexport const DELETE_MOVIE = createAction(\n  \"[Movie] Delete_Movie\",\n  props<{ movieId: number }>()\n);\n\nexport const DELETE_MOVIE_SUCCESS = createAction(\n  \"[Movie] Delete_Movie_success\",\n  props<{ reply: string }>()\n);\n\nexport const DELETE_MOVIE_ERROR = createAction(\n  \"[Movie] Delete_Movie_error\",\n  props<{ error: string }>()\n);\n\nexport const ADD_OR_DELETE_MOVIE_COLLECTION = createAction(\n  \"[Movie] Add_Or_Delete_Movie_Collection\",\n  props<{ movieId: number }>()\n);\n\nexport const ADD_OR_DELETE_MOVIE_COLLECTION_SUCCESS = createAction(\n  \"[Movie] Add_Or_Delete_Movie_Collection_success\",\n  props<{ reply: string }>()\n);\n\nexport const ADD_OR_DELETE_MOVIE_COLLECTION_ERROR = createAction(\n  \"[Movie] Add_Or_Delete_Movie_Collection_error\",\n  props<{ error: string }>()\n);\n","import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Action } from \"@ngrx/store\";\n\nimport { of, Observable } from \"rxjs\";\nimport { map, mergeMap, catchError } from \"rxjs/operators\";\nimport * as categoriesActions from \"../actions\";\nimport { MoviesService } from \"../../services/movies.service\";\nimport { Category } from \"../../models\";\n@Injectable()\nexport class CategoriesEffect {\n  constructor(\n    private actions$: Actions,\n    private moviesService: MoviesService\n  ) {}\n\n  loadCategories$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(categoriesActions.GET_CATEGORIES),\n      mergeMap(() =>\n        this.moviesService.getCategories().pipe(\n          map(\n            (categories: Category[]) => (\n              console.log(categories),\n              categoriesActions.GET_CATEGORIES_SUCCESS({\n                categories: categories,\n              })\n            )\n          ),\n          catchError((err) =>\n            of(\n              categoriesActions.GET_CATEGORIES_ERROR({\n                error: err.error.message,\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n}\n","import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Action } from \"@ngrx/store\";\n\nimport { of, Observable } from \"rxjs\";\nimport { map, mergeMap, catchError } from \"rxjs/operators\";\nimport * as commentsActions from \"../actions\";\nimport { MoviesService } from \"../../services/movies.service\";\nimport { Comment } from \"../../models\";\n@Injectable()\nexport class CommentsEffect {\n  constructor(\n    private actions$: Actions,\n    private moviesService: MoviesService\n  ) {}\n\n  loadCommentsByIdMovie$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(commentsActions.GET_COMMENTS_BY_ID_MOVIE),\n      mergeMap((data) =>\n        this.moviesService.getCommentsByIdMovie(data.movieId).pipe(\n          map(\n            (comments: Comment[]) => (\n              commentsActions.GET_COMMENTS_BY_ID_MOVIE_SUCCESS({\n                comments: comments,\n              })\n            )\n          ),\n          catchError((err) =>\n            of(\n              commentsActions.GET_COMMENTS_BY_ID_MOVIE_ERROR({\n                error: err.error.message,\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n}\n","import { CategoriesEffect } from \"./categories.effect\";\nimport { MoviesEffect } from \"./movies.effects\";\nimport {CommentsEffect} from \"./comments.effect\";\n\nexport const effects: any[] = [CategoriesEffect, MoviesEffect, CommentsEffect];\n","import { from } from \"rxjs\";\n\nexport * from \"./effects\";\nexport * from \"./categories.effect\";\nexport * from \"./movies.effects\";\nexport * from \"./comments.effect\";\n","import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Action } from \"@ngrx/store\";\n\nimport { Observable, of } from \"rxjs\";\nimport {map, mergeMap, catchError, tap} from 'rxjs/operators';\nimport * as moviesActions from \"../actions\";\nimport { MoviesService } from \"../../services/movies.service\";\nimport { Movie } from \"../../models\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport {Router} from '@angular/router';\n\n@Injectable()\nexport class MoviesEffect {\n  constructor(\n    private actions$: Actions,\n    private moviesService: MoviesService,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) {}\n\n  loadMovies$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(moviesActions.GET_MOVIES),\n      mergeMap(() =>\n        this.moviesService.getMovies().pipe(\n          map(\n            (movies: Movie[]) => (\n              console.log(movies),\n              moviesActions.GET_MOVIES_SUCCESS({\n                movies: movies,\n              })\n            )\n          ),\n          catchError((err) =>\n            of(moviesActions.GET_MOVIES_ERROR({ error: err.error.message }))\n          )\n        )\n      )\n    )\n  );\n\n  addMovies$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(moviesActions.ADD_MOVIE),\n      mergeMap(\n        (data) => (\n          console.log(data),\n          this.moviesService.addMovie(data.movie).pipe(\n            map(\n              (movie: Movie) => (\n                this.snackBar.open(\n                  \"movie  \" + movie.title + \"  successfully added\",\n                  undefined,\n                  {\n                    duration: 5000,\n                    horizontalPosition: \"end\",\n                    verticalPosition: \"bottom\",\n                  }\n                ),\n                console.log(movie),\n                moviesActions.ADD_MOVIE_SUCCESS({\n                  movie: movie,\n                })\n              )\n            ),\n            tap(() => this.router.navigate([`movies/category/${data.movie.categoryId}`])),\n            catchError(\n              (err) => (\n                console.log(err),\n                this.snackBar.open(err.error.message, undefined, {\n                  duration: 5000,\n                  horizontalPosition: \"end\",\n                  verticalPosition: \"bottom\",\n                }),\n                of(moviesActions.ADD_MOVIE_ERROR({ error: err.error.message }))\n              )\n            )\n          )\n        )\n      )\n    )\n  );\n\n  updateMovies$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(moviesActions.UPDATE_MOVIE),\n      mergeMap(\n        (data) => (\n          console.log(data),\n          this.moviesService.updateMovie(data.movie).pipe(\n            map(\n              (reply: string) => (\n                this.snackBar.open(reply, undefined, {\n                  duration: 5000,\n                  horizontalPosition: \"end\",\n                  verticalPosition: \"bottom\",\n                }),\n                console.log(reply),\n                moviesActions.UPDATE_MOVIE_SUCCESS({\n                  reply: reply,\n                })\n              )\n            ),\n            catchError(\n              (err) => (\n                console.log(err),\n                this.snackBar.open(err.error.message, undefined, {\n                  duration: 5000,\n                  horizontalPosition: \"end\",\n                  verticalPosition: \"bottom\",\n                }),\n                of(\n                  moviesActions.UPDATE_MOVIE_ERROR({ error: err.error.message })\n                )\n              )\n            )\n          )\n        )\n      )\n    )\n  );\n\n  deleteMovies$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(moviesActions.DELETE_MOVIE),\n      mergeMap((data) =>\n        this.moviesService.deleteMovie(data.movieId).pipe(\n          map(\n            (reply: string) => (\n              this.snackBar.open(reply, undefined, {\n                duration: 5000,\n                horizontalPosition: \"end\",\n                verticalPosition: \"bottom\",\n              }),\n              console.log(reply),\n              moviesActions.DELETE_MOVIE_SUCCESS({\n                reply: reply,\n              })\n            )\n          ),\n          catchError(\n            (err) => (\n              console.log(err),\n              this.snackBar.open(err.error.message, undefined, {\n                duration: 5000,\n                horizontalPosition: \"end\",\n                verticalPosition: \"bottom\",\n              }),\n              of(moviesActions.DELETE_MOVIE_ERROR({ error: err.error.message }))\n            )\n          )\n        )\n      )\n    )\n  );\n  addMovieToMyCollection$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(moviesActions.ADD_OR_DELETE_MOVIE_COLLECTION),\n      mergeMap(\n        (data) => (\n          console.log(data),\n          this.moviesService.addMovieToMyCollection(data.movieId).pipe(\n            map(\n              (reply: string) => (\n                this.snackBar.open(reply, undefined, {\n                  duration: 5000,\n                  horizontalPosition: \"end\",\n                  verticalPosition: \"bottom\",\n                }),\n                console.log(reply),\n                moviesActions.ADD_OR_DELETE_MOVIE_COLLECTION_SUCCESS({\n                  reply: reply,\n                })\n              )\n            ),\n            catchError(\n              (err) => (\n                console.log(err),\n                this.snackBar.open(err.error.message, undefined, {\n                  duration: 5000,\n                  horizontalPosition: \"end\",\n                  verticalPosition: \"bottom\",\n                }),\n                of(\n                  moviesActions.ADD_OR_DELETE_MOVIE_COLLECTION_ERROR({\n                    error: err.error.message,\n                  })\n                )\n              )\n            )\n          )\n        )\n      )\n    )\n  );\n}\n","import { Category } from \"../../models\";\nimport { Action, createReducer, on } from \"@ngrx/store\";\nimport * as categoriesAction from \"../actions\";\nexport interface categoriesState {\n  categories: Category[];\n  loading: boolean;\n  error: string;\n}\n\nexport interface searchState {\n  serachValue: string;\n}\n\nconst initCategoriesState: categoriesState = {\n  categories: [],\n  loading: false,\n  error: \"\",\n};\n\nconst initSearchState: searchState = {\n  serachValue: \"\",\n};\n\nconst newStateSearch = (state: searchState, newData: searchState) => {\n  return Object.assign({}, state, newData);\n};\n\nconst reducerCategories = createReducer(\n  initCategoriesState,\n  on(categoriesAction.GET_CATEGORIES, (state) => ({ ...state, loading: true })),\n  on(categoriesAction.GET_CATEGORIES_SUCCESS, (state, { categories }) => ({\n    ...state,\n    categories: categories,\n    loading: false,\n  })),\n  on(categoriesAction.GET_CATEGORIES_ERROR, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error: error,\n  }))\n);\n\nconst reducerSearch = createReducer(\n  initSearchState,\n  on(categoriesAction.GET_SEARCH, (state, { searchValue }) => ({\n    ...state,\n    serachValue: searchValue,\n  }))\n);\n\nexport function categoriesReducer(\n  state: categoriesState | undefined,\n  action: Action\n) {\n  return reducerCategories(state, action);\n}\n\nexport function searchReducer(state: searchState | undefined, action: Action) {\n  return reducerSearch(state, action);\n}\n\nexport const getAllCategories = (state: categoriesState): Category[] =>\n  state.categories;\nexport const getIsCategoriesLoading = (state: categoriesState): boolean =>\n  state.loading;\nexport const getIsErrorLoadCategories = (state: categoriesState): string =>\n  state.error;\n\nexport const getSearch = (state: searchState): string => state.serachValue;\n","import { Comment } from \"../../models\";\r\nimport { Action, createReducer, on } from \"@ngrx/store\";\r\nimport * as commentsAction from \"../actions\";\r\n\r\nexport interface commentsState {\r\n    comments: Comment[];\r\n    loading: boolean;\r\n    error: string;\r\n}\r\n\r\nconst initCommentsState:commentsState= {\r\n    comments: [],\r\n    loading: false,\r\n    error: \"\"\r\n};\r\n\r\nconst reducerComments = createReducer (\r\n    initCommentsState,\r\n    on(commentsAction.GET_COMMENTS_BY_ID_MOVIE, (state,{ movieId }) => {\r\n        return {...state, loading: true}\r\n    }),\r\n    on (commentsAction.GET_COMMENTS_BY_ID_MOVIE_SUCCESS, (state, {comments})=> {\r\n        return {...state, comments: comments, loading: false}\r\n    }),\r\n    on (commentsAction.GET_COMMENTS_BY_ID_MOVIE_ERROR, (state, {error})=> {\r\n        return {...state, loading: false, error: error}\r\n    })\r\n)\r\n\r\nexport function commentsReducer (\r\n    state: commentsState | undefined,\r\n    action: Action\r\n) {\r\n    return reducerComments (state, action)\r\n}\r\n\r\nexport const getAllComments = (state: commentsState): Comment [] => state.comments;\r\nexport const getIsCommentsLoading = (state: commentsState): boolean => state.loading;\r\nexport const getIsErrorLoadComments = (state: commentsState): string => state.error;","import { ActionReducerMap } from \"@ngrx/store\";\nimport * as categoriesReducer from \"./categories.reducer\";\nimport * as moviesReducer from \"./movies.reducer\";\nimport * as commentsReducer from \"./comments.reducer\";\n\n// State de notre feature\nexport interface ElementsState {\n  categories: categoriesReducer.categoriesState;\n  searchCategory: categoriesReducer.searchState;\n  movies: moviesReducer.moviesState;\n  comments: commentsReducer.commentsState;\n}\n\n// Reducers pour notre state\nexport const reducers: ActionReducerMap<ElementsState> = {\n  categories: categoriesReducer.categoriesReducer,\n  searchCategory: categoriesReducer.searchReducer,\n  movies: moviesReducer.moviesReducer,\n  comments: commentsReducer.commentsReducer\n};\n","export * from \"./categories.reducer\";\nexport * from \"./elements.reducer\";\nexport * from \"./movies.reducer\";\nexport * from \"./comments.reducer\";\n","import { Action, createReducer, on } from \"@ngrx/store\";\nimport { Movie } from \"../../models\";\nimport * as moviesAction from \"../actions\";\n\nexport interface moviesState {\n  movies: Movie[];\n  currentMovie: Movie;\n  movieId: number;\n  loadingAllMovies: boolean;\n  loadingActionMovie: boolean;\n  success: string;\n  error: string;\n}\n\nconst initMoviesState: moviesState = {\n  movies: [],\n  currentMovie: null,\n  movieId: null,\n  loadingAllMovies: false,\n  loadingActionMovie: false,\n  error: \"\",\n  success: \"\",\n};\n\nconst reducerMovies = createReducer(\n  initMoviesState,\n  on(moviesAction.GET_MOVIES, (state) => {\n    return {\n      ...state,\n      loadingAllMovies: true,\n    };\n  }),\n  on(moviesAction.GET_MOVIES_SUCCESS, (state, { movies }) => {\n    return {\n      ...state,\n      movies: movies,\n      loadingAllMovies: false,\n    };\n  }),\n  on(moviesAction.GET_MOVIES_ERROR, (state, { error }) => {\n    return {\n      ...state,\n      loadingAllMovies: false,\n      error: error,\n    };\n  }),\n  on(moviesAction.ADD_MOVIE, (state, { movie }) => {\n    return { ...state, currentMovie: movie, loadingActionMovie: true };\n  }),\n  on(moviesAction.ADD_MOVIE_SUCCESS, (state, { movie }) => {\n    const currentMovies: Movie[] = [...state.movies];\n\n    currentMovies.push(movie);\n    return { ...state, movies: currentMovies, loadingActionMovie: false };\n  }),\n  on(moviesAction.ADD_MOVIE_ERROR, (state, { error }) => {\n    return { ...state, loadingActionMovie: false, error: error };\n  }),\n  on(moviesAction.UPDATE_MOVIE, (state, { movie }) => {\n    return { ...state, currentMovie: movie, loadingActionMovie: true };\n  }),\n  on(moviesAction.UPDATE_MOVIE_SUCCESS, (state, { reply }) => {\n    const indexMovieUpdated = state.movies.findIndex(\n      (movie) => movie.id === state.currentMovie.id\n    );\n    let currentMovies: Movie[] = [...state.movies];\n    currentMovies[indexMovieUpdated] = state.currentMovie;\n\n    return {\n      ...state,\n      movies: currentMovies,\n      success: reply,\n      loadingActionMovie: false,\n    };\n  }),\n  on(moviesAction.UPDATE_MOVIE_ERROR, (state, { error }) => {\n    return { ...state, loadingActionMovie: false, error: error };\n  }),\n  on(moviesAction.DELETE_MOVIE, (state, { movieId }) => {\n    return { ...state, movieId: movieId, loadingActionMovie: true };\n  }),\n  on(moviesAction.DELETE_MOVIE_SUCCESS, (state, { reply }) => {\n    const currentMovies: Movie[] = state.movies.filter(\n      (movie) => movie.id !== state.movieId\n    );\n    return {\n      ...state,\n      movies: currentMovies,\n      success: reply,\n      loadingActionMovie: false,\n    };\n  }),\n  on(moviesAction.DELETE_MOVIE_ERROR, (state, { error }) => {\n    return { ...state, loadingActionMovie: false, error: error };\n  }),\n  on(moviesAction.ADD_OR_DELETE_MOVIE_COLLECTION, (state, { movieId }) => {\n    return { ...state, movieId: movieId, loadingActionMovie: true };\n  }),\n  on(\n    moviesAction.ADD_OR_DELETE_MOVIE_COLLECTION_SUCCESS,\n    (state, { reply }) => {\n      let currentMovie: Movie = state.movies.find(\n        (movie: Movie) => movie.id == state.movieId\n      );\n\n      currentMovie = { ...currentMovie };\n\n      currentMovie.selected = !currentMovie.selected;\n\n      const currentMovies: Movie[] = state.movies.map((movie) => {\n        if (movie.id === currentMovie.id) {\n          movie = currentMovie;\n        }\n        return movie;\n      });\n\n      return {\n        ...state,\n        movies: currentMovies,\n        success: reply,\n        loadingActionMovie: false,\n      };\n    }\n  ),\n  on(moviesAction.ADD_OR_DELETE_MOVIE_COLLECTION_ERROR, (state, { error }) => {\n    return { ...state, loadingActionMovie: false, error: error };\n  })\n);\n\nexport function moviesReducer(state: moviesState | undefined, action: Action) {\n  return reducerMovies(state, action);\n}\n\nexport const getAllMovies = (state: moviesState): Movie[] => state.movies;\n\nexport const getIsLoadingAllMovies = (state: moviesState): boolean =>\n  state.loadingAllMovies;\nexport const getIsLoadingActionMovie = (state: moviesState): boolean =>\n  state.loadingActionMovie;\n\nexport const getError = (state: moviesState): string => state.error;\n\nexport const getSuccess = (state: moviesState): string => state.success;\n","import { createSelector } from \"@ngrx/store\";\nimport { ElementsState } from \"../reducers\";\nimport * as categoriesReducer from \"../reducers/categories.reducer\";\nimport { getElementsState } from \"./elements.selector\";\n\nconst getCategoriesState = createSelector(\n  getElementsState,\n  (state: ElementsState) => state.categories\n);\n\nconst getSearchState = createSelector(\n  getElementsState,\n  (state: ElementsState) => state.searchCategory\n);\n\nexport const getAllCategories = createSelector(\n  getCategoriesState,\n  categoriesReducer.getAllCategories\n);\n\nexport const getIsCategoriesLoading = createSelector(\n  getCategoriesState,\n  categoriesReducer.getIsCategoriesLoading\n);\n\nexport const getIsErrorLoadCategories = createSelector(\n  getCategoriesState,\n  categoriesReducer.getIsErrorLoadCategories\n);\n\nexport const getSearchValue = createSelector(\n  getSearchState,\n  categoriesReducer.getSearch\n);\n","import { from } from \"rxjs\";\r\nimport {createSelector} from \"@ngrx/store\";\r\nimport {ElementsState} from \"../reducers\";\r\nimport * as commentsReduccer from \"../reducers/comments.reducer\";\r\nimport {getElementsState} from \"./elements.selector\";\r\n\r\nconst getCommentsState = createSelector (getElementsState, (state: ElementsState) => state.comments);\r\n\r\nexport const getAllComments = createSelector (getCommentsState, commentsReduccer.getAllComments);\r\n\r\nexport const getIsCommentsLoading = createSelector (getCommentsState, commentsReduccer.getIsCommentsLoading);\r\n\r\nexport const getIsErrorLoadComments = createSelector (getCommentsState, commentsReduccer.getIsErrorLoadComments);\r\n","import { createFeatureSelector } from \"@ngrx/store\";\nimport { ElementsState } from \"../reducers\";\n\n// globalState\nexport const getElementsState = createFeatureSelector<ElementsState>(\n  \"elements\"\n);\n","export * from \"./categories.selector\";\nexport * from \"./movies.selector\";\nexport * from \"./comments.selector\";\n","import { createSelector } from \"@ngrx/store\";\nimport { ElementsState } from \"../reducers\";\nimport * as moviesReducer from \"../reducers/movies.reducer\";\nimport { getElementsState } from \"./elements.selector\";\nimport { getRouter, MyRouterStateSnapshot } from \"../../../shared/router-store\";\nimport { Movie } from \"../../models\";\n\nconst getMoviesState = createSelector(\n  getElementsState,\n  (state: ElementsState) => state.movies\n);\n\nexport const getAllMovies = createSelector(\n  getMoviesState,\n  moviesReducer.getAllMovies\n);\n\nexport const getSelectedMoviesByIdCategory = createSelector(\n  getRouter,\n  getAllMovies,\n  (router: MyRouterStateSnapshot, movies: Movie[]) => {\n    return movies.reduce((data, movie) => {\n      if (movie.categoryId == router.params[\"categoryId\"]) {\n        data.push(movie);\n      }\n\n      return data;\n    }, []);\n  }\n);\n\nexport const getMovieById = createSelector(\n  getRouter,\n  getAllMovies,\n  (router: MyRouterStateSnapshot, movies: Movie[]) => {\n    return movies.find((movie) => movie.id == router.params[\"movieId\"]);\n  }\n);\n\nexport const getMyCollectionMovies = createSelector(\n  getAllMovies,\n  (movies: Movie[]) => {\n    return movies.filter((movie) => movie.selected == true);\n  }\n);\n\nexport const getIsLoadingAllMovies = createSelector(\n  getMoviesState,\n  moviesReducer.getIsLoadingAllMovies\n);\n\nexport const getIsLoadingActionMovie = createSelector(\n  getMoviesState,\n  moviesReducer.getIsLoadingActionMovie\n);\n\nexport const getError = createSelector(getMoviesState, moviesReducer.getError);\nexport const getSuccess = createSelector(\n  getMoviesState,\n  moviesReducer.getSuccess\n);\n","import { RouterStateSerializer } from '@ngrx/router-store';\nimport { MyRouterStateSnapshot } from './router.state';\nimport { RouterStateSnapshot } from '@angular/router';\n\n\nexport class CustomRouterStateSerializer implements RouterStateSerializer<MyRouterStateSnapshot> {\n\tserialize(routerState: RouterStateSnapshot): MyRouterStateSnapshot {\n\t\tconst routerStateSnapshot: MyRouterStateSnapshot = {\n\t\t\turl: routerState.url,\n\t\t\tparams: null,\n\t\t\tqueryParams: null\n\t\t};\n\n\t\tlet childRoute = routerState.root;\n\t\twhile (childRoute.firstChild) {\n\t\t\tchildRoute = childRoute.firstChild;\n\t\t}\n\n\t\trouterStateSnapshot.params = childRoute.params;\n\t\trouterStateSnapshot.queryParams = childRoute.queryParams;\n\t\treturn routerStateSnapshot;\n\t}\n}\n","export * from \"./router.state\";\nexport * from \"./custom-router-state.serializer\";\n","import { RouterReducerState, routerReducer } from \"@ngrx/router-store\";\nimport { Params } from \"@angular/router\";\nimport {\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n} from \"@ngrx/store\";\n\nexport interface MyRouterStateSnapshot {\n  url: string;\n  params: Params;\n  queryParams: Params;\n}\n\nexport interface RouterState {\n  routerReducerState: RouterReducerState<MyRouterStateSnapshot>;\n}\n\nexport const routerReducers: ActionReducerMap<RouterState> = {\n  routerReducerState: routerReducer,\n};\n\nexport const getRouterState = createFeatureSelector<\n  RouterReducerState<MyRouterStateSnapshot>\n>(\"router\");\nexport const getRouter = createSelector(\n  getRouterState,\n  (routerState: any) => routerState.routerReducerState.state\n);\n"],"sourceRoot":"webpack:///"}