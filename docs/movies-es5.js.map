{"version":3,"sources":["webpack:///node_modules/@ngrx/router-store/__ivy_ngcc__/fesm2015/ngrx-router-store.js","webpack:///src/app/features/movies/components/add-comment/add-comment.component.ts","webpack:///src/app/features/movies/components/add-comment/add-comment.component.html","webpack:///src/app/features/movies/components/category-preview/category-preview.component.ts","webpack:///src/app/features/movies/components/category-preview/category-preview.component.html","webpack:///src/app/features/movies/components/confirmation-dialog/confirmation-dialog.component.ts","webpack:///src/app/features/movies/components/confirmation-dialog/confirmation-dialog.component.html","webpack:///src/app/features/movies/components/form-movie/form-movie.component.ts","webpack:///src/app/features/movies/components/form-movie/form-movie.component.html","webpack:///src/app/features/movies/components/index.ts","webpack:///src/app/features/movies/components/movie-details/movie-details.component.ts","webpack:///src/app/features/movies/components/movie-details/movie-details.component.html","webpack:///src/app/features/movies/components/movie-preview/movie-preview.component.ts","webpack:///src/app/features/movies/components/movie-preview/movie-preview.component.html","webpack:///src/app/features/movies/components/preview-comment/preview-comment.component.ts","webpack:///src/app/features/movies/components/preview-comment/preview-comment.component.html","webpack:///src/app/features/movies/components/search/search.component.ts","webpack:///src/app/features/movies/components/search/search.component.html","webpack:///src/app/features/movies/components/select-tab-object/select-tab-object.component.ts","webpack:///src/app/features/movies/components/select-tab-object/select-tab-object.component.html","webpack:///src/app/features/movies/components/select/select.component.ts","webpack:///src/app/features/movies/components/select/select.component.html","webpack:///src/app/features/movies/containers/add-movie/add-movie.component.ts","webpack:///src/app/features/movies/containers/add-movie/add-movie.component.html","webpack:///src/app/features/movies/containers/categories-list/categories-list.component.ts","webpack:///src/app/features/movies/containers/categories-list/categories-list.component.html","webpack:///src/app/features/movies/containers/index.ts","webpack:///src/app/features/movies/containers/movie-details-container/movie-details-container.component.ts","webpack:///src/app/features/movies/containers/movie-details-container/movie-details-container.component.html","webpack:///src/app/features/movies/containers/movies-collection/movies-collection.component.ts","webpack:///src/app/features/movies/containers/movies-collection/movies-collection.component.html","webpack:///src/app/features/movies/containers/movies-list/movies-list.component.ts","webpack:///src/app/features/movies/containers/movies-list/movies-list.component.html","webpack:///src/app/features/movies/containers/template/template.component.ts","webpack:///src/app/features/movies/containers/template/template.component.html","webpack:///src/app/features/movies/containers/update-movie/update-movie.component.ts","webpack:///src/app/features/movies/containers/update-movie/update-movie.component.html","webpack:///src/app/features/movies/index.ts","webpack:///src/app/features/movies/material.module.ts","webpack:///src/app/features/movies/mocks/fake-backend.service.ts","webpack:///src/app/features/movies/mocks/index.ts","webpack:///src/app/features/movies/movies-routing.module.ts","webpack:///src/app/features/movies/movies.module.ts","webpack:///src/app/features/movies/movies.routes.ts","webpack:///src/app/features/movies/pipes/index.ts","webpack:///src/app/features/movies/pipes/title-categories-filter.pipe.ts","webpack:///src/app/features/movies/pipes/title-movies-filter.pipe.ts","webpack:///src/app/features/movies/services/index.ts","webpack:///src/app/features/movies/services/movies.service.ts","webpack:///src/app/features/movies/store/actions/categories.action.ts","webpack:///src/app/features/movies/store/actions/comments.action.ts","webpack:///src/app/features/movies/store/actions/index.ts","webpack:///src/app/features/movies/store/actions/movies.actions.ts","webpack:///src/app/features/movies/store/effects/categories.effect.ts","webpack:///src/app/features/movies/store/effects/comments.effect.ts","webpack:///src/app/features/movies/store/effects/effects.ts","webpack:///src/app/features/movies/store/effects/index.ts","webpack:///src/app/features/movies/store/effects/movies.effects.ts","webpack:///src/app/features/movies/store/reducers/categories.reducer.ts","webpack:///src/app/features/movies/store/reducers/comments.reducer.ts","webpack:///src/app/features/movies/store/reducers/elements.reducer.ts","webpack:///src/app/features/movies/store/reducers/index.ts","webpack:///src/app/features/movies/store/reducers/movies.reducer.ts","webpack:///src/app/features/movies/store/selectors/categories.selector.ts","webpack:///src/app/features/movies/store/selectors/comments.selector.ts","webpack:///src/app/features/movies/store/selectors/elements.selector.ts","webpack:///src/app/features/movies/store/selectors/index.ts","webpack:///src/app/features/movies/store/selectors/movies.selector.ts","webpack:///src/app/features/shared/router-store/custom-router-state.serializer.ts","webpack:///src/app/features/shared/router-store/index.ts","webpack:///src/app/features/shared/router-store/router.state.ts"],"names":["ROUTER_REQUEST","routerRequestAction","ROUTER_NAVIGATION","routerNavigationAction","ROUTER_CANCEL","routerCancelAction","ROUTER_ERROR","routerErrorAction","ROUTER_NAVIGATED","routerNavigatedAction","routerReducer","state","action","routerAction","type","payload","routerState","navigationId","event","id","BaseRouterStoreState","RouterStateSerializer","SerializedRouterStateSnapshot","DefaultRouterStateSerializer","root","serializeRoute","url","route","children","map","c","params","paramMap","data","outlet","routeConfig","component","path","pathMatch","redirectTo","queryParams","queryParamMap","fragment","undefined","parent","firstChild","pathFromRoot","MinimalActivatedRouteSnapshot","MinimalRouterStateSnapshot","MinimalRouterStateSerializer","RouterState","Full","Minimal","StoreRouterConfig","StoreRouterActionPayload","NavigationActionTiming","PreActivation","PostActivation","_ROUTER_CONFIG","ROUTER_CONFIG","DEFAULT_ROUTER_FEATURENAME","_createRouterConfig","config","Object","assign","stateKey","serializer","navigationActionTiming","RouterTrigger","NONE","ROUTER","STORE","StoreRouterConnectingModule","store","router","errorHandler","lastEvent","trigger","setUpStoreStateListener","setUpRouterEventsListener","pipe","subscribe","routerStoreState","storeState","navigateIfNeeded","navigateByUrl","error","handleError","dispatchNavLate","routesRecognized","events","serialize","snapshot","dispatchRouterRequest","dispatchRouterNavigation","dispatchRouterCancel","reset","dispatchRouterError","dispatchRouterNavigated","dispatchRouterAction","lastRoutesRecognized","nextRouterState","urlAfterRedirects","dispatch","ngModule","providers","provide","useValue","useFactory","deps","useClass","ɵmod","ɵinj","factory","StoreRouterConnectingModule_Factory","t","ctorParameters","decorators","args","getSelectors","selectState","selectRouterState","selectCurrentRoute","selectFragment","selectQueryParams","selectQueryParam","param","selectRouteParams","selectRouteParam","selectRouteData","selectUrl","AddCommentComponent","alert","onClick","selector","templateUrl","styleUrls","CategoryPreviewComponent","goToMovies","changeDetection","OnPush","ConfirmationDialogComponent","dialogRef","message","FormMovieComponent","formBuilder","submitted","loadingAddMovie","addMovie","title","titleAlert","labelLanguage","optionsLanguage","labelYear","optionsYear","labelCategory","barButtonOptions","active","text","buttonColor","barColor","raised","stroked","mode","value","disabled","fullWidth","buttonIcon","fontIcon","createForm","registerMovieForm","group","movie","required","maxLength","language","recordedYear","category","categoryId","image","heroLastName","specialMention","lastName","heroFirstName","firstName","description","movieForm","selected","valid","emit","controls","onSubmit","MovieDetailsComponent","addOrDeleteToMyCollection","loadingAddOrDeleteMovieToMycollection","updateMovie","MoviePreviewComponent","dialog","deleteMovie","detailsMovie","MovieId","open","afterClosed","result","PreviewCommentComponent","SearchComponent","search","searchValue","SelectTabObjectComponent","SelectComponent","AddMovieComponent","moviesService","optionsCategories$","select","loadingCategories$","loadingMovies$","loadingAddMovie$","CategoriesListComponent","shared","categories$","searchValue$","test","navigate","MovieDetailsContainerComponent","movie$","loadingAddOrDeleteMovieToMycollection$","movieId","parseInt","get","comments$","console","log","loadingComments$","form","MoviesCollectionComponent","movies$","loadingDeleteMovieToMycollection$","MoviesListComponent","changeDetectorRef","dataSource","loadingAction$","detectChanges","movies","paginator","obs","connect","disconnect","TemplateComponent","media","mobileQuery","matchMedia","_mobileQueryListener","addListener","removeListener","UpdateMovieComponent","loadingUpdateMovie$","MaterialModules","MaterialModule","imports","exports","categoriesStorage","JSON","parse","sessionStorage","getItem","moviesStorage","commentsStorage","FakeBackendInterceptor","categories","emoji","emojiStyle","comments","idMovie","setItem","stringify","request","next","method","headers","body","handleRoute","endsWith","getCategories","getMovies","saveMovie","match","addMovieToMyCollection","getCommentsByIdMovie","handle","ok","reduce","comment","idFromUrl","push","movieSaved","Math","floor","random","find","filter","currentMovie","status","serverError","urlParts","split","length","fakeBackendProvider","multi","MoviesRoutingModule","forChild","MoviesModule","forRoot","forFeature","declarations","entryComponents","routes","TitleCategoriesFilterPipe","toLowerCase","indexOf","name","TitleMoviesFilterPipe","MoviesService","http","post","put","providedIn","GET_CATEGORIES","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_ERROR","GET_SEARCH","GET_COMMENTS_BY_ID_MOVIE","GET_COMMENTS_BY_ID_MOVIE_SUCCESS","GET_COMMENTS_BY_ID_MOVIE_ERROR","GET_MOVIES","GET_MOVIES_SUCCESS","GET_MOVIES_ERROR","ADD_MOVIE","ADD_MOVIE_SUCCESS","ADD_MOVIE_ERROR","UPDATE_MOVIE","UPDATE_MOVIE_SUCCESS","UPDATE_MOVIE_ERROR","DELETE_MOVIE","DELETE_MOVIE_SUCCESS","DELETE_MOVIE_ERROR","ADD_OR_DELETE_MOVIE_COLLECTION","ADD_OR_DELETE_MOVIE_COLLECTION_SUCCESS","ADD_OR_DELETE_MOVIE_COLLECTION_ERROR","CategoriesEffect","actions$","loadCategories$","err","CommentsEffect","loadCommentsByIdMovie$","effects","MoviesEffect","snackBar","loadMovies$","addMovies$","duration","horizontalPosition","verticalPosition","updateMovies$","reply","deleteMovies$","addMovieToMyCollection$","initCategoriesState","loading","initSearchState","serachValue","newStateSearch","newData","reducerCategories","reducerSearch","categoriesReducer","searchReducer","getAllCategories","getIsCategoriesLoading","getIsErrorLoadCategories","getSearch","initCommentsState","reducerComments","commentsReducer","getAllComments","getIsCommentsLoading","getIsErrorLoadComments","reducers","searchCategory","initMoviesState","loadingAllMovies","loadingActionMovie","success","reducerMovies","currentMovies","indexMovieUpdated","findIndex","moviesReducer","getAllMovies","getIsLoadingAllMovies","getIsLoadingActionMovie","getError","getSuccess","getCategoriesState","getSearchState","getSearchValue","getCommentsState","getElementsState","getMoviesState","getSelectedMoviesByIdCategory","getMovieById","getMyCollectionMovies","CustomRouterStateSerializer","routerStateSnapshot","childRoute","routerReducers","routerReducerState","getRouterState","getRouter"],"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","file":"movies-es5.js","sourcesContent":["import { createAction, props, select, Store, createSelector } from '@ngrx/store';\nimport { InjectionToken, NgModule, ErrorHandler, Inject } from '@angular/core';\nimport { NavigationStart, RoutesRecognized, NavigationCancel, NavigationError, NavigationEnd, Router } from '@angular/router';\nimport { withLatestFrom } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/actions.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An action dispatched when a router navigation request is fired.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@ngrx/store';\nimport * as ɵngcc2 from '@angular/router';\nconst ROUTER_REQUEST = '@ngrx/router-store/request';\n/** @type {?} */\nconst routerRequestAction = createAction(ROUTER_REQUEST, props());\n/**\n * An action dispatched when the router navigates.\n * @type {?}\n */\nconst ROUTER_NAVIGATION = '@ngrx/router-store/navigation';\n/** @type {?} */\nconst routerNavigationAction = createAction(ROUTER_NAVIGATION, props());\n/**\n * An action dispatched when the router cancels navigation.\n * @type {?}\n */\nconst ROUTER_CANCEL = '@ngrx/router-store/cancel';\n/** @type {?} */\nconst routerCancelAction = createAction(ROUTER_CANCEL, props());\n/**\n * An action dispatched when the router errors.\n * @type {?}\n */\nconst ROUTER_ERROR = '@ngrx/router-store/error';\n/** @type {?} */\nconst routerErrorAction = createAction(ROUTER_ERROR, props());\n/**\n * An action dispatched after navigation has ended and new route is active.\n * @type {?}\n */\nconst ROUTER_NAVIGATED = '@ngrx/router-store/navigated';\n/** @type {?} */\nconst routerNavigatedAction = createAction(ROUTER_NAVIGATED, props());\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/reducer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} state\n * @param {?} action\n * @return {?}\n */\nfunction routerReducer(state, action) {\n    // Allow compilation with strictFunctionTypes - ref: #1344\n    /** @type {?} */\n    const routerAction = (/** @type {?} */ (action));\n    switch (routerAction.type) {\n        case ROUTER_NAVIGATION:\n        case ROUTER_ERROR:\n        case ROUTER_CANCEL:\n            return {\n                state: routerAction.payload.routerState,\n                navigationId: routerAction.payload.event.id,\n            };\n        default:\n            return (/** @type {?} */ (state));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/serializers/base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Simple router state.\n * All custom router states / state serializers should have at least\n * the properties of this interface.\n * @record\n */\nfunction BaseRouterStoreState() { }\nif (false) {\n    /** @type {?} */\n    BaseRouterStoreState.prototype.url;\n}\n/**\n * @abstract\n * @template T\n */\nclass RouterStateSerializer {\n}\nif (false) {\n    /**\n     * @abstract\n     * @param {?} routerState\n     * @return {?}\n     */\n    RouterStateSerializer.prototype.serialize = function (routerState) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/serializers/default_serializer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction SerializedRouterStateSnapshot() { }\nif (false) {\n    /** @type {?} */\n    SerializedRouterStateSnapshot.prototype.root;\n    /** @type {?} */\n    SerializedRouterStateSnapshot.prototype.url;\n}\nclass DefaultRouterStateSerializer {\n    /**\n     * @param {?} routerState\n     * @return {?}\n     */\n    serialize(routerState) {\n        return {\n            root: this.serializeRoute(routerState.root),\n            url: routerState.url,\n        };\n    }\n    /**\n     * @private\n     * @param {?} route\n     * @return {?}\n     */\n    serializeRoute(route) {\n        /** @type {?} */\n        const children = route.children.map((/**\n         * @param {?} c\n         * @return {?}\n         */\n        (c) => this.serializeRoute(c)));\n        return {\n            params: route.params,\n            paramMap: route.paramMap,\n            data: route.data,\n            url: route.url,\n            outlet: route.outlet,\n            routeConfig: route.routeConfig\n                ? {\n                    component: route.routeConfig.component,\n                    path: route.routeConfig.path,\n                    pathMatch: route.routeConfig.pathMatch,\n                    redirectTo: route.routeConfig.redirectTo,\n                    outlet: route.routeConfig.outlet,\n                }\n                : null,\n            queryParams: route.queryParams,\n            queryParamMap: route.queryParamMap,\n            fragment: route.fragment,\n            component: (/** @type {?} */ ((route.routeConfig\n                ? route.routeConfig.component\n                : undefined))),\n            root: (/** @type {?} */ (undefined)),\n            parent: (/** @type {?} */ (undefined)),\n            firstChild: children[0],\n            pathFromRoot: (/** @type {?} */ (undefined)),\n            children,\n        };\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/serializers/minimal_serializer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction MinimalActivatedRouteSnapshot() { }\nif (false) {\n    /** @type {?} */\n    MinimalActivatedRouteSnapshot.prototype.routeConfig;\n    /** @type {?} */\n    MinimalActivatedRouteSnapshot.prototype.url;\n    /** @type {?} */\n    MinimalActivatedRouteSnapshot.prototype.params;\n    /** @type {?} */\n    MinimalActivatedRouteSnapshot.prototype.queryParams;\n    /** @type {?} */\n    MinimalActivatedRouteSnapshot.prototype.fragment;\n    /** @type {?} */\n    MinimalActivatedRouteSnapshot.prototype.data;\n    /** @type {?} */\n    MinimalActivatedRouteSnapshot.prototype.outlet;\n    /** @type {?|undefined} */\n    MinimalActivatedRouteSnapshot.prototype.firstChild;\n    /** @type {?} */\n    MinimalActivatedRouteSnapshot.prototype.children;\n}\n/**\n * @record\n */\nfunction MinimalRouterStateSnapshot() { }\nif (false) {\n    /** @type {?} */\n    MinimalRouterStateSnapshot.prototype.root;\n    /** @type {?} */\n    MinimalRouterStateSnapshot.prototype.url;\n}\nclass MinimalRouterStateSerializer {\n    /**\n     * @param {?} routerState\n     * @return {?}\n     */\n    serialize(routerState) {\n        return {\n            root: this.serializeRoute(routerState.root),\n            url: routerState.url,\n        };\n    }\n    /**\n     * @private\n     * @param {?} route\n     * @return {?}\n     */\n    serializeRoute(route) {\n        /** @type {?} */\n        const children = route.children.map((/**\n         * @param {?} c\n         * @return {?}\n         */\n        (c) => this.serializeRoute(c)));\n        return {\n            params: route.params,\n            data: route.data,\n            url: route.url,\n            outlet: route.outlet,\n            routeConfig: route.routeConfig\n                ? {\n                    path: route.routeConfig.path,\n                    pathMatch: route.routeConfig.pathMatch,\n                    redirectTo: route.routeConfig.redirectTo,\n                    outlet: route.routeConfig.outlet,\n                }\n                : null,\n            queryParams: route.queryParams,\n            fragment: route.fragment,\n            firstChild: children[0],\n            children,\n        };\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/router_store_module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst RouterState = {\n    Full: 0,\n    Minimal: 1,\n};\n/**\n * @record\n * @template T\n */\nfunction StoreRouterConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    StoreRouterConfig.prototype.stateKey;\n    /** @type {?|undefined} */\n    StoreRouterConfig.prototype.serializer;\n    /**\n     * By default, ROUTER_NAVIGATION is dispatched before guards and resolvers run.\n     * Therefore, the action could run too soon, for example\n     * there may be a navigation cancel due to a guard saying the navigation is not allowed.\n     * To run ROUTER_NAVIGATION after guards and resolvers,\n     * set this property to NavigationActionTiming.PostActivation.\n     * @type {?|undefined}\n     */\n    StoreRouterConfig.prototype.navigationActionTiming;\n    /**\n     * Decides which router serializer should be used, if there is none provided, and the metadata on the dispatched \\@ngrx/router-store action payload.\n     * Set to `Full` to use the `DefaultRouterStateSerializer` and to set the angular router events as payload.\n     * Set to `Minimal` to use the `MinimalRouterStateSerializer` and to set a minimal router event with the navigation id and url as payload.\n     * @type {?|undefined}\n     */\n    StoreRouterConfig.prototype.routerState;\n}\n/**\n * @record\n */\nfunction StoreRouterActionPayload() { }\nif (false) {\n    /** @type {?} */\n    StoreRouterActionPayload.prototype.event;\n    /** @type {?|undefined} */\n    StoreRouterActionPayload.prototype.routerState;\n    /** @type {?|undefined} */\n    StoreRouterActionPayload.prototype.storeState;\n}\n/** @enum {number} */\nconst NavigationActionTiming = {\n    PreActivation: 1,\n    PostActivation: 2,\n};\nNavigationActionTiming[NavigationActionTiming.PreActivation] = 'PreActivation';\nNavigationActionTiming[NavigationActionTiming.PostActivation] = 'PostActivation';\n/** @type {?} */\nconst _ROUTER_CONFIG = new InjectionToken('@ngrx/router-store Internal Configuration');\n/** @type {?} */\nconst ROUTER_CONFIG = new InjectionToken('@ngrx/router-store Configuration');\n/** @type {?} */\nconst DEFAULT_ROUTER_FEATURENAME = 'router';\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createRouterConfig(config) {\n    return Object.assign({ stateKey: DEFAULT_ROUTER_FEATURENAME, serializer: MinimalRouterStateSerializer, navigationActionTiming: NavigationActionTiming.PreActivation }, config);\n}\n/** @enum {number} */\nconst RouterTrigger = {\n    NONE: 1,\n    ROUTER: 2,\n    STORE: 3,\n};\nRouterTrigger[RouterTrigger.NONE] = 'NONE';\nRouterTrigger[RouterTrigger.ROUTER] = 'ROUTER';\nRouterTrigger[RouterTrigger.STORE] = 'STORE';\n/**\n * Connects RouterModule with StoreModule.\n *\n * During the navigation, before any guards or resolvers run, the router will dispatch\n * a ROUTER_NAVIGATION action, which has the following signature:\n *\n * ```\n * export type RouterNavigationPayload = {\n *   routerState: SerializedRouterStateSnapshot,\n *   event: RoutesRecognized\n * }\n * ```\n *\n * Either a reducer or an effect can be invoked in response to this action.\n * If the invoked reducer throws, the navigation will be canceled.\n *\n * If navigation gets canceled because of a guard, a ROUTER_CANCEL action will be\n * dispatched. If navigation results in an error, a ROUTER_ERROR action will be dispatched.\n *\n * Both ROUTER_CANCEL and ROUTER_ERROR contain the store state before the navigation\n * which can be used to restore the consistency of the store.\n *\n * Usage:\n *\n * ```typescript\n * \\@NgModule({\n *   declarations: [AppCmp, SimpleCmp],\n *   imports: [\n *     BrowserModule,\n *     StoreModule.forRoot(mapOfReducers),\n *     RouterModule.forRoot([\n *       { path: '', component: SimpleCmp },\n *       { path: 'next', component: SimpleCmp }\n *     ]),\n *     StoreRouterConnectingModule.forRoot()\n *   ],\n *   bootstrap: [AppCmp]\n * })\n * export class AppModule {\n * }\n * ```\n */\nclass StoreRouterConnectingModule {\n    /**\n     * @param {?} store\n     * @param {?} router\n     * @param {?} serializer\n     * @param {?} errorHandler\n     * @param {?} config\n     */\n    constructor(store, router, serializer, errorHandler, config) {\n        this.store = store;\n        this.router = router;\n        this.serializer = serializer;\n        this.errorHandler = errorHandler;\n        this.config = config;\n        this.lastEvent = null;\n        this.routerState = null;\n        this.trigger = RouterTrigger.NONE;\n        this.stateKey = (/** @type {?} */ (this.config.stateKey));\n        this.setUpStoreStateListener();\n        this.setUpRouterEventsListener();\n    }\n    /**\n     * @template T\n     * @param {?=} config\n     * @return {?}\n     */\n    static forRoot(config = {}) {\n        return {\n            ngModule: StoreRouterConnectingModule,\n            providers: [\n                { provide: _ROUTER_CONFIG, useValue: config },\n                {\n                    provide: ROUTER_CONFIG,\n                    useFactory: _createRouterConfig,\n                    deps: [_ROUTER_CONFIG],\n                },\n                {\n                    provide: RouterStateSerializer,\n                    useClass: config.serializer\n                        ? config.serializer\n                        : config.routerState === 0 /* Full */\n                            ? DefaultRouterStateSerializer\n                            : MinimalRouterStateSerializer,\n                },\n            ],\n        };\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    setUpStoreStateListener() {\n        this.store\n            .pipe(select((/** @type {?} */ (this.stateKey))), withLatestFrom(this.store))\n            .subscribe((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([routerStoreState, storeState]) => {\n            this.navigateIfNeeded(routerStoreState, storeState);\n        }));\n    }\n    /**\n     * @private\n     * @param {?} routerStoreState\n     * @param {?} storeState\n     * @return {?}\n     */\n    navigateIfNeeded(routerStoreState, storeState) {\n        if (!routerStoreState || !routerStoreState.state) {\n            return;\n        }\n        if (this.trigger === RouterTrigger.ROUTER) {\n            return;\n        }\n        if (this.lastEvent instanceof NavigationStart) {\n            return;\n        }\n        /** @type {?} */\n        const url = routerStoreState.state.url;\n        if (this.router.url !== url) {\n            this.storeState = storeState;\n            this.trigger = RouterTrigger.STORE;\n            this.router.navigateByUrl(url).catch((/**\n             * @param {?} error\n             * @return {?}\n             */\n            (error) => {\n                this.errorHandler.handleError(error);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    setUpRouterEventsListener() {\n        /** @type {?} */\n        const dispatchNavLate = this.config.navigationActionTiming ===\n            NavigationActionTiming.PostActivation;\n        /** @type {?} */\n        let routesRecognized;\n        this.router.events\n            .pipe(withLatestFrom(this.store))\n            .subscribe((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([event, storeState]) => {\n            this.lastEvent = event;\n            if (event instanceof NavigationStart) {\n                this.routerState = this.serializer.serialize(this.router.routerState.snapshot);\n                if (this.trigger !== RouterTrigger.STORE) {\n                    this.storeState = storeState;\n                    this.dispatchRouterRequest(event);\n                }\n            }\n            else if (event instanceof RoutesRecognized) {\n                routesRecognized = event;\n                if (!dispatchNavLate && this.trigger !== RouterTrigger.STORE) {\n                    this.dispatchRouterNavigation(event);\n                }\n            }\n            else if (event instanceof NavigationCancel) {\n                this.dispatchRouterCancel(event);\n                this.reset();\n            }\n            else if (event instanceof NavigationError) {\n                this.dispatchRouterError(event);\n                this.reset();\n            }\n            else if (event instanceof NavigationEnd) {\n                if (this.trigger !== RouterTrigger.STORE) {\n                    if (dispatchNavLate) {\n                        this.dispatchRouterNavigation(routesRecognized);\n                    }\n                    this.dispatchRouterNavigated(event);\n                }\n                this.reset();\n            }\n        }));\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    dispatchRouterRequest(event) {\n        this.dispatchRouterAction(ROUTER_REQUEST, { event });\n    }\n    /**\n     * @private\n     * @param {?} lastRoutesRecognized\n     * @return {?}\n     */\n    dispatchRouterNavigation(lastRoutesRecognized) {\n        /** @type {?} */\n        const nextRouterState = this.serializer.serialize(lastRoutesRecognized.state);\n        this.dispatchRouterAction(ROUTER_NAVIGATION, {\n            routerState: nextRouterState,\n            event: new RoutesRecognized(lastRoutesRecognized.id, lastRoutesRecognized.url, lastRoutesRecognized.urlAfterRedirects, nextRouterState),\n        });\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    dispatchRouterCancel(event) {\n        this.dispatchRouterAction(ROUTER_CANCEL, {\n            storeState: this.storeState,\n            event,\n        });\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    dispatchRouterError(event) {\n        this.dispatchRouterAction(ROUTER_ERROR, {\n            storeState: this.storeState,\n            event: new NavigationError(event.id, event.url, `${event}`),\n        });\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    dispatchRouterNavigated(event) {\n        /** @type {?} */\n        const routerState = this.serializer.serialize(this.router.routerState.snapshot);\n        this.dispatchRouterAction(ROUTER_NAVIGATED, { event, routerState });\n    }\n    /**\n     * @private\n     * @param {?} type\n     * @param {?} payload\n     * @return {?}\n     */\n    dispatchRouterAction(type, payload) {\n        this.trigger = RouterTrigger.ROUTER;\n        try {\n            this.store.dispatch({\n                type,\n                payload: Object.assign(Object.assign({ routerState: this.routerState }, payload), { event: this.config.routerState === 0 /* Full */\n                        ? payload.event\n                        : { id: payload.event.id, url: payload.event.url } }),\n            });\n        }\n        finally {\n            this.trigger = RouterTrigger.NONE;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    reset() {\n        this.trigger = RouterTrigger.NONE;\n        this.storeState = null;\n        this.routerState = null;\n    }\n}\nStoreRouterConnectingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: StoreRouterConnectingModule });\nStoreRouterConnectingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function StoreRouterConnectingModule_Factory(t) { return new (t || StoreRouterConnectingModule)(ɵngcc0.ɵɵinject(ɵngcc1.Store), ɵngcc0.ɵɵinject(ɵngcc2.Router), ɵngcc0.ɵɵinject(RouterStateSerializer), ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler), ɵngcc0.ɵɵinject(ROUTER_CONFIG)); } });\n/** @nocollapse */\nStoreRouterConnectingModule.ctorParameters = () => [\n    { type: Store },\n    { type: Router },\n    { type: RouterStateSerializer },\n    { type: ErrorHandler },\n    { type: undefined, decorators: [{ type: Inject, args: [ROUTER_CONFIG,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StoreRouterConnectingModule, [{\n        type: NgModule,\n        args: [{}]\n    }], function () { return [{ type: ɵngcc1.Store }, { type: ɵngcc2.Router }, { type: RouterStateSerializer }, { type: ɵngcc0.ErrorHandler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [ROUTER_CONFIG]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    StoreRouterConnectingModule.prototype.lastEvent;\n    /**\n     * @type {?}\n     * @private\n     */\n    StoreRouterConnectingModule.prototype.routerState;\n    /**\n     * @type {?}\n     * @private\n     */\n    StoreRouterConnectingModule.prototype.storeState;\n    /**\n     * @type {?}\n     * @private\n     */\n    StoreRouterConnectingModule.prototype.trigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    StoreRouterConnectingModule.prototype.stateKey;\n    /**\n     * @type {?}\n     * @private\n     */\n    StoreRouterConnectingModule.prototype.store;\n    /**\n     * @type {?}\n     * @private\n     */\n    StoreRouterConnectingModule.prototype.router;\n    /**\n     * @type {?}\n     * @private\n     */\n    StoreRouterConnectingModule.prototype.serializer;\n    /**\n     * @type {?}\n     * @private\n     */\n    StoreRouterConnectingModule.prototype.errorHandler;\n    /**\n     * @type {?}\n     * @private\n     */\n    StoreRouterConnectingModule.prototype.config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/router_selectors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template V\n * @param {?} selectState\n * @return {?}\n */\nfunction getSelectors(selectState) {\n    /** @type {?} */\n    const selectRouterState = createSelector(selectState, (/**\n     * @param {?} router\n     * @return {?}\n     */\n    (router) => router && router.state));\n    /** @type {?} */\n    const selectCurrentRoute = createSelector(selectRouterState, (/**\n     * @param {?} routerState\n     * @return {?}\n     */\n    (routerState) => {\n        if (!routerState) {\n            return undefined;\n        }\n        /** @type {?} */\n        let route = routerState.root;\n        while (route.firstChild) {\n            route = route.firstChild;\n        }\n        return route;\n    }));\n    /** @type {?} */\n    const selectFragment = createSelector(selectCurrentRoute, (/**\n     * @param {?} route\n     * @return {?}\n     */\n    (route) => route && route.fragment));\n    /** @type {?} */\n    const selectQueryParams = createSelector(selectCurrentRoute, (/**\n     * @param {?} route\n     * @return {?}\n     */\n    (route) => route && route.queryParams));\n    /** @type {?} */\n    const selectQueryParam = (/**\n     * @param {?} param\n     * @return {?}\n     */\n    (param) => createSelector(selectQueryParams, (/**\n     * @param {?} params\n     * @return {?}\n     */\n    (params) => params && params[param])));\n    /** @type {?} */\n    const selectRouteParams = createSelector(selectCurrentRoute, (/**\n     * @param {?} route\n     * @return {?}\n     */\n    (route) => route && route.params));\n    /** @type {?} */\n    const selectRouteParam = (/**\n     * @param {?} param\n     * @return {?}\n     */\n    (param) => createSelector(selectRouteParams, (/**\n     * @param {?} params\n     * @return {?}\n     */\n    (params) => params && params[param])));\n    /** @type {?} */\n    const selectRouteData = createSelector(selectCurrentRoute, (/**\n     * @param {?} route\n     * @return {?}\n     */\n    (route) => route && route.data));\n    /** @type {?} */\n    const selectUrl = createSelector(selectRouterState, (/**\n     * @param {?} routerState\n     * @return {?}\n     */\n    (routerState) => routerState && routerState.url));\n    return {\n        selectCurrentRoute,\n        selectFragment,\n        selectQueryParams,\n        selectQueryParam,\n        selectRouteParams,\n        selectRouteParam,\n        selectRouteData,\n        selectUrl,\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ngrx-router-store.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { DEFAULT_ROUTER_FEATURENAME, DefaultRouterStateSerializer, MinimalRouterStateSerializer, NavigationActionTiming, ROUTER_CANCEL, ROUTER_CONFIG, ROUTER_ERROR, ROUTER_NAVIGATED, ROUTER_NAVIGATION, ROUTER_REQUEST, RouterStateSerializer, StoreRouterConnectingModule, getSelectors, routerCancelAction, routerErrorAction, routerNavigatedAction, routerNavigationAction, routerReducer, routerRequestAction, _ROUTER_CONFIG as ɵa, _createRouterConfig as ɵb };\n\n//# sourceMappingURL=ngrx-router-store.js.map","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-comment',\n  templateUrl: './add-comment.component.html',\n  styleUrls: ['./add-comment.component.css']\n})\nexport class AddCommentComponent implements OnInit {\n   @Input() controlText: AbstractControl;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onClick() {\n    alert('click');\n  }\n\n}\n","<mat-form-field class=\"form-element\" appearance=\"outline\" style=\"width: 310px;\">\n    <textarea [formControl]=\"controlText\" matInput type=\"text\" cols=\"15\" rows=\"2\" placeholder=\"Add comment ...\" (keyup.enter)=\"onClick()\"></textarea>\n    <mat-error *ngIf=\"controlText.invalid\">This field must not exceed 10 characters</mat-error>\n</mat-form-field>","import {\n  Component,\n  OnInit,\n  Input,\n  ChangeDetectionStrategy,\n  Output,\n  EventEmitter,\n} from \"@angular/core\";\nimport { Category } from \"../../models\";\n\n@Component({\n  selector: \"app-category-preview\",\n  templateUrl: \"./category-preview.component.html\",\n  styleUrls: [\"./category-preview.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoryPreviewComponent implements OnInit {\n  @Input() category: Category;\n  @Output() goToMovies = new EventEmitter<number>();\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"col-md-3\">\n  <mat-card>\n    <mat-card-title-group>\n      <mat-card-title class=\"text-xl push-none\" data-role=\"category-title\">{{\n        category.title\n      }}</mat-card-title>\n      <mat-card-subtitle class=\"push-none\" data-role=\"category-emoji\">{{\n        category.emoji\n      }}</mat-card-subtitle>\n      <mat-card-subtitle class=\"push-none\" data-role=\"category-emojiStyle\"\n        >{{ category.emojiStyle }}\n      </mat-card-subtitle>\n    </mat-card-title-group>\n    <mat-card-actions>\n      <button\n        mat-raised-button\n        (click)=\"goToMovies.emit(category.id)\"\n        color=\"primary\"\n      >\n        Got to movies\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit, Inject } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\n@Component({\n  selector: \"app-confirmation-dialog\",\n  templateUrl: \"./confirmation-dialog.component.html\",\n  styleUrls: [\"./confirmation-dialog.component.css\"],\n})\nexport class ConfirmationDialogComponent implements OnInit {\n  message: string;\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmationDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit(): void {\n    this.message = this.data;\n  }\n}\n","<mat-dialog-content>\n  <p>\n    {{ message }}\n  </p>\n</mat-dialog-content>\n<mat-dialog-actions align=\"center\">\n  <button\n    mat-raised-button\n    color=\"primary\"\n    [mat-dialog-close]=\"true\"\n    tabindex=\"1\"\n  >\n    Yes\n  </button>\n  <button mat-raised-button mat-dialog-close tabindex=\"-1\">Cancel</button>\n</mat-dialog-actions>\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnChanges,\n} from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Category, Movie } from \"../../models\";\nimport { MatProgressButtonOptions } from \"mat-progress-buttons\";\n\n@Component({\n  selector: \"app-form-movie\",\n  templateUrl: \"./form-movie.component.html\",\n  styleUrls: [\"./form-movie.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormMovieComponent implements OnInit, OnChanges {\n  submitted: boolean = false;\n  @Input() action: string = \"\";\n  @Input() optionsCategories: Category[];\n  @Input() loadingAddMovie: boolean = false;\n  @Output() addMovie = new EventEmitter();\n  @Input() movie: Movie;\n  title: string = null;\n  movieForm: Movie;\n  registerMovieForm: FormGroup;\n  titleAlert: string = \"This field is required\";\n  labelLanguage: string = \"Language\";\n  optionsLanguage: string[] = [\n    \"French\",\n    \"English\",\n    \"Arabic\",\n    \"Russe\",\n    \"Spanish\",\n    \"Japanese\",\n  ];\n  labelYear: string = \"Year\";\n  optionsYear: number[] = [2015, 2016, 2017, 2018, 2019, 2020, 2021];\n  labelCategory: string = \"Category\";\n  barButtonOptions: MatProgressButtonOptions = {\n    active: this.loadingAddMovie,\n    text: this.action,\n    buttonColor: \"primary\",\n    barColor: \"primary\",\n    raised: true,\n    stroked: false,\n    mode: \"indeterminate\",\n    value: 0,\n    disabled: false,\n    fullWidth: false,\n    buttonIcon: {\n      fontIcon: \"save\",\n    },\n  };\n\n  constructor(private formBuilder: FormBuilder) {}\n  ngOnChanges() {\n    this.barButtonOptions.active = this.loadingAddMovie;\n    this.barButtonOptions.text = this.action;\n    if (this.submitted == true) {\n      if (this.action == \"add movie\") {\n        this.barButtonOptions.text = \"Saving movie ...\";\n      } else {\n        this.barButtonOptions.text = \"Updating movie ...\";\n      }\n    }\n    if (this.loadingAddMovie == false) {\n      this.barButtonOptions.text = this.action;\n    }\n  }\n  ngOnInit(): void {\n    this.createForm();\n  }\n  createForm() {\n    this.registerMovieForm = this.formBuilder.group({\n      title: [\n        this.movie.title,\n        [Validators.required, Validators.maxLength(22)],\n      ],\n      language: [this.movie.language, Validators.required],\n      recordedYear: [this.movie.recordedYear, Validators.required],\n      category: [this.movie.categoryId, Validators.required],\n      image: [this.movie.image, Validators.required],\n      heroLastName: [this.movie.specialMention.lastName, Validators.required],\n      heroFirstName: [this.movie.specialMention.firstName, Validators.required],\n      description: [\n        this.movie.description,\n        [Validators.required, Validators.maxLength(300)],\n      ],\n    });\n  }\n  get f() {\n    return this.registerMovieForm.controls;\n  }\n  onSubmit() {\n    this.movieForm = {\n      id: this.movie.id,\n      categoryId: this.registerMovieForm.value[\"category\"],\n      title: this.registerMovieForm.value[\"title\"],\n      language: this.registerMovieForm.value[\"language\"],\n      recordedYear: this.registerMovieForm.value[\"recordedYear\"],\n      image: this.registerMovieForm.value[\"image\"],\n      specialMention: {\n        lastName: this.registerMovieForm.value[\"heroLastName\"],\n        firstName: this.registerMovieForm.value[\"heroFirstName\"],\n      },\n      description: this.registerMovieForm.value[\"description\"],\n      selected: this.movie.selected,\n    };\n    if (this.registerMovieForm.valid) {\n      this.submitted = true;\n    }\n    this.addMovie.emit(this.movieForm);\n  }\n}\n","<mat-toolbar class=\"form-element\">\n  <span class=\"fill-remaining-space\" *ngIf=\"action == 'add movie'\"\n    >Add your movie</span\n  >\n  <span class=\"fill-remaining-space\" *ngIf=\"action == 'update movie'\"\n    >update your movie</span\n  >\n</mat-toolbar>\n<mat-card>\n  <form [formGroup]=\"registerMovieForm\" (ngSubmit)=\"onSubmit()\" class=\"form\">\n    <mat-form-field class=\"form-element\" appearance=\"outline\">\n      <input matInput type=\"text\" placeholder=\"Title\" formControlName=\"title\" />\n      <mat-error *ngIf=\"!f.title.valid && f.title.touched\">\n        {{ titleAlert }} and must not exceed 35 characters</mat-error\n      >\n    </mat-form-field>\n    <app-select\n      [label]=\"'Language'\"\n      [options]=\"optionsLanguage\"\n      [valid]=\"f.language.valid\"\n      [touched]=\"f.language.touched\"\n      [registerForm]=\"registerMovieForm\"\n      [control]=\"'language'\"\n      [titleAlert]=\"titleAlert\"\n    ></app-select>\n    <app-select\n      [label]=\"'Year'\"\n      [options]=\"optionsYear\"\n      [valid]=\"f.recordedYear.valid\"\n      [touched]=\"f.recordedYear.touched\"\n      [registerForm]=\"registerMovieForm\"\n      [control]=\"'recordedYear'\"\n      [titleAlert]=\"titleAlert\"\n    ></app-select>\n    <app-select-tab-object\n      [label]=\"'Category'\"\n      [options]=\"optionsCategories\"\n      [valid]=\"f.category.valid\"\n      [touched]=\"f.category.touched\"\n      [registerForm]=\"registerMovieForm\"\n      [control]=\"'category'\"\n      [titleAlert]=\"titleAlert\"\n    ></app-select-tab-object>\n\n    <mat-form-field class=\"form-element\" appearance=\"outline\">\n      <input\n        matInput\n        type=\"text\"\n        placeholder=\"Link image\"\n        formControlName=\"image\"\n      />\n      <mat-hint>Link of image movie</mat-hint>\n      <mat-error *ngIf=\"!f.image.valid && f.image.touched\"\n        >{{ titleAlert }}\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"form-element\" appearance=\"outline\">\n      <input\n        matInput\n        type=\"text\"\n        placeholder=\"Last name héro \"\n        formControlName=\"heroLastName\"\n      />\n\n      <mat-error *ngIf=\"!f.heroLastName.valid && f.heroLastName.touched\"\n        >{{ titleAlert }}\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"form-element\" appearance=\"outline\">\n      <input\n        matInput\n        type=\"text\"\n        placeholder=\"First name héro \"\n        formControlName=\"heroFirstName\"\n      />\n\n      <mat-error *ngIf=\"!f.heroFirstName.valid && f.heroFirstName.touched\"\n        >{{ titleAlert }}\n      </mat-error>\n    </mat-form-field>\n    <mat-form-field class=\"form-element\" appearance=\"outline\">\n      <textarea\n        style=\"min-height: 9em\"\n        matInput\n        placeholder=\"description of movie\"\n        formControlName=\"description\"\n      ></textarea>\n      <mat-hint>give more details about the film</mat-hint>\n\n      <mat-error *ngIf=\"!f.description.valid && f.description.touched\"\n        >{{ titleAlert }} and must not exceed 300 characters\n      </mat-error>\n    </mat-form-field>\n\n    <div class=\"form-element\">\n      <mat-bar-button\n        [options]=\"barButtonOptions\"\n        [disabled]=\"!registerMovieForm.valid\"\n      ></mat-bar-button>\n    </div>\n  </form>\n</mat-card>\n","export * from \"./category-preview/category-preview.component\";\nexport * from \"./movie-preview/movie-preview.component\";\nexport * from \"./search/search.component\";\nexport * from \"./select/select.component\";\nexport * from \"./select-tab-object/select-tab-object.component\";\nexport * from \"./form-movie/form-movie.component\";\nexport * from \"./confirmation-dialog/confirmation-dialog.component\";\nexport * from \"./movie-details/movie-details.component\";\nexport * from \"./add-comment/add-comment.component\";\nexport * from \"./preview-comment/preview-comment.component\";\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  OnChanges,\n} from \"@angular/core\";\nimport { MatProgressButtonOptions } from \"mat-progress-buttons\";\n\nimport { Movie } from \"../../models\";\n@Component({\n  selector: \"app-movie-details\",\n  templateUrl: \"./movie-details.component.html\",\n  styleUrls: [\"./movie-details.component.css\"],\n})\nexport class MovieDetailsComponent implements OnInit, OnChanges {\n  @Input() movie: Movie;\n  @Output() addOrDeleteToMyCollection = new EventEmitter();\n  @Input() loadingAddOrDeleteMovieToMycollection: boolean = false;\n\n  barButtonOptions: MatProgressButtonOptions = {\n    active: this.loadingAddOrDeleteMovieToMycollection,\n    text: \"\",\n    buttonColor: \"primary\",\n    barColor: \"primary\",\n    raised: true,\n    stroked: false,\n    mode: \"indeterminate\",\n    value: 0,\n    disabled: false,\n    fullWidth: false,\n    buttonIcon: {\n      fontIcon: \"\",\n    },\n  };\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  ngOnChanges() {\n    if (this.movie.selected == true) {\n      this.barButtonOptions.text = \"Remove movie to collection\";\n      this.barButtonOptions.buttonColor = \"accent\";\n      this.barButtonOptions.barColor = \"accent\";\n      this.barButtonOptions.buttonIcon.fontIcon = \"remove_from_queue\";\n    } else {\n      this.barButtonOptions.text = \"Add movie to collection\";\n      this.barButtonOptions.buttonIcon.fontIcon = \"playlist_add\";\n      this.barButtonOptions.buttonColor = \"primary\";\n      this.barButtonOptions.barColor = \"primary\";\n    }\n    this.barButtonOptions.active = this.loadingAddOrDeleteMovieToMycollection;\n  }\n}\n","<mat-card class=\"example-card\">\n  <mat-card-header>\n    <div\n      mat-card-avatar\n      class=\"example-header-image\"\n      [ngStyle]=\"{ 'background-image': 'url(' + movie.image + ')' }\"\n    ></div>\n    <mat-card-title>{{ movie.title }}</mat-card-title>\n    <mat-card-subtitle\n      ><b>Language</b>:&nbsp;{{ movie.language }}</mat-card-subtitle\n    >\n    <mat-card-subtitle>\n      <b>year</b>:&nbsp; {{ movie.recordedYear }}</mat-card-subtitle\n    >\n  </mat-card-header>\n  <img\n    mat-card-image\n    src=\"{{ movie.image }}\"\n    alt=\"Cinque Terre\"\n    alt=\"Photo of movie\"\n  />\n  <mat-card-content>\n    <p>\n      {{ movie.description }}\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <mat-bar-button\n      [options]=\"barButtonOptions\"\n      color=\"accent\"\n      (click)=\"addOrDeleteToMyCollection.emit(movie.id)\"\n    >\n    </mat-bar-button>\n  </mat-card-actions>\n</mat-card>\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from \"@angular/core\";\nimport { Movie } from \"../../models\";\nimport { ConfirmationDialogComponent } from \"../confirmation-dialog/confirmation-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\n\n@Component({\n  selector: \"app-movie-preview\",\n  templateUrl: \"./movie-preview.component.html\",\n  styleUrls: [\"./movie-preview.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MoviePreviewComponent implements OnInit {\n  @Input() movie: Movie;\n  @Input() parent: string;\n\n  @Output() updateMovie = new EventEmitter<number>();\n  @Output() deleteMovie = new EventEmitter<number>();\n  @Output() detailsMovie = new EventEmitter<number>();\n\n  constructor(private dialog: MatDialog) {}\n\n  ngOnInit(): void {}\n\n  delete(MovieId: number) {\n    this.dialog\n      .open(ConfirmationDialogComponent, {\n        data: \"Are you sure want to delete?\",\n      })\n      .afterClosed()\n      .subscribe((result) => {\n        if (result == true) {\n          this.deleteMovie.emit(MovieId);\n        }\n      });\n  }\n}\n","<div class=\"col-md-4 frame\">\n  <mat-card>\n    <mat-card-header>\n      <div\n        mat-card-avatar\n        class=\"example-header-image\"\n        [ngStyle]=\"{ 'background-image': 'url(' + movie.image + ')' }\"\n      ></div>\n\n      <mat-card-title>{{ movie.title }}</mat-card-title>\n      <mat-card-subtitle>{{ movie.recordedYear }}</mat-card-subtitle>\n      <mat-card-subtitle> {{ movie.language }}</mat-card-subtitle>\n    </mat-card-header>\n\n    <mat-card-content>\n      <span>Special mention:</span>\n      <p>\n        {{\n          movie.specialMention.firstName + \" - \" + movie.specialMention.lastName\n        }}\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button\n        *ngIf=\"parent != 'collection'\"\n        mat-raised-button\n        (click)=\"updateMovie.emit(movie.id)\"\n        color=\"primary\"\n      >\n        Update\n      </button>\n      <button\n        *ngIf=\"parent != 'collection'\"\n        mat-raised-button\n        (click)=\"delete(movie.id)\"\n        color=\"accent\"\n      >\n        Delete\n      </button>\n      <button\n        mat-raised-button\n        (click)=\"detailsMovie.emit(movie.id)\"\n        color=\"primary\"\n      >\n        details\n      </button>\n    </mat-card-actions>\n  </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-preview-comment',\n  templateUrl: './preview-comment.component.html',\n  styleUrls: ['./preview-comment.component.css']\n})\nexport class PreviewCommentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>preview-comment works!</p>\n","import {\n  Component,\n  OnInit,\n  Output,\n  EventEmitter,\n  Input,\n  ChangeDetectionStrategy,\n} from \"@angular/core\";\n\n@Component({\n  selector: \"app-search\",\n  templateUrl: \"./search.component.html\",\n  styleUrls: [\"./search.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SearchComponent implements OnInit {\n  @Output() search = new EventEmitter<string>();\n  @Input() searchValue: string = \"\";\n  @Input() searchName: string;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<mat-form-field appearance=\"legacy\">\n  <mat-label>{{ searchName }}</mat-label>\n  <input\n    (keyup)=\"search.emit($event.target.value)\"\n    matInput\n    placeholder=\"by title\"\n    [value]=\"searchValue\"\n  />\n  <mat-icon matSuffix>search</mat-icon>\n</mat-form-field>\n","import {\n  Component,\n  OnInit,\n  Input,\n  ChangeDetectionStrategy,\n} from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-select-tab-object\",\n  templateUrl: \"./select-tab-object.component.html\",\n  styleUrls: [\"./select-tab-object.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectTabObjectComponent implements OnInit {\n  @Input() label: string;\n  @Input() options: any[];\n  @Input() valid: boolean;\n  @Input() touched: boolean;\n  @Input() registerForm: FormGroup;\n  @Input() control: string;\n  @Input() titleAlert: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<mat-form-field\n  [formGroup]=\"registerForm\"\n  class=\"form-element\"\n  appearance=\"outline\"\n>\n  <mat-label>{{ label }}</mat-label>\n  <mat-select [formControlName]=\"control\">\n    <mat-option *ngFor=\"let option of options\" [value]=\"option.id\">{{\n      option.title\n    }}</mat-option>\n  </mat-select>\n  <mat-error *ngIf=\"!valid && touched\">{{ titleAlert }}</mat-error>\n</mat-form-field>\n","import {\n  Component,\n  OnInit,\n  Input,\n  ChangeDetectionStrategy,\n} from \"@angular/core\";\nimport { FormGroup } from \"@angular/forms\";\n@Component({\n  selector: \"app-select\",\n  templateUrl: \"./select.component.html\",\n  styleUrls: [\"./select.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectComponent implements OnInit {\n  @Input() label: string;\n  @Input() options: any[];\n  @Input() valid: boolean;\n  @Input() touched: boolean;\n  @Input() registerForm: FormGroup;\n  @Input() control: string;\n  @Input() titleAlert: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<mat-form-field\n  [formGroup]=\"registerForm\"\n  class=\"form-element\"\n  appearance=\"outline\"\n>\n  <mat-label>{{ label }}</mat-label>\n  <mat-select [formControlName]=\"control\">\n    <mat-option *ngFor=\"let option of options\" [value]=\"option\">{{\n      option\n    }}</mat-option>\n  </mat-select>\n  <mat-error *ngIf=\"!valid && touched\">{{ titleAlert }}</mat-error>\n</mat-form-field>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ElementsState } from \"../../store/reducers\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { Category, Movie } from \"../../models\";\nimport * as actionsType from \"../../store/actions\";\nimport * as selectors from \"../../store/selectors\";\nimport { MoviesService } from \"../../services\";\n\n@Component({\n  selector: \"app-add-movie\",\n  templateUrl: \"./add-movie.component.html\",\n  styleUrls: [\"./add-movie.component.css\"],\n})\nexport class AddMovieComponent implements OnInit {\n  movie: Movie = {\n    id: undefined,\n    categoryId: undefined,\n    title: \"\",\n    language: \"\",\n    recordedYear: undefined,\n    image: \"\",\n    specialMention: {\n      lastName: \"\",\n      firstName: \"\",\n    },\n    description: \"\",\n    selected: false,\n  };\n\n  optionsCategories$: Observable<Category[]>;\n  loadingCategories$: Observable<boolean>;\n  loadingMovies$: Observable<boolean>;\n  loadingAddMovie$: Observable<boolean>;\n  success$: Subscription;\n  error$: Subscription;\n\n  constructor(\n    private store: Store<ElementsState>,\n    private moviesService: MoviesService\n  ) {\n    //this.moviesService.getCategoriesAndMoviesAfterRefreshPage();\n  }\n\n  ngOnInit(): void {\n    this.optionsCategories$ = this.store.select<Category[]>(\n      selectors.getAllCategories\n    );\n    this.loadingCategories$ = this.store.select<boolean>(\n      selectors.getIsCategoriesLoading\n    );\n    this.loadingMovies$ = this.store.select<boolean>(\n      selectors.getIsLoadingAllMovies\n    );\n    this.loadingAddMovie$ = this.store.select<boolean>(\n      selectors.getIsLoadingActionMovie\n    );\n  }\n  OnAddMovie(movie: Movie) {\n    this.store.dispatch(actionsType.ADD_MOVIE({ movie: movie }));\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-offset-1\">\n    <ng-container\n      *ngIf=\"\n        !(loadingCategories$ | async) && !(loadingMovies$ | async);\n        else loader\n      \"\n    >\n      <app-form-movie\n        [optionsCategories]=\"optionsCategories$ | async\"\n        [movie]=\"movie\"\n        (addMovie)=\"OnAddMovie($event)\"\n        [loadingAddMovie]=\"loadingAddMovie$ | async\"\n        [action]=\"'add movie'\"\n      ></app-form-movie>\n    </ng-container>\n  </div>\n</div>\n<div class=\"row\">\n  <ng-template #loader>\n    <div class=\"col-md-2 col-centered\">\n      <mat-spinner color=\"primary\" diameter=\"80\"> </mat-spinner>\n    </div>\n  </ng-template>\n</div>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable } from \"rxjs\";\nimport { ElementsState } from \"../../store/reducers\";\nimport * as selectors from \"../../store/selectors\";\nimport { Category } from \"../../models\";\nimport * as actionsType from \"../../store/actions\";\nimport { Router } from \"@angular/router\";\nimport {SharedService} from '../../../shared/shared.service';\n@Component({\n  selector: \"app-categories-list\",\n  templateUrl: \"./categories-list.component.html\",\n  styleUrls: [\"./categories-list.component.css\"],\n})\nexport class CategoriesListComponent implements OnInit {\n  categories$: Observable<Category[]>;\n  loadingCategories$: Observable<boolean>;\n  loadingMovies$: Observable<boolean>;\n  searchValue: string;\n  searchValue$: Observable<string>;\n\n  constructor(private store: Store<ElementsState>, private router: Router, private shared: SharedService) {}\n\n  ngOnInit(): void {\n\n    this.categories$ = this.store.select<Category[]>(\n      selectors.getAllCategories\n    );\n\n    this.loadingCategories$ = this.store.select<boolean>(\n      selectors.getIsCategoriesLoading\n    );\n\n    this.loadingMovies$ = this.store.select<boolean>(\n      selectors.getIsLoadingAllMovies\n    );\n\n    this.searchValue$ = this.store.select<string>(selectors.getSearchValue);\n\n    this.searchValue$.subscribe((searchValue) => {\n      this.searchValue = searchValue;\n    });\n  }\n\n  search(searchValue: string) {\n    this.searchValue = searchValue;\n    this.store.dispatch(\n      actionsType.GET_SEARCH({ searchValue: this.searchValue })\n    );\n  }\n\n  onGoToMovies(categoryId: number) {\n    this.shared.test = 'mon teste';\n    this.router.navigate([`movies/category/${categoryId}`]);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-2 col-centered\">\n    <app-search\n      [searchName]=\"'search category'\"\n      [searchValue]=\"searchValue$ | async\"\n      (search)=\"search($event)\"\n    ></app-search>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"categories$ | async as categories\">\n  <ng-container\n    *ngIf=\"\n      !(loadingCategories$ | async) && !(loadingMovies$ | async);\n      else loader\n    \"\n  >\n    <app-category-preview\n      (goToMovies)=\"onGoToMovies($event)\"\n      *ngFor=\"let category of categories | titleCategoriesFilter: searchValue\"\n      [category]=\"category\"\n    ></app-category-preview>\n  </ng-container>\n</div>\n<div class=\"row\">\n  <ng-template #loader>\n    <div class=\"col-md-2 col-centered\">\n      <mat-spinner color=\"primary\" diameter=\"80\"> </mat-spinner>\n    </div>\n  </ng-template>\n</div>\n","export * from \"./template/template.component\";\nexport * from \"./categories-list/categories-list.component\";\nexport * from \"./movies-list/movies-list.component\";\nexport * from \"./add-movie/add-movie.component\";\nexport * from \"./update-movie/update-movie.component\";\nexport * from \"./movies-collection/movies-collection.component\";\nexport * from \"./movie-details-container/movie-details-container.component\";\n","import { Component, OnInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { ElementsState } from \"../../store/reducers\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable } from \"rxjs\";\nimport { Movie, Comment } from \"../../models\";\nimport * as selectors from \"../../store/selectors\";\nimport * as actionsType from \"../../store/actions\";\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: \"app-movie-details-container\",\n  templateUrl: \"./movie-details-container.component.html\",\n  styleUrls: [\"./movie-details-container.component.css\"],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MovieDetailsContainerComponent implements OnInit {\n  movie$: Observable<Movie>;\n  loadingCategories$: Observable<boolean>;\n  loadingMovies$: Observable<boolean>;\n  loadingAddOrDeleteMovieToMycollection$: Observable<boolean>;\n  form: FormGroup;\n  comments$: Observable<Comment[]>;\n  loadingComments$: Observable<boolean>;\n  constructor(\n    private store: Store<ElementsState>,\n    private route: ActivatedRoute,\n  ) {\n    //this.moviesService.getCategoriesAndMoviesAfterRefreshPage();\n  }\n\n  ngOnInit(): void {\n    this.movie$ = this.store.select<Movie>(selectors.getMovieById);\n    this.loadingCategories$ = this.store.select<boolean>(\n      selectors.getIsCategoriesLoading\n    );\n    this.loadingMovies$ = this.store.select<boolean>(\n      selectors.getIsLoadingAllMovies\n    );\n    this.loadingAddOrDeleteMovieToMycollection$ = this.store.select<boolean>(\n      selectors.getIsLoadingActionMovie\n    );\n    this.store.dispatch(actionsType.GET_COMMENTS_BY_ID_MOVIE({movieId : parseInt(this.route.snapshot.paramMap.get('movieId'))}));\n    this.comments$ = this.store.select<Comment[]>(selectors.getAllComments);\n    this.comments$.subscribe(data=>console.log(data));\n    this.loadingComments$ = this.store.select<boolean>(selectors.getIsCommentsLoading);\n    this.createForm();\n  }\n\n  OnAddOrDeleteToMyCollection(movieId: number) {\n    this.store.dispatch(\n      actionsType.ADD_OR_DELETE_MOVIE_COLLECTION({ movieId: movieId })\n    );\n  }\n  private createForm() {\n    this.form = new FormGroup({\n      text: new FormControl('',Validators.maxLength(10)),\n    });\n  }\n\n}\n","<div style=\"width: 100%;\"   \n*ngIf=\"!(loadingCategories$ | async) && !(loadingMovies$ | async); else loader\"> \n<ng-container>\n  <div class=\"col-md-4 col-left\" *ngIf=\"!(movie$ | async).selected\">\n    <div>\n      <div *ngIf=\"!(loadingComments$ | async); else loaderComments\">\n        <ng-container>\n          <app-preview-comment></app-preview-comment>\n        </ng-container>\n      </div>\n      <div>\n        <ng-template #loaderComments>\n          <div class=\"col-md-2 col-centered\">\n            <mat-spinner color=\"primary\" diameter=\"80\"> </mat-spinner>\n          </div>\n        </ng-template>\n      </div>\n    </div>\n    <div>\n      <form [formGroup]=\"form\">\n        <app-add-comment \n        [controlText]=\"form.controls.text\">\n        </app-add-comment>\n      </form>\n    </div>\n  </div>\n  <div class=\"col-md-6 col-centered\">\n    <div\n    class=\"card\">\n      <app-movie-details\n        [movie]=\"movie$ | async\"\n        [loadingAddOrDeleteMovieToMycollection]=\"\n          loadingAddOrDeleteMovieToMycollection$ | async\n        \"\n        (addOrDeleteToMyCollection)=\"OnAddOrDeleteToMyCollection($event)\"\n      ></app-movie-details>\n  </div>\n</div>  \n</ng-container>\n</div>\n<div>\n  <ng-template #loader>\n    <div class=\"col-md-2 col-centered\">\n      <mat-spinner color=\"primary\" diameter=\"80\"> </mat-spinner>\n    </div>\n  </ng-template>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Movie } from \"../../models\";\nimport { ElementsState } from \"../../store/reducers\";\nimport * as selectors from \"../../store/selectors\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable, of } from \"rxjs\";\nimport { MoviesService } from \"../../services\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-movies-collection\",\n  templateUrl: \"./movies-collection.component.html\",\n  styleUrls: [\"./movies-collection.component.css\"],\n})\nexport class MoviesCollectionComponent implements OnInit {\n  movies$: Observable<Movie[]>;\n  loadingMovies$: Observable<boolean>;\n  loadingCategories$: Observable<boolean>;\n  loadingDeleteMovieToMycollection$: Observable<boolean>;\n  searchValue$: Observable<string> = of(\"\");\n  searchValue: string;\n\n  constructor(\n    private store: Store<ElementsState>,\n    private moviesService: MoviesService,\n    private router: Router\n  ) {\n    //this.moviesService.getCategoriesAndMoviesAfterRefreshPage();\n  }\n\n  ngOnInit(): void {\n    this.movies$ = this.store.select<Movie[]>(selectors.getMyCollectionMovies);\n    this.loadingCategories$ = this.store.select<boolean>(\n      selectors.getIsCategoriesLoading\n    );\n    this.loadingMovies$ = this.store.select<boolean>(\n      selectors.getIsLoadingAllMovies\n    );\n    this.loadingDeleteMovieToMycollection$ = this.store.select<boolean>(\n      selectors.getIsLoadingActionMovie\n    );\n  }\n\n  search(searchValue: string) {\n    this.searchValue = searchValue;\n  }\n\n  onDetailsMovie(movieId: number) {\n    this.router.navigate([`movies/movie-details/${movieId}`]);\n  }\n}\n","<div *ngIf=\"movies$ | async as movies\">\n  <div class=\"row\">\n    <div class=\"col-md-2 col-centered\">\n      <app-search\n        [searchName]=\"'search movie'\"\n        [searchValue]=\"searchValue$ | async\"\n        (search)=\"search($event)\"\n      ></app-search>\n    </div>\n  </div>\n  <div\n    class=\"row\"\n    *ngIf=\"\n      !(loadingCategories$ | async) && !(loadingMovies$ | async);\n      else loader\n    \"\n  >\n    <ng-container *ngIf=\"movies.length > 0; else noMovie\">\n      <app-movie-preview\n        *ngFor=\"let movie of movies | titleMoviesFilter: searchValue\"\n        [movie]=\"movie\"\n        [parent]=\"'collection'\"\n        (detailsMovie)=\"onDetailsMovie($event)\"\n      ></app-movie-preview>\n    </ng-container>\n  </div>\n\n  <div class=\"row\">\n    <ng-template #loader>\n      <div class=\"col-md-2 col-centered\">\n        <mat-spinner color=\"primary\" diameter=\"80\"> </mat-spinner>\n      </div>\n    </ng-template>\n  </div>\n  <div class=\"row\">\n    <ng-template #noMovie>\n      <div class=\"col-md-2 col-centered\">\n        <p>No movie is in your collection</p>\n      </div>\n    </ng-template>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n  ChangeDetectorRef,\n} from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { MatPaginator } from \"@angular/material/paginator\";\nimport { MatTableDataSource } from \"@angular/material/table\";\n\nimport { Store } from \"@ngrx/store\";\nimport { Observable } from \"rxjs\";\nimport { ElementsState } from \"../../store/reducers\";\nimport * as selectors from \"../../store/selectors\";\nimport { Movie } from \"../../models\";\nimport * as actionsType from \"../../store/actions\";\nimport { of } from \"rxjs\";\nimport { MoviesService } from \"../../services\";\n\n@Component({\n  selector: \"app-movies-list\",\n  templateUrl: \"./movies-list.component.html\",\n  styleUrls: [\"./movies-list.component.css\"],\n})\nexport class MoviesListComponent implements OnInit, OnDestroy {\n  movies$: Observable<Movie[]>;\n  loadingMovies$: Observable<boolean>;\n  loadingCategories$: Observable<boolean>;\n  loadingAction$: Observable<boolean>;\n  searchValue: string;\n  searchValue$: Observable<string> = of(\"\");\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  obs: Observable<any>;\n\n  dataSource: MatTableDataSource<Movie> = new MatTableDataSource<Movie>();\n\n  constructor(\n    private store: Store<ElementsState>,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private moviesService: MoviesService\n  ) {\n    //this.moviesService.getCategoriesAndMoviesAfterRefreshPage();\n  }\n\n  ngOnInit(): void {\n    console.log(\"aaaa\")\n    this.movies$ = this.store.select<Movie[]>(\n      selectors.getSelectedMoviesByIdCategory\n    );\n    this.loadingMovies$ = this.store.select<boolean>(\n      selectors.getIsLoadingAllMovies\n    );\n    this.loadingCategories$ = this.store.select<boolean>(\n      selectors.getIsCategoriesLoading\n    );\n\n    this.loadingAction$ = this.store.select<boolean>(\n      selectors.getIsLoadingActionMovie\n    );\n    this.changeDetectorRef.detectChanges();\n\n    this.movies$.subscribe((movies) => {\n      this.dataSource.data = movies;\n      this.dataSource.paginator = this.paginator;\n    });\n    this.obs = this.dataSource.connect();\n  }\n\n  ngOnDestroy() {\n    if (this.dataSource) {\n      this.dataSource.disconnect();\n    }\n  }\n\n  search(searchValue: string) {\n    this.searchValue = searchValue;\n  }\n  onUpdateMovie(movieId: number) {\n    this.router.navigate([`movies/movie/${movieId}`]);\n  }\n\n  onDeleteMovie(movieId: number) {\n    this.store.dispatch(actionsType.DELETE_MOVIE({ movieId: movieId }));\n  }\n\n  onDetailsMovie(movieId: number) {\n    this.router.navigate([`movies/movie-details/${movieId}`]);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-2 col-centered\">\n    <app-search\n      [searchName]=\"'search movie'\"\n      [searchValue]=\"searchValue$ | async\"\n      (search)=\"search($event)\"\n    ></app-search>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"movies$ | async as movies\">\n  <div\n    *ngIf=\"\n      !(loadingCategories$ | async) && !(loadingMovies$ | async);\n      else loader\n    \"\n  >\n    <ng-container *ngIf=\"movies.length > 0; else noMovie\">\n      <app-movie-preview\n        *ngFor=\"let movie of obs | async | titleMoviesFilter: searchValue\"\n        [movie]=\"movie\"\n        (updateMovie)=\"onUpdateMovie($event)\"\n        (deleteMovie)=\"onDeleteMovie($event)\"\n        (detailsMovie)=\"onDetailsMovie($event)\"\n      ></app-movie-preview>\n    </ng-container>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"loadingAction$ | async\">\n  <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</div>\n<div class=\"row\">\n  <mat-paginator [pageSizeOptions]=\"[6, 9, 12, 18]\"></mat-paginator>\n</div>\n<div class=\"row\">\n  <ng-template #loader>\n    <div class=\"col-md-2 col-centered\">\n      <mat-spinner color=\"primary\" diameter=\"80\"> </mat-spinner>\n    </div>\n  </ng-template>\n</div>\n<div class=\"row\">\n  <ng-template #noMovie>\n    <div class=\"col-md-2 col-centered\">\n      <p>No movie is associated with this category</p>\n    </div>\n  </ng-template>\n</div>\n","import {Component, OnInit, ChangeDetectorRef, OnDestroy} from '@angular/core';\nimport {MediaMatcher} from '@angular/cdk/layout';\nimport * as actionsType from '../../store/actions';\nimport {Store} from '@ngrx/store';\nimport {ElementsState} from '../../store/reducers';\n\n@Component({\n  selector: 'app-template',\n  templateUrl: './template.component.html',\n  styleUrls: ['./template.component.css'],\n})\nexport class TemplateComponent implements OnInit, OnDestroy {\n  collapsedNav: boolean;\n  mobileQuery: MediaQueryList;\n\n  private _mobileQueryListener: () => void;\n\n  constructor(changeDetectorRef: ChangeDetectorRef, media: MediaMatcher, private store: Store<ElementsState>) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n\n  }\n\n  ngOnInit(): void {\n    console.log(\"appel back........\")\n    this.store.dispatch(actionsType.GET_CATEGORIES());\n    this.store.dispatch(actionsType.GET_MOVIES());\n\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n}\n","<mat-drawer-container>\n  <mat-drawer\n    #snav\n    [mode]=\"mobileQuery.matches ? 'over' : 'side'\"\n    [opened]=\"!mobileQuery.matches\"\n    [ngClass]=\"{ 'sidenav-collapsed': collapsedNav && !mobileQuery.matches }\"\n  >\n    <div class=\"sidenav-header\">\n      <span>{{ collapsedNav && !mobileQuery.matches ? \"M\" : \"Movies\" }}</span>\n    </div>\n    <ul>\n      <li>\n        <a routerLink=\"/\">Home<mat-icon>home</mat-icon></a>\n      </li>\n      <li>\n        <a routerLink=\"/movies\"\n          >Categories movies<mat-icon>local_movies</mat-icon></a\n        >\n      </li>\n      <li>\n        <a routerLink=\"/movies/add-movie\"\n          >Add movie<mat-icon>movie_creation</mat-icon></a\n        >\n      </li>\n      <li>\n        <a routerLink=\"/movies/my-collection\"\n          >My collection<mat-icon>collections</mat-icon></a\n        >\n      </li>\n    </ul>\n  </mat-drawer>\n  <mat-drawer-content\n    [ngClass]=\"{ 'sidenav-collapsed': collapsedNav && !mobileQuery.matches }\"\n  >\n    <mat-toolbar>\n      <button\n        mat-icon-button\n        (click)=\"\n          mobileQuery.matches ? snav.toggle() : (collapsedNav = !collapsedNav)\n        \"\n      >\n        <mat-icon>menu</mat-icon>\n      </button>\n    </mat-toolbar>\n    <div class=\"container-fluid\">\n      <router-outlet></router-outlet>\n    </div>\n  </mat-drawer-content>\n</mat-drawer-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router, NavigationEnd } from \"@angular/router\";\nimport { ElementsState } from \"../../store/reducers\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable } from \"rxjs\";\nimport { Movie, Category } from \"../../models\";\nimport * as selectors from \"../../store/selectors\";\nimport { MoviesService } from \"../../services\";\nimport * as actionsType from \"../../store/actions\";\n@Component({\n  selector: \"app-update-movie\",\n  templateUrl: \"./update-movie.component.html\",\n  styleUrls: [\"./update-movie.component.css\"],\n})\nexport class UpdateMovieComponent implements OnInit {\n  movie$: Observable<Movie>;\n  loadingCategories$: Observable<boolean>;\n  loadingMovies$: Observable<boolean>;\n  optionsCategories$: Observable<Category[]>;\n  loadingUpdateMovie$: Observable<boolean>;\n\n  constructor(\n    private store: Store<ElementsState>,\n    private moviesService: MoviesService\n  ) {\n    //this.moviesService.getCategoriesAndMoviesAfterRefreshPage();\n  }\n\n  ngOnInit(): void {\n    this.movie$ = this.store.select<Movie>(selectors.getMovieById);\n    this.loadingCategories$ = this.store.select<boolean>(\n      selectors.getIsCategoriesLoading\n    );\n    this.loadingMovies$ = this.store.select<boolean>(\n      selectors.getIsLoadingAllMovies\n    );\n\n    this.optionsCategories$ = this.store.select<Category[]>(\n      selectors.getAllCategories\n    );\n    this.loadingUpdateMovie$ = this.store.select<boolean>(\n      selectors.getIsLoadingActionMovie\n    );\n  }\n\n  onUpdateMovie(movie: Movie) {\n    this.store.dispatch(actionsType.UPDATE_MOVIE({ movie: movie }));\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-offset-1\">\n    <ng-container\n      *ngIf=\"\n        !(loadingCategories$ | async) && !(loadingMovies$ | async);\n        else loader\n      \"\n    >\n      <app-form-movie\n        [optionsCategories]=\"optionsCategories$ | async\"\n        [movie]=\"movie$ | async\"\n        (addMovie)=\"onUpdateMovie($event)\"\n        [loadingAddMovie]=\"loadingUpdateMovie$ | async\"\n        [action]=\"'update movie'\"\n      ></app-form-movie>\n    </ng-container>\n  </div>\n</div>\n<div class=\"row\">\n  <ng-template #loader>\n    <div class=\"col-md-2 col-centered\">\n      <mat-spinner color=\"primary\" diameter=\"80\"> </mat-spinner>\n    </div>\n  </ng-template>\n</div>\n","export * from \"./movies.module\";\n","import { NgModule } from \"@angular/core\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatProgressBarModule } from \"@angular/material/progress-bar\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatListModule } from \"@angular/material/list\";\nimport { MatDividerModule } from \"@angular/material/divider\";\nimport { MatGridListModule } from \"@angular/material/grid-list\";\nimport { MatProgressButtonsModule } from \"mat-progress-buttons\";\n\nconst MaterialModules = [\n  MatIconModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatCardModule,\n  MatSelectModule,\n  MatProgressSpinnerModule,\n  MatButtonModule,\n  MatToolbarModule,\n  MatProgressButtonsModule,\n  MatSnackBarModule,\n  MatProgressBarModule,\n  MatDialogModule,\n  MatPaginatorModule,\n  MatTableModule,\n  MatSidenavModule,\n  MatListModule,\n  MatDividerModule,\n  MatGridListModule,\n];\n\n@NgModule({\n  imports: MaterialModules,\n  exports: MaterialModules,\n})\nexport class MaterialModule {}\n","import { Injectable } from \"@angular/core\";\nimport { Movie, Category, Comment } from \"../models\";\n\nimport {\n  HttpRequest,\n  HttpResponse,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HTTP_INTERCEPTORS,\n} from \"@angular/common/http\";\nimport { Observable, of, throwError } from \"rxjs\";\nimport { delay, mergeMap, materialize, dematerialize } from \"rxjs/operators\";\n\n// array in local storage for registered users\nlet categoriesStorage: Category[] =\n  JSON.parse(sessionStorage.getItem(\"categories\")) || [];\nlet moviesStorage: Movie[] = JSON.parse(sessionStorage.getItem(\"movies\")) || [];\nlet commentsStorage: Comment[] = JSON.parse(sessionStorage.getItem(\"comments\")) || [];\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n  constructor() {\n    let movies: Movie[] = [\n      {\n        id: 1,\n        categoryId: 1,\n        language: \"Japanese\",\n        recordedYear: 2016,\n        title: \"君の名は\",\n        image: \"https://www.flagsonline.fr/uploads/2016-6-6/420-272/japan.jpg\",\n        specialMention: {\n          firstName: \"makoto\",\n          lastName: \"shinkai\",\n        },\n        description:\n          \"説明：「映画、または映画は、動画や音声を使用して物語を語ったり、人々に何かを教えたりする一種の視覚的コミュニケーションです。ほとんどの人は、一種の娯楽または楽しみの方法として映画を見る（見る）」、\",\n        selected: false,\n      },\n\n      {\n        id: 4,\n        categoryId: 1,\n        language: \"Japanese\",\n        recordedYear: 2017,\n        title: \"打ち上げ花火\",\n        image: \"https://www.flagsonline.fr/uploads/2016-6-6/420-272/japan.jpg\",\n        specialMention: {\n          firstName: \"Nobuyuki\",\n          lastName: \"Takeuchi\",\n        },\n        description:\n          \"説明：「映画、または映画は、動画や音声を使用して物語を語ったり、人々に何かを教えたりする一種の視覚的コミュニケーションです。ほとんどの人は、一種の娯楽または楽しみの方法として映画を見る（見る）」、\",\n        selected: false,\n      },\n      {\n        id: 5,\n        categoryId: 1,\n        language: \"Japanese\",\n        recordedYear: 2018,\n        title: \"あの花\",\n        image: \"https://www.flagsonline.fr/uploads/2016-6-6/420-272/japan.jpg\",\n        specialMention: {\n          firstName: \"Tatsuyuki\",\n          lastName: \"Nagai\",\n        },\n        description:\n          \"説明：「映画、または映画は、動画や音声を使用して物語を語ったり、人々に何かを教えたりする一種の視覚的コミュニケーションです。ほとんどの人は、一種の娯楽または楽しみの方法として映画を見る（見る）」、\",\n        selected: false,\n      },\n      {\n        id: 6,\n        categoryId: 1,\n        language: \"Japanese\",\n        recordedYear: 2019,\n        title: \"エンジェルビーツ\",\n        image: \"https://www.flagsonline.fr/uploads/2016-6-6/420-272/japan.jpg\",\n        specialMention: {\n          firstName: \"Hiro\",\n          lastName: \"Maruyama\",\n        },\n        description:\n          \"説明：「映画、または映画は、動画や音声を使用して物語を語ったり、人々に何かを教えたりする一種の視覚的コミュニケーションです。ほとんどの人は、一種の娯楽または楽しみの方法として映画を見る（見る）」、\",\n        selected: true,\n      },\n      {\n        id: 2,\n        categoryId: 2,\n        language: \"English\",\n        recordedYear: 2017,\n        title: \"Wayne's world\",\n        image: \"https://i.ebayimg.com/images/g/LmIAAOSw3YNXYwX-/s-l300.jpg\",\n        specialMention: {\n          firstName: \"Mike\",\n          lastName: \"Myers\",\n        },\n        description:\n          \"Movies, or films, are a type of visual communication which uses moving pictures and sound to tell stories or teach people something. Most people watch (view) movies as a type of entertainment or a way to have fun\",\n        selected: false,\n      },\n      {\n        id: 7,\n        categoryId: 2,\n        language: \"English\",\n        recordedYear: 2019,\n        title: \"Beavis & Butt-head do America\",\n        image: \"https://i.ebayimg.com/images/g/LmIAAOSw3YNXYwX-/s-l300.jpg\",\n        specialMention: {\n          firstName: \"Mike\",\n          lastName: \"Judge\",\n        },\n        description:\n          \"Movies, or films, are a type of visual communication which uses moving pictures and sound to tell stories or teach people something. Most people watch (view) movies as a type of entertainment or a way to have fun\",\n        selected: true,\n      },\n      {\n        id: 8,\n        categoryId: 2,\n        language: \"English\",\n        recordedYear: 2020,\n        title: \"Human traffic\",\n        image: \"https://i.ebayimg.com/images/g/LmIAAOSw3YNXYwX-/s-l300.jpg\",\n        specialMention: {\n          firstName: \"John\",\n          lastName: \"Simm\",\n        },\n        description:\n          \"Movies, or films, are a type of visual communication which uses moving pictures and sound to tell stories or teach people something. Most people watch (view) movies as a type of entertainment or a way to have fun\",\n        selected: false,\n      },\n      {\n        id: 9,\n        categoryId: 2,\n        language: \"English\",\n        recordedYear: 2019,\n        title: \"Ted\",\n        image: \"https://i.ebayimg.com/images/g/LmIAAOSw3YNXYwX-/s-l300.jpg\",\n        specialMention: {\n          firstName: \"Seth\",\n          lastName: \"MacFarlane\",\n        },\n        description:\n          \"Movies, or films, are a type of visual communication which uses moving pictures and sound to tell stories or teach people something. Most people watch (view) movies as a type of entertainment or a way to have fun\",\n        selected: false,\n      },\n      {\n        id: 13,\n        categoryId: 2,\n        language: \"English\",\n        recordedYear: 2016,\n        title: \"Harold & Kumar\",\n        image: \"https://i.ebayimg.com/images/g/LmIAAOSw3YNXYwX-/s-l300.jpg\",\n        specialMention: {\n          firstName: \"John\",\n          lastName: \"Cho\",\n        },\n        description:\n          \"Movies, or films, are a type of visual communication which uses moving pictures and sound to tell stories or teach people something. Most people watch (view) movies as a type of entertainment or a way to have fun\",\n        selected: true,\n      },\n      {\n        id: 10,\n        categoryId: 2,\n        language: \"English\",\n        recordedYear: 2020,\n        title: \"The big lebowski\",\n        image: \"https://i.ebayimg.com/images/g/LmIAAOSw3YNXYwX-/s-l300.jpg\",\n        specialMention: {\n          firstName: \"Steve\",\n          lastName: \"Buscemi\",\n        },\n        description:\n          \"Movies, or films, are a type of visual communication which uses moving pictures and sound to tell stories or teach people something. Most people watch (view) movies as a type of entertainment or a way to have fun\",\n        selected: false,\n      },\n      {\n        id: 3,\n        categoryId: 3,\n        language: \"English\",\n        recordedYear: 2018,\n        title: \"Whiplash\",\n        image: \"https://i.ebayimg.com/images/g/LmIAAOSw3YNXYwX-/s-l300.jpg\",\n        specialMention: {\n          firstName: \"J.K.\",\n          lastName: \"Simmons\",\n        },\n        description:\n          \"Movies, or films, are a type of visual communication which uses moving pictures and sound to tell stories or teach people something. Most people watch (view) movies as a type of entertainment or a way to have fun\",\n        selected: false,\n      },\n      {\n        id: 11,\n        categoryId: 3,\n        language: \"English\",\n        recordedYear: 2019,\n        title: \"The Filth And The Fury\",\n        image: \"https://i.ebayimg.com/images/g/LmIAAOSw3YNXYwX-/s-l300.jpg\",\n        specialMention: {\n          firstName: \"John\",\n          lastName: \"Lydon\",\n        },\n        description:\n          \"Movies, or films, are a type of visual communication which uses moving pictures and sound to tell stories or teach people something. Most people watch (view) movies as a type of entertainment or a way to have fun\",\n        selected: false,\n      },\n      {\n        id: 12,\n        categoryId: 3,\n        language: \"English\",\n        recordedYear: 2020,\n        title: \"The blues brothers\",\n        image: \"https://i.ebayimg.com/images/g/LmIAAOSw3YNXYwX-/s-l300.jpg\",\n        specialMention: {\n          firstName: \"Dan\",\n          lastName: \"Aykroyd\",\n        },\n        description:\n          \"Movies, or films, are a type of visual communication which uses moving pictures and sound to tell stories or teach people something. Most people watch (view) movies as a type of entertainment or a way to have fun\",\n        selected: false,\n      },\n    ];\n\n    let categories: Category[] = [\n      {\n        id: 1,\n        title: \" Japanese anime\",\n        emoji: \"👨‍👩‍👧‍👦\",\n        emojiStyle: \"emoji-simple-swell\",\n      },\n      {\n        id: 2,\n        title: \"Crazy movies\",\n        emoji: \"🐱‍🐉🐱‍🐉\",\n        emojiStyle: \"emoji-swell\",\n      },\n      {\n        id: 3,\n        title: \"Music themed\",\n        emoji: \"🎵🎵🎵🎵\",\n        emojiStyle: \"emoji-rotate\",\n      },\n      {\n        id: 4,\n        title: \"Father’s Day\",\n        emoji: \"👨👨👨👨\",\n        emojiStyle: \"emoji-swell\",\n      },\n    ];\n    let comments: Comment [] = [{\n      id: 1,\n      idMovie: 2,\n      text: \"Jolie filme je le recommande\"\n    },\n    {\n      id: 2,\n      idMovie: 2,\n      text: \"The best ...\"\n    },\n    {\n      id: 3,\n      idMovie: 2,\n      text: \"Je le recommande\"\n    },\n  ]\n    sessionStorage.setItem(\"categories\", JSON.stringify(categories));\n    sessionStorage.setItem(\"movies\", JSON.stringify(movies));\n    sessionStorage.setItem(\"comments\", JSON.stringify(comments));\n  }\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const { url, method, headers, body } = request;\n\n    // wrap in delayed observable to simulate server api call\n    return of(null)\n      .pipe(mergeMap(handleRoute))\n      .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n      .pipe(delay(1500))\n      .pipe(dematerialize());\n\n    function handleRoute() {\n      switch (true) {\n        case url.endsWith(\"/categories\") && method === \"GET\":\n          return getCategories();\n        case url.endsWith(\"/movies\") && method === \"GET\":\n          return getMovies();\n        case url.endsWith(\"/movie\") && method === \"POST\":\n          return saveMovie();\n        case url.match(/\\/movie\\/\\d+$/) && method === \"PUT\":\n          return updateMovie();\n        case url.match(/\\/movie\\/\\d+$/) && method === \"DELETE\":\n          return deleteMovie();\n        case url.match(/\\/movie\\/\\d+$/) && method === \"POST\":\n          return addMovieToMyCollection();\n        case url.match(/\\/comments\\/\\d+$/) && method === \"GET\":\n            return getCommentsByIdMovie();\n\n        default:\n          // pass through any requests not handled above\n          return next.handle(request);\n      }\n    }\n\n    // route functions\n\n    function getCategories() {\n      return ok(categoriesStorage);\n    }\n\n    function getMovies() {\n      console.log(moviesStorage);\n      return ok(moviesStorage);\n    }\n\n    function getCommentsByIdMovie() {\n      return ok(commentsStorage.reduce((data, comment:Comment) => {\n        if (comment.idMovie === idFromUrl()) {\n          data.push(comment);\n        }\n  \n        return data;\n      }, []));\n    }\n\n    function saveMovie() {\n      const movieSaved: Movie = {\n        id: Math.floor(Math.random() * 1000),\n        categoryId: body.categoryId,\n        title: body.title,\n        language: body.language,\n        recordedYear: body.recordedYear,\n        image: body.image,\n        specialMention: {\n          lastName: body.specialMention.lastName,\n          firstName: body.specialMention.firstName,\n        },\n        description: body.description,\n        selected: body.selected,\n      };\n\n      if (\n        moviesStorage.find((movie: Movie) => movie.title === movieSaved.title)\n      ) {\n        return error(\"movie  \" + movieSaved.title + \"  is already taken\");\n      }\n      moviesStorage = [...moviesStorage];\n      moviesStorage.push(movieSaved);\n      sessionStorage.setItem(\"movies\", JSON.stringify(moviesStorage));\n\n      return ok(movieSaved);\n    }\n\n    function updateMovie() {\n      const movieSaved = body;\n      moviesStorage = moviesStorage.filter(\n        (movie: Movie) => movie.id !== idFromUrl()\n      );\n      moviesStorage.push(movieSaved);\n      sessionStorage.setItem(\"movies\", JSON.stringify(moviesStorage));\n      return ok(\"movie  \" + movieSaved.title + \"  successfully updated\");\n    }\n    function addMovieToMyCollection() {\n      let currentMovie: Movie = moviesStorage.find(\n        (movie: Movie) => movie.id == idFromUrl()\n      );\n\n      moviesStorage = moviesStorage.filter(\n        (movie: Movie) => movie.id !== currentMovie.id\n      );\n\n      currentMovie = { ...currentMovie };\n\n      currentMovie.selected = !currentMovie.selected;\n      moviesStorage.push(currentMovie);\n      sessionStorage.setItem(\"movies\", JSON.stringify(moviesStorage));\n\n      if (currentMovie.selected == true) {\n        return ok(\n          \"movie  \" + currentMovie.title + \"  successfully added to collection\"\n        );\n      } else\n        return ok(\n          \"movie  \" + currentMovie.title + \"  successfully remove to collection\"\n        );\n    }\n\n    function deleteMovie() {\n      moviesStorage = moviesStorage.filter(\n        (movie: Movie) => movie.id !== idFromUrl()\n      );\n      sessionStorage.setItem(\"movies\", JSON.stringify(moviesStorage));\n      return ok(\"movie successfully deleted\");\n    }\n\n    // helper functions\n\n    function ok(body?) {\n      return of(new HttpResponse({ status: 200, body }));\n    }\n\n    function serverError() {\n      return throwError({\n        status: 500,\n        error: { message: \"An error occured\" },\n      });\n    }\n\n    function error(message) {\n      return throwError({ error: { message } });\n    }\n\n    function idFromUrl() {\n      const urlParts = url.split(\"/\");\n      return parseInt(urlParts[urlParts.length - 1]);\n    }\n  }\n}\n\nexport const fakeBackendProvider = {\n  // use fake backend in place of Http service for backend-less development\n  provide: HTTP_INTERCEPTORS,\n  useClass: FakeBackendInterceptor,\n  multi: true,\n};\n","export * from \"./fake-backend.service\";\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { routes } from \"./movies.routes\";\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MoviesRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  TemplateComponent,\n  CategoriesListComponent,\n  MoviesListComponent,\n  AddMovieComponent,\n  UpdateMovieComponent,\n  MoviesCollectionComponent,\n  MovieDetailsContainerComponent,\n} from \"./containers\";\nimport {\n  CategoryPreviewComponent,\n  MoviePreviewComponent,\n  SearchComponent,\n  FormMovieComponent,\n  SelectComponent,\n  SelectTabObjectComponent,\n  ConfirmationDialogComponent,\n  MovieDetailsComponent,\n  AddCommentComponent,\n  PreviewCommentComponent\n} from \"./components\";\nimport { MaterialModule } from \"./material.module\";\nimport { MoviesRoutingModule } from \"./movies-routing.module\";\nimport { MoviesService } from \"./services\";\nimport { reducers } from \"./store/reducers\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { EffectsModule } from \"@ngrx/effects\";\nimport { effects } from \"./store/effects\";\nimport { TitleCategoriesFilterPipe, TitleMoviesFilterPipe } from \"./pipes\";\nimport { fakeBackendProvider } from \"./mocks\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MediaMatcher } from \"@angular/cdk/layout\";\nimport { SharedModule } from \"../shared\";\n@NgModule({\n  declarations: [\n    TemplateComponent,\n    CategoriesListComponent,\n    CategoryPreviewComponent,\n    SearchComponent,\n    TitleCategoriesFilterPipe,\n    MoviesListComponent,\n    MoviePreviewComponent,\n    TitleMoviesFilterPipe,\n    AddMovieComponent,\n    FormMovieComponent,\n    SelectComponent,\n    SelectComponent,\n    SelectTabObjectComponent,\n    UpdateMovieComponent,\n    ConfirmationDialogComponent,\n    MoviesCollectionComponent,\n    MovieDetailsComponent,\n    MovieDetailsContainerComponent,\n    AddCommentComponent,\n    PreviewCommentComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MoviesRoutingModule,\n    HttpClientModule,\n    MaterialModule,\n    //SharedModule,\n    StoreModule.forRoot({}),\n    StoreModule.forFeature(\"elements\", reducers),\n    EffectsModule.forRoot(),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [MoviesService, fakeBackendProvider, MediaMatcher],\n  entryComponents: [ConfirmationDialogComponent],\n})\nexport class MoviesModule {}\n","import { Routes } from \"@angular/router\";\nimport {\n  AddMovieComponent,\n  CategoriesListComponent,\n  MoviesListComponent,\n  UpdateMovieComponent,\n  MovieDetailsContainerComponent,\n  TemplateComponent,\n  MoviesCollectionComponent,\n} from \"./containers\";\n\nexport const routes: Routes = [\n  {\n    path: \"\",\n\n    component: TemplateComponent,\n\n    children: [\n      {\n        path: \"\",\n        component: CategoriesListComponent,\n      },\n      {\n        path: \"category/:categoryId\",\n        component: MoviesListComponent,\n      },\n      {\n        path: \"add-movie\",\n        component: AddMovieComponent,\n      },\n      {\n        path: \"movie/:movieId\",\n        component: UpdateMovieComponent,\n      },\n      {\n        path: \"movie-details/:movieId\",\n        component: MovieDetailsContainerComponent,\n      },\n      {\n        path: \"my-collection\",\n        component: MoviesCollectionComponent,\n      },\n    ],\n  },\n];\n","export * from \"./title-categories-filter.pipe\";\nexport * from \"./title-movies-filter.pipe\";\n","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { Category } from \"../models\";\nimport { categoriesReducer } from \"../store/reducers\";\n@Pipe({\n  name: \"titleCategoriesFilter\",\n})\nexport class TitleCategoriesFilterPipe implements PipeTransform {\n  categories: Category[] = [];\n  transform(categories: Category[], searchValue: string): Category[] {\n    if (!searchValue) return categories;\n    /**\n     * filtrer les categories par titres\n     */\n    this.categories = categories.filter(\n      (category) =>\n        category.title.toLowerCase().indexOf(searchValue.toLowerCase()) > -1\n    );\n    return this.categories;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { Movie } from \"../models\";\n@Pipe({\n  name: \"titleMoviesFilter\",\n})\nexport class TitleMoviesFilterPipe implements PipeTransform {\n  movies: Movie[] = [];\n  transform(movies: Movie[], searchValue: string): Movie[] {\n    if (!searchValue) return movies;\n    /**\n     * filtrer les movies par titres\n     */\n    this.movies = movies.filter(\n      (movie) =>\n        movie.title.toLowerCase().indexOf(searchValue.toLowerCase()) > -1\n    );\n    return this.movies;\n  }\n}\n","export * from \"./movies.service\";\n","import { Injectable } from \"@angular/core\";\nimport { Movie } from \"../models\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { filter } from \"rxjs/operators\";\nimport { Router, NavigationEnd } from \"@angular/router\";\nimport * as actionsType from \"../store/actions\";\nimport { ElementsState } from \"../store/reducers\";\nimport { Store } from \"@ngrx/store\";\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MoviesService {\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private store: Store<ElementsState>\n  ) {}\n\n  getCategories() {\n    return this.http.get(\"http://localhost:4200:/categories\");\n  }\n\n  getMovies() {\n    return this.http.get(\"http://localhost:4200:/movies\");\n  }\n\n  getCommentsByIdMovie(movieId: number) {\n    return this.http.get(\"http://localhost:4200:/comments/\"+ movieId);\n  }\n\n  addMovie(movie: Movie) {\n    return this.http.post(\"http://localhost:4200:/movie\", movie);\n  }\n\n  updateMovie(movie: Movie) {\n    return this.http.put(\"http://localhost:4200:/movie/\" + movie.id, movie);\n  }\n\n  deleteMovie(movieId: number) {\n    return this.http.delete(\"http://localhost:4200:/movie/\" + movieId);\n  }\n  addMovieToMyCollection(movieId: number) {\n    return this.http.post(\"http://localhost:4200:/movie/\" + movieId, {});\n  }\n\n  /**\n  getCategoriesAndMoviesAfterRefreshPage() {\n    this.router.events\n      .pipe(filter((rs): rs is NavigationEnd => rs instanceof NavigationEnd))\n      .subscribe((event) => {\n        if (event.id === 1 && event.url === event.urlAfterRedirects) {\n          this.store.dispatch(actionsType.GET_CATEGORIES());\n          this.store.dispatch(actionsType.GET_MOVIES());\n        }\n      });\n  }\n   **/\n}\n","import { createAction, props } from \"@ngrx/store\";\nimport { Category } from \"../../models\";\n\nexport const GET_CATEGORIES = createAction(\"[Category] Get_Categories\");\n\nexport const GET_CATEGORIES_SUCCESS = createAction(\n  \"[Category] Get_Categories_success\",\n  props<{ categories: Category[] }>()\n);\n\nexport const GET_CATEGORIES_ERROR = createAction(\n  \"[Category] Get_Categories_error\",\n  props<{ error: string }>()\n);\n\nexport const GET_SEARCH = createAction(\n  \"[Category] Get_Search\",\n  props<{ searchValue: string }>()\n);\n","import { createAction, props } from \"@ngrx/store\";\nimport { Comment } from \"../../models\";\n\nexport const GET_COMMENTS_BY_ID_MOVIE = createAction(\"[Comment] Get_Comments_By_Id_Movie\",props<{ movieId: number }>());\n\nexport const GET_COMMENTS_BY_ID_MOVIE_SUCCESS = createAction(\n  \"[Comment] Get_Comments_By_Id_Movie_Success\",\n  props<{ comments: Comment[] }>()\n);\n\nexport const GET_COMMENTS_BY_ID_MOVIE_ERROR = createAction(\n  \"[Comment] Get_Comments_By_Id_Movie_Error\",\n  props<{ error: string }>()\n);\n\n\n","export * from \"./categories.action\";\nexport * from \"./movies.actions\";\nexport * from \"./comments.action\"\n","import { createAction, props } from \"@ngrx/store\";\nimport { Movie } from \"../../models\";\n\nexport const GET_MOVIES = createAction(\"[Movie] Get_Movies\");\n\nexport const GET_MOVIES_SUCCESS = createAction(\n  \"[Movie] Get_Movies_success\",\n  props<{ movies: Movie[] }>()\n);\n\nexport const GET_MOVIES_ERROR = createAction(\n  \"[Movie] Get_Movies_error\",\n  props<{ error: string }>()\n);\n\nexport const ADD_MOVIE = createAction(\n  \"[Movie] Add_Movie\",\n  props<{ movie: Movie }>()\n);\n\nexport const ADD_MOVIE_SUCCESS = createAction(\n  \"[Movie] Add_Movie_success\",\n  props<{ movie: Movie }>()\n);\n\nexport const ADD_MOVIE_ERROR = createAction(\n  \"[Movie] Add_Movie_error\",\n  props<{ error: string }>()\n);\n\nexport const UPDATE_MOVIE = createAction(\n  \"[Movie] Update_Movie\",\n  props<{ movie: Movie }>()\n);\n\nexport const UPDATE_MOVIE_SUCCESS = createAction(\n  \"[Movie] Update_Movie_success\",\n  props<{ reply: string }>()\n);\n\nexport const UPDATE_MOVIE_ERROR = createAction(\n  \"[Movie] Update_Movie_error\",\n  props<{ error: string }>()\n);\n\nexport const DELETE_MOVIE = createAction(\n  \"[Movie] Delete_Movie\",\n  props<{ movieId: number }>()\n);\n\nexport const DELETE_MOVIE_SUCCESS = createAction(\n  \"[Movie] Delete_Movie_success\",\n  props<{ reply: string }>()\n);\n\nexport const DELETE_MOVIE_ERROR = createAction(\n  \"[Movie] Delete_Movie_error\",\n  props<{ error: string }>()\n);\n\nexport const ADD_OR_DELETE_MOVIE_COLLECTION = createAction(\n  \"[Movie] Add_Or_Delete_Movie_Collection\",\n  props<{ movieId: number }>()\n);\n\nexport const ADD_OR_DELETE_MOVIE_COLLECTION_SUCCESS = createAction(\n  \"[Movie] Add_Or_Delete_Movie_Collection_success\",\n  props<{ reply: string }>()\n);\n\nexport const ADD_OR_DELETE_MOVIE_COLLECTION_ERROR = createAction(\n  \"[Movie] Add_Or_Delete_Movie_Collection_error\",\n  props<{ error: string }>()\n);\n","import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Action } from \"@ngrx/store\";\n\nimport { of, Observable } from \"rxjs\";\nimport { map, mergeMap, catchError } from \"rxjs/operators\";\nimport * as categoriesActions from \"../actions\";\nimport { MoviesService } from \"../../services/movies.service\";\nimport { Category } from \"../../models\";\n@Injectable()\nexport class CategoriesEffect {\n  constructor(\n    private actions$: Actions,\n    private moviesService: MoviesService\n  ) {}\n\n  loadCategories$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(categoriesActions.GET_CATEGORIES),\n      mergeMap(() =>\n        this.moviesService.getCategories().pipe(\n          map(\n            (categories: Category[]) => (\n              console.log(categories),\n              categoriesActions.GET_CATEGORIES_SUCCESS({\n                categories: categories,\n              })\n            )\n          ),\n          catchError((err) =>\n            of(\n              categoriesActions.GET_CATEGORIES_ERROR({\n                error: err.error.message,\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n}\n","import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Action } from \"@ngrx/store\";\n\nimport { of, Observable } from \"rxjs\";\nimport { map, mergeMap, catchError } from \"rxjs/operators\";\nimport * as commentsActions from \"../actions\";\nimport { MoviesService } from \"../../services/movies.service\";\nimport { Comment } from \"../../models\";\n@Injectable()\nexport class CommentsEffect {\n  constructor(\n    private actions$: Actions,\n    private moviesService: MoviesService\n  ) {}\n\n  loadCommentsByIdMovie$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(commentsActions.GET_COMMENTS_BY_ID_MOVIE),\n      mergeMap((data) =>\n        this.moviesService.getCommentsByIdMovie(data.movieId).pipe(\n          map(\n            (comments: Comment[]) => (\n              commentsActions.GET_COMMENTS_BY_ID_MOVIE_SUCCESS({\n                comments: comments,\n              })\n            )\n          ),\n          catchError((err) =>\n            of(\n              commentsActions.GET_COMMENTS_BY_ID_MOVIE_ERROR({\n                error: err.error.message,\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n}\n","import { CategoriesEffect } from \"./categories.effect\";\nimport { MoviesEffect } from \"./movies.effects\";\nimport {CommentsEffect} from \"./comments.effect\";\n\nexport const effects: any[] = [CategoriesEffect, MoviesEffect, CommentsEffect];\n","import { from } from \"rxjs\";\n\nexport * from \"./effects\";\nexport * from \"./categories.effect\";\nexport * from \"./movies.effects\";\nexport * from \"./comments.effect\";\n","import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Action } from \"@ngrx/store\";\n\nimport { Observable, of } from \"rxjs\";\nimport {map, mergeMap, catchError, tap} from 'rxjs/operators';\nimport * as moviesActions from \"../actions\";\nimport { MoviesService } from \"../../services/movies.service\";\nimport { Movie } from \"../../models\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\nimport {Router} from '@angular/router';\n\n@Injectable()\nexport class MoviesEffect {\n  constructor(\n    private actions$: Actions,\n    private moviesService: MoviesService,\n    private snackBar: MatSnackBar,\n    private router: Router\n  ) {}\n\n  loadMovies$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(moviesActions.GET_MOVIES),\n      mergeMap(() =>\n        this.moviesService.getMovies().pipe(\n          map(\n            (movies: Movie[]) => (\n              console.log(movies),\n              moviesActions.GET_MOVIES_SUCCESS({\n                movies: movies,\n              })\n            )\n          ),\n          catchError((err) =>\n            of(moviesActions.GET_MOVIES_ERROR({ error: err.error.message }))\n          )\n        )\n      )\n    )\n  );\n\n  addMovies$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(moviesActions.ADD_MOVIE),\n      mergeMap(\n        (data) => (\n          console.log(data),\n          this.moviesService.addMovie(data.movie).pipe(\n            map(\n              (movie: Movie) => (\n                this.snackBar.open(\n                  \"movie  \" + movie.title + \"  successfully added\",\n                  undefined,\n                  {\n                    duration: 5000,\n                    horizontalPosition: \"end\",\n                    verticalPosition: \"bottom\",\n                  }\n                ),\n                console.log(movie),\n                moviesActions.ADD_MOVIE_SUCCESS({\n                  movie: movie,\n                })\n              )\n            ),\n            tap(() => this.router.navigate([`movies/category/${data.movie.categoryId}`])),\n            catchError(\n              (err) => (\n                console.log(err),\n                this.snackBar.open(err.error.message, undefined, {\n                  duration: 5000,\n                  horizontalPosition: \"end\",\n                  verticalPosition: \"bottom\",\n                }),\n                of(moviesActions.ADD_MOVIE_ERROR({ error: err.error.message }))\n              )\n            )\n          )\n        )\n      )\n    )\n  );\n\n  updateMovies$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(moviesActions.UPDATE_MOVIE),\n      mergeMap(\n        (data) => (\n          console.log(data),\n          this.moviesService.updateMovie(data.movie).pipe(\n            map(\n              (reply: string) => (\n                this.snackBar.open(reply, undefined, {\n                  duration: 5000,\n                  horizontalPosition: \"end\",\n                  verticalPosition: \"bottom\",\n                }),\n                console.log(reply),\n                moviesActions.UPDATE_MOVIE_SUCCESS({\n                  reply: reply,\n                })\n              )\n            ),\n            catchError(\n              (err) => (\n                console.log(err),\n                this.snackBar.open(err.error.message, undefined, {\n                  duration: 5000,\n                  horizontalPosition: \"end\",\n                  verticalPosition: \"bottom\",\n                }),\n                of(\n                  moviesActions.UPDATE_MOVIE_ERROR({ error: err.error.message })\n                )\n              )\n            )\n          )\n        )\n      )\n    )\n  );\n\n  deleteMovies$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(moviesActions.DELETE_MOVIE),\n      mergeMap((data) =>\n        this.moviesService.deleteMovie(data.movieId).pipe(\n          map(\n            (reply: string) => (\n              this.snackBar.open(reply, undefined, {\n                duration: 5000,\n                horizontalPosition: \"end\",\n                verticalPosition: \"bottom\",\n              }),\n              console.log(reply),\n              moviesActions.DELETE_MOVIE_SUCCESS({\n                reply: reply,\n              })\n            )\n          ),\n          catchError(\n            (err) => (\n              console.log(err),\n              this.snackBar.open(err.error.message, undefined, {\n                duration: 5000,\n                horizontalPosition: \"end\",\n                verticalPosition: \"bottom\",\n              }),\n              of(moviesActions.DELETE_MOVIE_ERROR({ error: err.error.message }))\n            )\n          )\n        )\n      )\n    )\n  );\n  addMovieToMyCollection$: Observable<Action> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(moviesActions.ADD_OR_DELETE_MOVIE_COLLECTION),\n      mergeMap(\n        (data) => (\n          console.log(data),\n          this.moviesService.addMovieToMyCollection(data.movieId).pipe(\n            map(\n              (reply: string) => (\n                this.snackBar.open(reply, undefined, {\n                  duration: 5000,\n                  horizontalPosition: \"end\",\n                  verticalPosition: \"bottom\",\n                }),\n                console.log(reply),\n                moviesActions.ADD_OR_DELETE_MOVIE_COLLECTION_SUCCESS({\n                  reply: reply,\n                })\n              )\n            ),\n            catchError(\n              (err) => (\n                console.log(err),\n                this.snackBar.open(err.error.message, undefined, {\n                  duration: 5000,\n                  horizontalPosition: \"end\",\n                  verticalPosition: \"bottom\",\n                }),\n                of(\n                  moviesActions.ADD_OR_DELETE_MOVIE_COLLECTION_ERROR({\n                    error: err.error.message,\n                  })\n                )\n              )\n            )\n          )\n        )\n      )\n    )\n  );\n}\n","import { Category } from \"../../models\";\nimport { Action, createReducer, on } from \"@ngrx/store\";\nimport * as categoriesAction from \"../actions\";\nexport interface categoriesState {\n  categories: Category[];\n  loading: boolean;\n  error: string;\n}\n\nexport interface searchState {\n  serachValue: string;\n}\n\nconst initCategoriesState: categoriesState = {\n  categories: [],\n  loading: false,\n  error: \"\",\n};\n\nconst initSearchState: searchState = {\n  serachValue: \"\",\n};\n\nconst newStateSearch = (state: searchState, newData: searchState) => {\n  return Object.assign({}, state, newData);\n};\n\nconst reducerCategories = createReducer(\n  initCategoriesState,\n  on(categoriesAction.GET_CATEGORIES, (state) => ({ ...state, loading: true })),\n  on(categoriesAction.GET_CATEGORIES_SUCCESS, (state, { categories }) => ({\n    ...state,\n    categories: categories,\n    loading: false,\n  })),\n  on(categoriesAction.GET_CATEGORIES_ERROR, (state, { error }) => ({\n    ...state,\n    loading: false,\n    error: error,\n  }))\n);\n\nconst reducerSearch = createReducer(\n  initSearchState,\n  on(categoriesAction.GET_SEARCH, (state, { searchValue }) => ({\n    ...state,\n    serachValue: searchValue,\n  }))\n);\n\nexport function categoriesReducer(\n  state: categoriesState | undefined,\n  action: Action\n) {\n  return reducerCategories(state, action);\n}\n\nexport function searchReducer(state: searchState | undefined, action: Action) {\n  return reducerSearch(state, action);\n}\n\nexport const getAllCategories = (state: categoriesState): Category[] =>\n  state.categories;\nexport const getIsCategoriesLoading = (state: categoriesState): boolean =>\n  state.loading;\nexport const getIsErrorLoadCategories = (state: categoriesState): string =>\n  state.error;\n\nexport const getSearch = (state: searchState): string => state.serachValue;\n","import { Comment } from \"../../models\";\r\nimport { Action, createReducer, on } from \"@ngrx/store\";\r\nimport * as commentsAction from \"../actions\";\r\n\r\nexport interface commentsState {\r\n    comments: Comment[];\r\n    loading: boolean;\r\n    error: string;\r\n}\r\n\r\nconst initCommentsState:commentsState= {\r\n    comments: [],\r\n    loading: false,\r\n    error: \"\"\r\n};\r\n\r\nconst reducerComments = createReducer (\r\n    initCommentsState,\r\n    on(commentsAction.GET_COMMENTS_BY_ID_MOVIE, (state,{ movieId }) => {\r\n        return {...state, loading: true}\r\n    }),\r\n    on (commentsAction.GET_COMMENTS_BY_ID_MOVIE_SUCCESS, (state, {comments})=> {\r\n        return {...state, comments: comments, loading: false}\r\n    }),\r\n    on (commentsAction.GET_COMMENTS_BY_ID_MOVIE_ERROR, (state, {error})=> {\r\n        return {...state, loading: false, error: error}\r\n    })\r\n)\r\n\r\nexport function commentsReducer (\r\n    state: commentsState | undefined,\r\n    action: Action\r\n) {\r\n    return reducerComments (state, action)\r\n}\r\n\r\nexport const getAllComments = (state: commentsState): Comment [] => state.comments;\r\nexport const getIsCommentsLoading = (state: commentsState): boolean => state.loading;\r\nexport const getIsErrorLoadComments = (state: commentsState): string => state.error;","import { ActionReducerMap } from \"@ngrx/store\";\nimport * as categoriesReducer from \"./categories.reducer\";\nimport * as moviesReducer from \"./movies.reducer\";\nimport * as commentsReducer from \"./comments.reducer\";\n\n// State de notre feature\nexport interface ElementsState {\n  categories: categoriesReducer.categoriesState;\n  searchCategory: categoriesReducer.searchState;\n  movies: moviesReducer.moviesState;\n  comments: commentsReducer.commentsState;\n}\n\n// Reducers pour notre state\nexport const reducers: ActionReducerMap<ElementsState> = {\n  categories: categoriesReducer.categoriesReducer,\n  searchCategory: categoriesReducer.searchReducer,\n  movies: moviesReducer.moviesReducer,\n  comments: commentsReducer.commentsReducer\n};\n","export * from \"./categories.reducer\";\nexport * from \"./elements.reducer\";\nexport * from \"./movies.reducer\";\nexport * from \"./comments.reducer\";\n","import { Action, createReducer, on } from \"@ngrx/store\";\nimport { Movie } from \"../../models\";\nimport * as moviesAction from \"../actions\";\n\nexport interface moviesState {\n  movies: Movie[];\n  currentMovie: Movie;\n  movieId: number;\n  loadingAllMovies: boolean;\n  loadingActionMovie: boolean;\n  success: string;\n  error: string;\n}\n\nconst initMoviesState: moviesState = {\n  movies: [],\n  currentMovie: null,\n  movieId: null,\n  loadingAllMovies: false,\n  loadingActionMovie: false,\n  error: \"\",\n  success: \"\",\n};\n\nconst reducerMovies = createReducer(\n  initMoviesState,\n  on(moviesAction.GET_MOVIES, (state) => {\n    return {\n      ...state,\n      loadingAllMovies: true,\n    };\n  }),\n  on(moviesAction.GET_MOVIES_SUCCESS, (state, { movies }) => {\n    return {\n      ...state,\n      movies: movies,\n      loadingAllMovies: false,\n    };\n  }),\n  on(moviesAction.GET_MOVIES_ERROR, (state, { error }) => {\n    return {\n      ...state,\n      loadingAllMovies: false,\n      error: error,\n    };\n  }),\n  on(moviesAction.ADD_MOVIE, (state, { movie }) => {\n    return { ...state, currentMovie: movie, loadingActionMovie: true };\n  }),\n  on(moviesAction.ADD_MOVIE_SUCCESS, (state, { movie }) => {\n    const currentMovies: Movie[] = [...state.movies];\n\n    currentMovies.push(movie);\n    return { ...state, movies: currentMovies, loadingActionMovie: false };\n  }),\n  on(moviesAction.ADD_MOVIE_ERROR, (state, { error }) => {\n    return { ...state, loadingActionMovie: false, error: error };\n  }),\n  on(moviesAction.UPDATE_MOVIE, (state, { movie }) => {\n    return { ...state, currentMovie: movie, loadingActionMovie: true };\n  }),\n  on(moviesAction.UPDATE_MOVIE_SUCCESS, (state, { reply }) => {\n    const indexMovieUpdated = state.movies.findIndex(\n      (movie) => movie.id === state.currentMovie.id\n    );\n    let currentMovies: Movie[] = [...state.movies];\n    currentMovies[indexMovieUpdated] = state.currentMovie;\n\n    return {\n      ...state,\n      movies: currentMovies,\n      success: reply,\n      loadingActionMovie: false,\n    };\n  }),\n  on(moviesAction.UPDATE_MOVIE_ERROR, (state, { error }) => {\n    return { ...state, loadingActionMovie: false, error: error };\n  }),\n  on(moviesAction.DELETE_MOVIE, (state, { movieId }) => {\n    return { ...state, movieId: movieId, loadingActionMovie: true };\n  }),\n  on(moviesAction.DELETE_MOVIE_SUCCESS, (state, { reply }) => {\n    const currentMovies: Movie[] = state.movies.filter(\n      (movie) => movie.id !== state.movieId\n    );\n    return {\n      ...state,\n      movies: currentMovies,\n      success: reply,\n      loadingActionMovie: false,\n    };\n  }),\n  on(moviesAction.DELETE_MOVIE_ERROR, (state, { error }) => {\n    return { ...state, loadingActionMovie: false, error: error };\n  }),\n  on(moviesAction.ADD_OR_DELETE_MOVIE_COLLECTION, (state, { movieId }) => {\n    return { ...state, movieId: movieId, loadingActionMovie: true };\n  }),\n  on(\n    moviesAction.ADD_OR_DELETE_MOVIE_COLLECTION_SUCCESS,\n    (state, { reply }) => {\n      let currentMovie: Movie = state.movies.find(\n        (movie: Movie) => movie.id == state.movieId\n      );\n\n      currentMovie = { ...currentMovie };\n\n      currentMovie.selected = !currentMovie.selected;\n\n      const currentMovies: Movie[] = state.movies.map((movie) => {\n        if (movie.id === currentMovie.id) {\n          movie = currentMovie;\n        }\n        return movie;\n      });\n\n      return {\n        ...state,\n        movies: currentMovies,\n        success: reply,\n        loadingActionMovie: false,\n      };\n    }\n  ),\n  on(moviesAction.ADD_OR_DELETE_MOVIE_COLLECTION_ERROR, (state, { error }) => {\n    return { ...state, loadingActionMovie: false, error: error };\n  })\n);\n\nexport function moviesReducer(state: moviesState | undefined, action: Action) {\n  return reducerMovies(state, action);\n}\n\nexport const getAllMovies = (state: moviesState): Movie[] => state.movies;\n\nexport const getIsLoadingAllMovies = (state: moviesState): boolean =>\n  state.loadingAllMovies;\nexport const getIsLoadingActionMovie = (state: moviesState): boolean =>\n  state.loadingActionMovie;\n\nexport const getError = (state: moviesState): string => state.error;\n\nexport const getSuccess = (state: moviesState): string => state.success;\n","import { createSelector } from \"@ngrx/store\";\nimport { ElementsState } from \"../reducers\";\nimport * as categoriesReducer from \"../reducers/categories.reducer\";\nimport { getElementsState } from \"./elements.selector\";\n\nconst getCategoriesState = createSelector(\n  getElementsState,\n  (state: ElementsState) => state.categories\n);\n\nconst getSearchState = createSelector(\n  getElementsState,\n  (state: ElementsState) => state.searchCategory\n);\n\nexport const getAllCategories = createSelector(\n  getCategoriesState,\n  categoriesReducer.getAllCategories\n);\n\nexport const getIsCategoriesLoading = createSelector(\n  getCategoriesState,\n  categoriesReducer.getIsCategoriesLoading\n);\n\nexport const getIsErrorLoadCategories = createSelector(\n  getCategoriesState,\n  categoriesReducer.getIsErrorLoadCategories\n);\n\nexport const getSearchValue = createSelector(\n  getSearchState,\n  categoriesReducer.getSearch\n);\n","import { from } from \"rxjs\";\r\nimport {createSelector} from \"@ngrx/store\";\r\nimport {ElementsState} from \"../reducers\";\r\nimport * as commentsReduccer from \"../reducers/comments.reducer\";\r\nimport {getElementsState} from \"./elements.selector\";\r\n\r\nconst getCommentsState = createSelector (getElementsState, (state: ElementsState) => state.comments);\r\n\r\nexport const getAllComments = createSelector (getCommentsState, commentsReduccer.getAllComments);\r\n\r\nexport const getIsCommentsLoading = createSelector (getCommentsState, commentsReduccer.getIsCommentsLoading);\r\n\r\nexport const getIsErrorLoadComments = createSelector (getCommentsState, commentsReduccer.getIsErrorLoadComments);\r\n","import { createFeatureSelector } from \"@ngrx/store\";\nimport { ElementsState } from \"../reducers\";\n\n// globalState\nexport const getElementsState = createFeatureSelector<ElementsState>(\n  \"elements\"\n);\n","export * from \"./categories.selector\";\nexport * from \"./movies.selector\";\nexport * from \"./comments.selector\";\n","import { createSelector } from \"@ngrx/store\";\nimport { ElementsState } from \"../reducers\";\nimport * as moviesReducer from \"../reducers/movies.reducer\";\nimport { getElementsState } from \"./elements.selector\";\nimport { getRouter, MyRouterStateSnapshot } from \"../../../shared/router-store\";\nimport { Movie } from \"../../models\";\n\nconst getMoviesState = createSelector(\n  getElementsState,\n  (state: ElementsState) => state.movies\n);\n\nexport const getAllMovies = createSelector(\n  getMoviesState,\n  moviesReducer.getAllMovies\n);\n\nexport const getSelectedMoviesByIdCategory = createSelector(\n  getRouter,\n  getAllMovies,\n  (router: MyRouterStateSnapshot, movies: Movie[]) => {\n    return movies.reduce((data, movie) => {\n      if (movie.categoryId == router.params[\"categoryId\"]) {\n        data.push(movie);\n      }\n\n      return data;\n    }, []);\n  }\n);\n\nexport const getMovieById = createSelector(\n  getRouter,\n  getAllMovies,\n  (router: MyRouterStateSnapshot, movies: Movie[]) => {\n    return movies.find((movie) => movie.id == router.params[\"movieId\"]);\n  }\n);\n\nexport const getMyCollectionMovies = createSelector(\n  getAllMovies,\n  (movies: Movie[]) => {\n    return movies.filter((movie) => movie.selected == true);\n  }\n);\n\nexport const getIsLoadingAllMovies = createSelector(\n  getMoviesState,\n  moviesReducer.getIsLoadingAllMovies\n);\n\nexport const getIsLoadingActionMovie = createSelector(\n  getMoviesState,\n  moviesReducer.getIsLoadingActionMovie\n);\n\nexport const getError = createSelector(getMoviesState, moviesReducer.getError);\nexport const getSuccess = createSelector(\n  getMoviesState,\n  moviesReducer.getSuccess\n);\n","import { RouterStateSerializer } from '@ngrx/router-store';\nimport { MyRouterStateSnapshot } from './router.state';\nimport { RouterStateSnapshot } from '@angular/router';\n\n\nexport class CustomRouterStateSerializer implements RouterStateSerializer<MyRouterStateSnapshot> {\n\tserialize(routerState: RouterStateSnapshot): MyRouterStateSnapshot {\n\t\tconst routerStateSnapshot: MyRouterStateSnapshot = {\n\t\t\turl: routerState.url,\n\t\t\tparams: null,\n\t\t\tqueryParams: null\n\t\t};\n\n\t\tlet childRoute = routerState.root;\n\t\twhile (childRoute.firstChild) {\n\t\t\tchildRoute = childRoute.firstChild;\n\t\t}\n\n\t\trouterStateSnapshot.params = childRoute.params;\n\t\trouterStateSnapshot.queryParams = childRoute.queryParams;\n\t\treturn routerStateSnapshot;\n\t}\n}\n","export * from \"./router.state\";\nexport * from \"./custom-router-state.serializer\";\n","import { RouterReducerState, routerReducer } from \"@ngrx/router-store\";\nimport { Params } from \"@angular/router\";\nimport {\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n} from \"@ngrx/store\";\n\nexport interface MyRouterStateSnapshot {\n  url: string;\n  params: Params;\n  queryParams: Params;\n}\n\nexport interface RouterState {\n  routerReducerState: RouterReducerState<MyRouterStateSnapshot>;\n}\n\nexport const routerReducers: ActionReducerMap<RouterState> = {\n  routerReducerState: routerReducer,\n};\n\nexport const getRouterState = createFeatureSelector<\n  RouterReducerState<MyRouterStateSnapshot>\n>(\"router\");\nexport const getRouter = createSelector(\n  getRouterState,\n  (routerState: any) => routerState.routerReducerState.state\n);\n"]}